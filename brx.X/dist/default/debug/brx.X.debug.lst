

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun Feb 05 22:48:25 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	12LF1840
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 1.41
    17                           ; Generated 25/01/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC12LF1840 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0015                     	;# 
    66  0016                     	;# 
    67  0016                     	;# 
    68  0017                     	;# 
    69  0018                     	;# 
    70  0019                     	;# 
    71  001A                     	;# 
    72  001B                     	;# 
    73  001C                     	;# 
    74  001E                     	;# 
    75  001F                     	;# 
    76  008C                     	;# 
    77  0091                     	;# 
    78  0092                     	;# 
    79  0095                     	;# 
    80  0096                     	;# 
    81  0097                     	;# 
    82  0098                     	;# 
    83  0099                     	;# 
    84  009A                     	;# 
    85  009B                     	;# 
    86  009B                     	;# 
    87  009C                     	;# 
    88  009D                     	;# 
    89  009E                     	;# 
    90  010C                     	;# 
    91  0111                     	;# 
    92  0112                     	;# 
    93  0115                     	;# 
    94  0116                     	;# 
    95  0117                     	;# 
    96  0118                     	;# 
    97  0119                     	;# 
    98  011A                     	;# 
    99  011B                     	;# 
   100  011D                     	;# 
   101  011D                     	;# 
   102  018C                     	;# 
   103  0191                     	;# 
   104  0191                     	;# 
   105  0192                     	;# 
   106  0193                     	;# 
   107  0193                     	;# 
   108  0193                     	;# 
   109  0194                     	;# 
   110  0195                     	;# 
   111  0196                     	;# 
   112  0199                     	;# 
   113  019A                     	;# 
   114  019B                     	;# 
   115  019B                     	;# 
   116  019B                     	;# 
   117  019B                     	;# 
   118  019C                     	;# 
   119  019C                     	;# 
   120  019D                     	;# 
   121  019E                     	;# 
   122  019F                     	;# 
   123  020C                     	;# 
   124  0211                     	;# 
   125  0211                     	;# 
   126  0212                     	;# 
   127  0212                     	;# 
   128  0213                     	;# 
   129  0213                     	;# 
   130  0214                     	;# 
   131  0214                     	;# 
   132  0215                     	;# 
   133  0215                     	;# 
   134  0215                     	;# 
   135  0216                     	;# 
   136  0216                     	;# 
   137  0217                     	;# 
   138  0217                     	;# 
   139  0291                     	;# 
   140  0291                     	;# 
   141  0292                     	;# 
   142  0293                     	;# 
   143  0294                     	;# 
   144  0295                     	;# 
   145  0295                     	;# 
   146  0296                     	;# 
   147  0391                     	;# 
   148  0392                     	;# 
   149  0393                     	;# 
   150  039A                     	;# 
   151  039C                     	;# 
   152  039D                     	;# 
   153  039E                     	;# 
   154  039F                     	;# 
   155  0FE4                     	;# 
   156  0FE5                     	;# 
   157  0FE6                     	;# 
   158  0FE7                     	;# 
   159  0FE8                     	;# 
   160  0FE9                     	;# 
   161  0FEA                     	;# 
   162  0FEB                     	;# 
   163  0FED                     	;# 
   164  0FEE                     	;# 
   165  0FEF                     	;# 
   166  0000                     	;# 
   167  0001                     	;# 
   168  0002                     	;# 
   169  0003                     	;# 
   170  0004                     	;# 
   171  0005                     	;# 
   172  0006                     	;# 
   173  0007                     	;# 
   174  0008                     	;# 
   175  0009                     	;# 
   176  000A                     	;# 
   177  000B                     	;# 
   178  000C                     	;# 
   179  0011                     	;# 
   180  0012                     	;# 
   181  0015                     	;# 
   182  0016                     	;# 
   183  0016                     	;# 
   184  0017                     	;# 
   185  0018                     	;# 
   186  0019                     	;# 
   187  001A                     	;# 
   188  001B                     	;# 
   189  001C                     	;# 
   190  001E                     	;# 
   191  001F                     	;# 
   192  008C                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  010C                     	;# 
   207  0111                     	;# 
   208  0112                     	;# 
   209  0115                     	;# 
   210  0116                     	;# 
   211  0117                     	;# 
   212  0118                     	;# 
   213  0119                     	;# 
   214  011A                     	;# 
   215  011B                     	;# 
   216  011D                     	;# 
   217  011D                     	;# 
   218  018C                     	;# 
   219  0191                     	;# 
   220  0191                     	;# 
   221  0192                     	;# 
   222  0193                     	;# 
   223  0193                     	;# 
   224  0193                     	;# 
   225  0194                     	;# 
   226  0195                     	;# 
   227  0196                     	;# 
   228  0199                     	;# 
   229  019A                     	;# 
   230  019B                     	;# 
   231  019B                     	;# 
   232  019B                     	;# 
   233  019B                     	;# 
   234  019C                     	;# 
   235  019C                     	;# 
   236  019D                     	;# 
   237  019E                     	;# 
   238  019F                     	;# 
   239  020C                     	;# 
   240  0211                     	;# 
   241  0211                     	;# 
   242  0212                     	;# 
   243  0212                     	;# 
   244  0213                     	;# 
   245  0213                     	;# 
   246  0214                     	;# 
   247  0214                     	;# 
   248  0215                     	;# 
   249  0215                     	;# 
   250  0215                     	;# 
   251  0216                     	;# 
   252  0216                     	;# 
   253  0217                     	;# 
   254  0217                     	;# 
   255  0291                     	;# 
   256  0291                     	;# 
   257  0292                     	;# 
   258  0293                     	;# 
   259  0294                     	;# 
   260  0295                     	;# 
   261  0295                     	;# 
   262  0296                     	;# 
   263  0391                     	;# 
   264  0392                     	;# 
   265  0393                     	;# 
   266  039A                     	;# 
   267  039C                     	;# 
   268  039D                     	;# 
   269  039E                     	;# 
   270  039F                     	;# 
   271  0FE4                     	;# 
   272  0FE5                     	;# 
   273  0FE6                     	;# 
   274  0FE7                     	;# 
   275  0FE8                     	;# 
   276  0FE9                     	;# 
   277  0FEA                     	;# 
   278  0FEB                     	;# 
   279  0FED                     	;# 
   280  0FEE                     	;# 
   281  0FEF                     	;# 
   282  0015                     _TMR0	set	21
   283  008B                     _SSP1IF	set	139
   284  0060                     _RA0	set	96
   285  005A                     _TMR0IF	set	90
   286  005F                     _GIE	set	95
   287  005D                     _TMR0IE	set	93
   288  008C                     _TRISA	set	140
   289  0095                     _OPTION_REG	set	149
   290  048B                     _SSP1IE	set	1163
   291  08ED                     _SSSEL	set	2285
   292  08EE                     _SDOSEL	set	2286
   293  0211                     _SSPBUF	set	529
   294  10AB                     _SSPM3	set	4267
   295  10AA                     _SSPM2	set	4266
   296  10A9                     _SSPM1	set	4265
   297  10A8                     _SSPM0	set	4264
   298  10AC                     _CKP	set	4268
   299  10A6                     _CKE	set	4262
   300  10A7                     _SMP	set	4263
   301  10AD                     _SSPEN	set	4269
   302                           
   303                           ; #config settings
   304  0000                     
   305                           	psect	cinit
   306  003C                     start_initialization:	
   307  003C                     __initialization:	
   308                           
   309                           ; Clear objects allocated to COMMON
   310  003C  01F5               	clrf	__pbssCOMMON& (0+127)
   311  003D  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   312  003E  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   313  003F                     end_of_initialization:	
   314                           ;End of C runtime variable initialization code
   315                           
   316  003F                     __end_of__initialization:	
   317  003F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   318  0040  0020               	movlb	0
   319  0041  3180  2855         	ljmp	_main	;jump to C main() function
   320                           
   321                           	psect	bssCOMMON
   322  0075                     __pbssCOMMON:	
   323  0075                     _counter:	
   324  0075                     	ds	2
   325  0077                     _dummy:	
   326  0077                     	ds	1
   327                           
   328                           	psect	cstackCOMMON
   329  0070                     __pcstackCOMMON:	
   330  0070                     ?_SPI_Init:	
   331  0070                     ?_SPI_Write:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ?_SPI_Read:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ??_SPI_Read:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ?_TMR_Init:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ?_main:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ?_Timer0_ISR:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ?i1_SPI_Write:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ??i1_SPI_Write:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     i1SPI_Write@data:	
   356                           ; 1 bytes @ 0x0
   357                           
   358                           
   359                           ; 1 bytes @ 0x0
   360  0070                     	ds	1
   361  0071                     ??_Timer0_ISR:	
   362                           
   363                           ; 1 bytes @ 0x1
   364  0071                     	ds	2
   365  0073                     Timer0_ISR@c:	
   366                           
   367                           ; 1 bytes @ 0x3
   368  0073                     	ds	1
   369  0074                     ??_SPI_Init:	
   370  0074                     ??_SPI_Write:	
   371                           ; 1 bytes @ 0x4
   372                           
   373  0074                     ??_TMR_Init:	
   374                           ; 1 bytes @ 0x4
   375                           
   376  0074                     SPI_Write@data:	
   377                           ; 1 bytes @ 0x4
   378                           
   379                           
   380                           ; 1 bytes @ 0x4
   381  0074                     	ds	1
   382  0075                     ??_main:	
   383                           
   384                           	psect	maintext
   385  0055                     __pmaintext:	
   386                           ; 1 bytes @ 0x5
   387 ;;
   388 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   389 ;;
   390 ;; *************** function _main *****************
   391 ;; Defined at:
   392 ;;		line 43 in file "C:/Users/Matthew Fonken/MPLABXProjects/brx.X/main.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;		None
   395 ;; Auto vars:     Size  Location     Type
   396 ;;		None
   397 ;; Return value:  Size  Location     Type
   398 ;;                  1    wreg      void 
   399 ;; Registers used:
   400 ;;		wreg, status,2, status,0, pclath, cstack
   401 ;; Tracked objects:
   402 ;;		On entry : B1F/0
   403 ;;		On exit  : 0/0
   404 ;;		Unchanged: 0/0
   405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   406 ;;      Params:         0       0       0       0
   407 ;;      Locals:         0       0       0       0
   408 ;;      Temps:          0       0       0       0
   409 ;;      Totals:         0       0       0       0
   410 ;;Total ram usage:        0 bytes
   411 ;; Hardware stack levels required when called:    3
   412 ;; This function calls:
   413 ;;		_SPI_Init
   414 ;;		_SPI_Write
   415 ;;		_TMR_Init
   416 ;; This function is called by:
   417 ;;		Startup code after reset
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421                           
   422                           ;psect for function _main
   423  0055                     _main:	
   424                           
   425                           ;main.c: 45: TRISA = ~( ( 1 << 0x00 ) | ( 1 << 0x01) | ( 1 << 0x04 ) );
   426                           
   427                           ;incstack = 0
   428                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   429  0055  30EC               	movlw	236
   430  0056  0021               	movlb	1	; select bank1
   431  0057  008C               	movwf	12	;volatile
   432                           
   433                           ;main.c: 46: SPI_Init();
   434  0058  3180  2043  3180   	fcall	_SPI_Init
   435                           
   436                           ;main.c: 47: TMR_Init();
   437  005B  3180  2063  3180   	fcall	_TMR_Init
   438                           
   439                           ;main.c: 48: SPI_Write(0x02);
   440  005E  3002               	movlw	2
   441  005F  3180  206C  3180   	fcall	_SPI_Write
   442  0062                     l28:	
   443                           ;main.c: 49: while (1);
   444                           
   445  0062  2862               	goto	l28
   446  0063                     __end_of_main:	
   447                           ;main.c: 51: return;
   448                           
   449                           
   450                           	psect	text1
   451  0063                     __ptext1:	
   452 ;; *************** function _TMR_Init *****************
   453 ;; Defined at:
   454 ;;		line 35 in file "C:/Users/Matthew Fonken/MPLABXProjects/brx.X/main.c"
   455 ;; Parameters:    Size  Location     Type
   456 ;;		None
   457 ;; Auto vars:     Size  Location     Type
   458 ;;		None
   459 ;; Return value:  Size  Location     Type
   460 ;;                  1    wreg      void 
   461 ;; Registers used:
   462 ;;		wreg
   463 ;; Tracked objects:
   464 ;;		On entry : 0/0
   465 ;;		On exit  : 0/0
   466 ;;		Unchanged: 0/0
   467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   468 ;;      Params:         0       0       0       0
   469 ;;      Locals:         0       0       0       0
   470 ;;      Temps:          0       0       0       0
   471 ;;      Totals:         0       0       0       0
   472 ;;Total ram usage:        0 bytes
   473 ;; Hardware stack levels used:    1
   474 ;; Hardware stack levels required when called:    2
   475 ;; This function calls:
   476 ;;		Nothing
   477 ;; This function is called by:
   478 ;;		_main
   479 ;; This function uses a non-reentrant model
   480 ;;
   481                           
   482                           
   483                           ;psect for function _TMR_Init
   484  0063                     _TMR_Init:	
   485                           
   486                           ;main.c: 37: OPTION_REG = 0xC7;
   487                           
   488                           ;incstack = 0
   489                           ; Regs used in _TMR_Init: [wreg]
   490  0063  30C7               	movlw	199
   491  0064  0021               	movlb	1	; select bank1
   492  0065  0095               	movwf	21	;volatile
   493                           
   494                           ;main.c: 38: TMR0 = 0xFF;
   495  0066  30FF               	movlw	255
   496  0067  0020               	movlb	0	; select bank0
   497  0068  0095               	movwf	21	;volatile
   498                           
   499                           ;main.c: 39: TMR0IE = 1;
   500  0069  168B               	bsf	11,5	;volatile
   501                           
   502                           ;main.c: 40: (GIE = 1);
   503  006A  178B               	bsf	11,7	;volatile
   504  006B  0008               	return
   505  006C                     __end_of_TMR_Init:	
   506                           
   507                           	psect	text2
   508  006C                     __ptext2:	
   509 ;; *************** function _SPI_Write *****************
   510 ;; Defined at:
   511 ;;		line 29 in file "C:/Users/Matthew Fonken/MPLABXProjects/brx.X/spi.c"
   512 ;; Parameters:    Size  Location     Type
   513 ;;  data            1    wreg     unsigned char 
   514 ;; Auto vars:     Size  Location     Type
   515 ;;  data            1    4[COMMON] unsigned char 
   516 ;; Return value:  Size  Location     Type
   517 ;;                  1    wreg      void 
   518 ;; Registers used:
   519 ;;		wreg
   520 ;; Tracked objects:
   521 ;;		On entry : 0/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   525 ;;      Params:         0       0       0       0
   526 ;;      Locals:         1       0       0       0
   527 ;;      Temps:          0       0       0       0
   528 ;;      Totals:         1       0       0       0
   529 ;;Total ram usage:        1 bytes
   530 ;; Hardware stack levels used:    1
   531 ;; Hardware stack levels required when called:    2
   532 ;; This function calls:
   533 ;;		Nothing
   534 ;; This function is called by:
   535 ;;		_main
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539                           
   540                           ;psect for function _SPI_Write
   541  006C                     _SPI_Write:	
   542                           
   543                           ;incstack = 0
   544                           ; Regs used in _SPI_Write: [wreg]
   545                           ;SPI_Write@data stored from wreg
   546  006C  00F4               	movwf	SPI_Write@data
   547                           
   548                           ;spi.c: 31: SSPBUF = data;
   549  006D  0874               	movf	SPI_Write@data,w
   550  006E  0024               	movlb	4	; select bank4
   551  006F  0091               	movwf	17	;volatile
   552  0070                     l69:	
   553                           ;spi.c: 32: while(!SSP1IF);
   554                           
   555  0070  0020               	movlb	0	; select bank0
   556  0071  1D91               	btfss	17,3	;volatile
   557  0072  2870               	goto	l69
   558                           
   559                           ;spi.c: 33: SSP1IF = 0;
   560  0073  1191               	bcf	17,3	;volatile
   561  0074  0008               	return
   562  0075                     __end_of_SPI_Write:	
   563                           
   564                           	psect	text3
   565  0043                     __ptext3:	
   566 ;; *************** function _SPI_Init *****************
   567 ;; Defined at:
   568 ;;		line 5 in file "C:/Users/Matthew Fonken/MPLABXProjects/brx.X/spi.c"
   569 ;; Parameters:    Size  Location     Type
   570 ;;		None
   571 ;; Auto vars:     Size  Location     Type
   572 ;;		None
   573 ;; Return value:  Size  Location     Type
   574 ;;                  1    wreg      void 
   575 ;; Registers used:
   576 ;;		None
   577 ;; Tracked objects:
   578 ;;		On entry : 0/0
   579 ;;		On exit  : 0/0
   580 ;;		Unchanged: 0/0
   581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   582 ;;      Params:         0       0       0       0
   583 ;;      Locals:         0       0       0       0
   584 ;;      Temps:          0       0       0       0
   585 ;;      Totals:         0       0       0       0
   586 ;;Total ram usage:        0 bytes
   587 ;; Hardware stack levels used:    1
   588 ;; Hardware stack levels required when called:    2
   589 ;; This function calls:
   590 ;;		Nothing
   591 ;; This function is called by:
   592 ;;		_main
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           
   597                           ;psect for function _SPI_Init
   598  0043                     _SPI_Init:	
   599                           
   600                           ;spi.c: 8: SSPEN = 0;
   601                           
   602                           ;incstack = 0
   603                           ; Regs used in _SPI_Init: []
   604  0043  0024               	movlb	4	; select bank4
   605  0044  1295               	bcf	21,5	;volatile
   606                           
   607                           ;spi.c: 10: SDOSEL = 1;
   608  0045  0022               	movlb	2	; select bank2
   609  0046  171D               	bsf	29,6	;volatile
   610                           
   611                           ;spi.c: 11: SSSEL = 0;
   612  0047  129D               	bcf	29,5	;volatile
   613                           
   614                           ;spi.c: 13: SMP = 0;
   615  0048  0024               	movlb	4	; select bank4
   616  0049  1394               	bcf	20,7	;volatile
   617                           
   618                           ;spi.c: 15: CKE = 0;
   619  004A  1314               	bcf	20,6	;volatile
   620                           
   621                           ;spi.c: 17: CKP = 0;
   622  004B  1215               	bcf	21,4	;volatile
   623                           
   624                           ;spi.c: 19: SSPM0 = 0;
   625  004C  1015               	bcf	21,0	;volatile
   626                           
   627                           ;spi.c: 20: SSPM1 = 1;
   628  004D  1495               	bsf	21,1	;volatile
   629                           
   630                           ;spi.c: 21: SSPM2 = 0;
   631  004E  1115               	bcf	21,2	;volatile
   632                           
   633                           ;spi.c: 22: SSPM3 = 0;
   634  004F  1195               	bcf	21,3	;volatile
   635                           
   636                           ;spi.c: 24: SSP1IE = 1;
   637  0050  0021               	movlb	1	; select bank1
   638  0051  1591               	bsf	17,3	;volatile
   639                           
   640                           ;spi.c: 26: SSPEN = 1;
   641  0052  0024               	movlb	4	; select bank4
   642  0053  1695               	bsf	21,5	;volatile
   643  0054  0008               	return
   644  0055                     __end_of_SPI_Init:	
   645                           
   646                           	psect	intentry
   647  0004                     __pintentry:	
   648 ;; *************** function _Timer0_ISR *****************
   649 ;; Defined at:
   650 ;;		line 54 in file "C:/Users/Matthew Fonken/MPLABXProjects/brx.X/main.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;		None
   653 ;; Auto vars:     Size  Location     Type
   654 ;;  c               1    3[COMMON] unsigned char 
   655 ;; Return value:  Size  Location     Type
   656 ;;                  1    wreg      void 
   657 ;; Registers used:
   658 ;;		wreg, status,2, status,0, pclath, cstack
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   664 ;;      Params:         0       0       0       0
   665 ;;      Locals:         1       0       0       0
   666 ;;      Temps:          2       0       0       0
   667 ;;      Totals:         3       0       0       0
   668 ;;Total ram usage:        3 bytes
   669 ;; Hardware stack levels used:    1
   670 ;; Hardware stack levels required when called:    1
   671 ;; This function calls:
   672 ;;		_SPI_Read
   673 ;;		i1_SPI_Write
   674 ;; This function is called by:
   675 ;;		Interrupt level 1
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679  0004                     _Timer0_ISR:	
   680                           
   681                           ;incstack = 0
   682  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   683                           
   684                           ; Regs used in _Timer0_ISR: [wreg+status,2+status,0+pclath+cstack]
   685  0005  3180               	pagesel	$
   686  0006  0020               	movlb	0	; select bank0
   687  0007  087F               	movf	127,w
   688  0008  00F2               	movwf	??_Timer0_ISR+1
   689                           
   690                           ;main.c: 56: TMR0IF = 0;
   691  0009  110B               	bcf	11,2	;volatile
   692                           
   693                           ;main.c: 57: counter++;
   694  000A  3001               	movlw	1
   695  000B  07F5               	addwf	_counter,f
   696  000C  3000               	movlw	0
   697  000D  3DF6               	addwfc	_counter+1,f
   698                           
   699                           ;main.c: 58: RA0 = counter & 1;
   700  000E  1C75               	btfss	_counter,0
   701  000F  2813               	goto	u8_20
   702  0010  0020               	movlb	0	; select bank0
   703  0011  140C               	bsf	12,0	;volatile
   704  0012  2815               	goto	i1l592
   705  0013                     u8_20:	
   706  0013  0020               	movlb	0	; select bank0
   707  0014  100C               	bcf	12,0	;volatile
   708  0015                     i1l592:	
   709                           
   710                           ;main.c: 60: if( counter & 1 )
   711  0015  1C75               	btfss	_counter,0
   712  0016  2831               	goto	i1l608
   713                           
   714                           ;main.c: 61: {
   715                           ;main.c: 62: SPI_Write(0x44);
   716  0017  3044               	movlw	68
   717  0018  3180  2075  3180   	fcall	i1_SPI_Write
   718                           
   719                           ;main.c: 63: unsigned char c = SPI_Read();
   720  001B  3180  207E  3180   	fcall	_SPI_Read
   721  001E  00F1               	movwf	??_Timer0_ISR
   722  001F  0871               	movf	??_Timer0_ISR,w
   723  0020  00F3               	movwf	Timer0_ISR@c
   724                           
   725                           ;main.c: 64: SPI_Read();
   726  0021  3180  207E  3180   	fcall	_SPI_Read
   727                           
   728                           ;main.c: 65: SPI_Read();
   729  0024  3180  207E  3180   	fcall	_SPI_Read
   730                           
   731                           ;main.c: 66: SPI_Write(0x02);
   732  0027  3002               	movlw	2
   733  0028  3180  2075  3180   	fcall	i1_SPI_Write
   734                           
   735                           ;main.c: 67: SPI_Write(0x10);
   736  002B  3010               	movlw	16
   737  002C  3180  2075  3180   	fcall	i1_SPI_Write
   738                           
   739                           ;main.c: 68: SPI_Read();
   740  002F  3180  207E         	fcall	_SPI_Read
   741  0031                     i1l608:	
   742                           
   743                           ;main.c: 69: }
   744                           ;main.c: 70: counter &= 0xFF;
   745  0031  30FF               	movlw	255
   746  0032  05F5               	andwf	_counter,f
   747  0033  3000               	movlw	0
   748  0034  05F6               	andwf	_counter+1,f
   749  0035  0872               	movf	??_Timer0_ISR+1,w
   750  0036  0020               	movlb	0	; select bank0
   751  0037  00FF               	movwf	127
   752  0038  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   753  0039  0009               	retfie
   754  003A                     __end_of_Timer0_ISR:	
   755                           
   756                           	psect	text5
   757  0075                     __ptext5:	
   758 ;; *************** function i1_SPI_Write *****************
   759 ;; Defined at:
   760 ;;		line 29 in file "C:/Users/Matthew Fonken/MPLABXProjects/brx.X/spi.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;  data            1    wreg     unsigned char 
   763 ;; Auto vars:     Size  Location     Type
   764 ;;  data            1    0[COMMON] unsigned char 
   765 ;; Return value:  Size  Location     Type
   766 ;;                  1    wreg      void 
   767 ;; Registers used:
   768 ;;		wreg
   769 ;; Tracked objects:
   770 ;;		On entry : 0/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   774 ;;      Params:         0       0       0       0
   775 ;;      Locals:         1       0       0       0
   776 ;;      Temps:          0       0       0       0
   777 ;;      Totals:         1       0       0       0
   778 ;;Total ram usage:        1 bytes
   779 ;; Hardware stack levels used:    1
   780 ;; This function calls:
   781 ;;		Nothing
   782 ;; This function is called by:
   783 ;;		_Timer0_ISR
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787                           
   788                           ;psect for function i1_SPI_Write
   789  0075                     i1_SPI_Write:	
   790                           
   791                           ;incstack = 0
   792                           ; Regs used in i1_SPI_Write: [wreg]
   793                           ;i1SPI_Write@data stored from wreg
   794  0075  00F0               	movwf	i1SPI_Write@data
   795                           
   796                           ;spi.c: 31: SSPBUF = data;
   797  0076  0870               	movf	i1SPI_Write@data,w
   798  0077  0024               	movlb	4	; select bank4
   799  0078  0091               	movwf	17	;volatile
   800  0079                     i1l69:	
   801                           ;spi.c: 32: while(!SSP1IF);
   802                           
   803  0079  0020               	movlb	0	; select bank0
   804  007A  1D91               	btfss	17,3	;volatile
   805  007B  2879               	goto	i1l69
   806                           
   807                           ;spi.c: 33: SSP1IF = 0;
   808  007C  1191               	bcf	17,3	;volatile
   809  007D  0008               	return
   810  007E                     __end_ofi1_SPI_Write:	
   811                           
   812                           	psect	text6
   813  007E                     __ptext6:	
   814 ;; *************** function _SPI_Read *****************
   815 ;; Defined at:
   816 ;;		line 37 in file "C:/Users/Matthew Fonken/MPLABXProjects/brx.X/spi.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;		None
   819 ;; Auto vars:     Size  Location     Type
   820 ;;		None
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      unsigned char 
   823 ;; Registers used:
   824 ;;		wreg, status,2
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   830 ;;      Params:         0       0       0       0
   831 ;;      Locals:         0       0       0       0
   832 ;;      Temps:          0       0       0       0
   833 ;;      Totals:         0       0       0       0
   834 ;;Total ram usage:        0 bytes
   835 ;; Hardware stack levels used:    1
   836 ;; This function calls:
   837 ;;		Nothing
   838 ;; This function is called by:
   839 ;;		_Timer0_ISR
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           
   844                           ;psect for function _SPI_Read
   845  007E                     _SPI_Read:	
   846                           
   847                           ;spi.c: 39: SSPBUF = 0;
   848                           
   849                           ;incstack = 0
   850                           ; Regs used in _SPI_Read: [wreg+status,2]
   851  007E  0024               	movlb	4	; select bank4
   852  007F  0191               	clrf	17	;volatile
   853  0080                     i1l75:	
   854                           ;spi.c: 40: while(!SSP1IF);
   855                           
   856  0080  0020               	movlb	0	; select bank0
   857  0081  1D91               	btfss	17,3	;volatile
   858  0082  2880               	goto	i1l75
   859                           
   860                           ;spi.c: 41: SSP1IF = 0;
   861  0083  1191               	bcf	17,3	;volatile
   862                           
   863                           ;spi.c: 42: return SSPBUF;
   864  0084  0024               	movlb	4	; select bank4
   865  0085  0811               	movf	17,w	;volatile
   866  0086  0008               	return
   867  0087                     __end_of_SPI_Read:	
   868  007E                     btemp	set	126	;btemp
   869  007E                     int$flags	set	126
   870  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            64      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_Write

Critical Paths under _Timer0_ISR in COMMON

    _Timer0_ISR->i1_SPI_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                           _SPI_Init
                          _SPI_Write
                           _TMR_Init
 ---------------------------------------------------------------------------------
 (1) _TMR_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Write                                            1     1      0      15
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Timer0_ISR                                           3     3      0      23
                                              1 COMMON     3     3      0
                           _SPI_Read
                        i1_SPI_Write
 ---------------------------------------------------------------------------------
 (3) i1_SPI_Write                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SPI_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Init
   _SPI_Write
   _TMR_Init

 _Timer0_ISR (ROOT)
   _SPI_Read
   i1_SPI_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              E0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       8       2       57.1%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       8       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            40      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               40      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0       8      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun Feb 05 22:48:25 2017

            __CFG_CP$OFF 0000                       l28 0062                       l69 0070  
            __CFG_LVP$ON 0000                      _CKE 10A6                      _CKP 10AC  
                    _GIE 005F                      _RA0 0060             __CFG_CPD$OFF 0000  
                    _SMP 10A7             __CFG_BORV$LO 0000             __CFG_IESO$ON 0000  
                   i1l75 0080                     i1l69 0079                     _TMR0 0015  
                   u8_20 0013             __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000  
                   _main 0055                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 003A            __CFG_MCLRE$ON 0000            __CFG_PLLEN$ON 0000  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    i1l608 0031  
                  i1l592 0015                    _SSPM0 10A8                    _SSPM1 10A9  
                  _SSPM2 10AA                    _SSPM3 10AB                    _TRISA 008C  
                  _SSPEN 10AD                    _SSSEL 08ED                    _dummy 0077  
       __end_of_SPI_Init 0055         __end_of_SPI_Read 0087         __end_of_TMR_Init 006C  
                  wtemp0 007E       __size_of_SPI_Write 0009          __initialization 003C  
           __end_of_main 0063                   ??_main 0075             ?i1_SPI_Write 0070  
                 _SDOSEL 08EE                   _TMR0IE 005D                   _TMR0IF 005A  
                 _SSP1IE 048B                   _SSP1IF 008B                   _SSPBUF 0211  
         __CFG_PWRTE$OFF 0000               _Timer0_ISR 0004           __CFG_STVREN$ON 0000  
      __end_of_SPI_Write 0075  __end_of__initialization 003F           __pcstackCOMMON 0070  
              ?_SPI_Init 0070                ?_SPI_Read 0070                ?_TMR_Init 0070  
            ?_Timer0_ISR 0070               __pmaintext 0055               __pintentry 0004  
             ??_SPI_Init 0074               ??_SPI_Read 0070               ??_TMR_Init 0074  
            Timer0_ISR@c 0073     __size_ofi1_SPI_Write 0009            SPI_Write@data 0074  
                __ptext1 0063                  __ptext2 006C                  __ptext3 0043  
                __ptext5 0075                  __ptext6 007E                  _counter 0075  
    __size_of_Timer0_ISR 0036     end_of_initialization 003F         __CFG_FOSC$INTOSC 0000  
              _SPI_Write 006C          i1SPI_Write@data 0070        __size_of_SPI_Init 0012  
      __size_of_SPI_Read 0009      start_initialization 003C        __size_of_TMR_Init 0009  
             ?_SPI_Write 0070             ??_Timer0_ISR 0071              __pbssCOMMON 0075  
              ___latbits 0001       __end_of_Timer0_ISR 003A            ??i1_SPI_Write 0070  
            ??_SPI_Write 0074                 _SPI_Init 0043                 _SPI_Read 007E  
               _TMR_Init 0063      __end_ofi1_SPI_Write 007E            __size_of_main 000E  
               int$flags 007E              i1_SPI_Write 0075                 intlevel1 0000  
      __CFG_CLKOUTEN$OFF 0000               _OPTION_REG 0095  
