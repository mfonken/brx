

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Feb 09 00:56:06 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	12LF1840
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 1.41
    40                           ; Generated 25/01/2017 GMT
    41                           ; 
    42                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC12LF1840 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  008C                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  010C                     	;# 
   114  0111                     	;# 
   115  0112                     	;# 
   116  0115                     	;# 
   117  0116                     	;# 
   118  0117                     	;# 
   119  0118                     	;# 
   120  0119                     	;# 
   121  011A                     	;# 
   122  011B                     	;# 
   123  011D                     	;# 
   124  011D                     	;# 
   125  018C                     	;# 
   126  0191                     	;# 
   127  0191                     	;# 
   128  0192                     	;# 
   129  0193                     	;# 
   130  0193                     	;# 
   131  0193                     	;# 
   132  0194                     	;# 
   133  0195                     	;# 
   134  0196                     	;# 
   135  0199                     	;# 
   136  019A                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019C                     	;# 
   142  019C                     	;# 
   143  019D                     	;# 
   144  019E                     	;# 
   145  019F                     	;# 
   146  020C                     	;# 
   147  0211                     	;# 
   148  0211                     	;# 
   149  0212                     	;# 
   150  0212                     	;# 
   151  0213                     	;# 
   152  0213                     	;# 
   153  0214                     	;# 
   154  0214                     	;# 
   155  0215                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0216                     	;# 
   159  0216                     	;# 
   160  0217                     	;# 
   161  0217                     	;# 
   162  0291                     	;# 
   163  0291                     	;# 
   164  0292                     	;# 
   165  0293                     	;# 
   166  0294                     	;# 
   167  0295                     	;# 
   168  0295                     	;# 
   169  0296                     	;# 
   170  0391                     	;# 
   171  0392                     	;# 
   172  0393                     	;# 
   173  039A                     	;# 
   174  039C                     	;# 
   175  039D                     	;# 
   176  039E                     	;# 
   177  039F                     	;# 
   178  0FE4                     	;# 
   179  0FE5                     	;# 
   180  0FE6                     	;# 
   181  0FE7                     	;# 
   182  0FE8                     	;# 
   183  0FE9                     	;# 
   184  0FEA                     	;# 
   185  0FEB                     	;# 
   186  0FED                     	;# 
   187  0FEE                     	;# 
   188  0FEF                     	;# 
   189  0000                     	;# 
   190  0001                     	;# 
   191  0002                     	;# 
   192  0003                     	;# 
   193  0004                     	;# 
   194  0005                     	;# 
   195  0006                     	;# 
   196  0007                     	;# 
   197  0008                     	;# 
   198  0009                     	;# 
   199  000A                     	;# 
   200  000B                     	;# 
   201  000C                     	;# 
   202  0011                     	;# 
   203  0012                     	;# 
   204  0015                     	;# 
   205  0016                     	;# 
   206  0016                     	;# 
   207  0017                     	;# 
   208  0018                     	;# 
   209  0019                     	;# 
   210  001A                     	;# 
   211  001B                     	;# 
   212  001C                     	;# 
   213  001E                     	;# 
   214  001F                     	;# 
   215  008C                     	;# 
   216  0091                     	;# 
   217  0092                     	;# 
   218  0095                     	;# 
   219  0096                     	;# 
   220  0097                     	;# 
   221  0098                     	;# 
   222  0099                     	;# 
   223  009A                     	;# 
   224  009B                     	;# 
   225  009B                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  010C                     	;# 
   230  0111                     	;# 
   231  0112                     	;# 
   232  0115                     	;# 
   233  0116                     	;# 
   234  0117                     	;# 
   235  0118                     	;# 
   236  0119                     	;# 
   237  011A                     	;# 
   238  011B                     	;# 
   239  011D                     	;# 
   240  011D                     	;# 
   241  018C                     	;# 
   242  0191                     	;# 
   243  0191                     	;# 
   244  0192                     	;# 
   245  0193                     	;# 
   246  0193                     	;# 
   247  0193                     	;# 
   248  0194                     	;# 
   249  0195                     	;# 
   250  0196                     	;# 
   251  0199                     	;# 
   252  019A                     	;# 
   253  019B                     	;# 
   254  019B                     	;# 
   255  019B                     	;# 
   256  019B                     	;# 
   257  019C                     	;# 
   258  019C                     	;# 
   259  019D                     	;# 
   260  019E                     	;# 
   261  019F                     	;# 
   262  020C                     	;# 
   263  0211                     	;# 
   264  0211                     	;# 
   265  0212                     	;# 
   266  0212                     	;# 
   267  0213                     	;# 
   268  0213                     	;# 
   269  0214                     	;# 
   270  0214                     	;# 
   271  0215                     	;# 
   272  0215                     	;# 
   273  0215                     	;# 
   274  0216                     	;# 
   275  0216                     	;# 
   276  0217                     	;# 
   277  0217                     	;# 
   278  0291                     	;# 
   279  0291                     	;# 
   280  0292                     	;# 
   281  0293                     	;# 
   282  0294                     	;# 
   283  0295                     	;# 
   284  0295                     	;# 
   285  0296                     	;# 
   286  0391                     	;# 
   287  0392                     	;# 
   288  0393                     	;# 
   289  039A                     	;# 
   290  039C                     	;# 
   291  039D                     	;# 
   292  039E                     	;# 
   293  039F                     	;# 
   294  0FE4                     	;# 
   295  0FE5                     	;# 
   296  0FE6                     	;# 
   297  0FE7                     	;# 
   298  0FE8                     	;# 
   299  0FE9                     	;# 
   300  0FEA                     	;# 
   301  0FEB                     	;# 
   302  0FED                     	;# 
   303  0FEE                     	;# 
   304  0FEF                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0008                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  001E                     	;# 
   330  001F                     	;# 
   331  008C                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0095                     	;# 
   335  0096                     	;# 
   336  0097                     	;# 
   337  0098                     	;# 
   338  0099                     	;# 
   339  009A                     	;# 
   340  009B                     	;# 
   341  009B                     	;# 
   342  009C                     	;# 
   343  009D                     	;# 
   344  009E                     	;# 
   345  010C                     	;# 
   346  0111                     	;# 
   347  0112                     	;# 
   348  0115                     	;# 
   349  0116                     	;# 
   350  0117                     	;# 
   351  0118                     	;# 
   352  0119                     	;# 
   353  011A                     	;# 
   354  011B                     	;# 
   355  011D                     	;# 
   356  011D                     	;# 
   357  018C                     	;# 
   358  0191                     	;# 
   359  0191                     	;# 
   360  0192                     	;# 
   361  0193                     	;# 
   362  0193                     	;# 
   363  0193                     	;# 
   364  0194                     	;# 
   365  0195                     	;# 
   366  0196                     	;# 
   367  0199                     	;# 
   368  019A                     	;# 
   369  019B                     	;# 
   370  019B                     	;# 
   371  019B                     	;# 
   372  019B                     	;# 
   373  019C                     	;# 
   374  019C                     	;# 
   375  019D                     	;# 
   376  019E                     	;# 
   377  019F                     	;# 
   378  020C                     	;# 
   379  0211                     	;# 
   380  0211                     	;# 
   381  0212                     	;# 
   382  0212                     	;# 
   383  0213                     	;# 
   384  0213                     	;# 
   385  0214                     	;# 
   386  0214                     	;# 
   387  0215                     	;# 
   388  0215                     	;# 
   389  0215                     	;# 
   390  0216                     	;# 
   391  0216                     	;# 
   392  0217                     	;# 
   393  0217                     	;# 
   394  0291                     	;# 
   395  0291                     	;# 
   396  0292                     	;# 
   397  0293                     	;# 
   398  0294                     	;# 
   399  0295                     	;# 
   400  0295                     	;# 
   401  0296                     	;# 
   402  0391                     	;# 
   403  0392                     	;# 
   404  0393                     	;# 
   405  039A                     	;# 
   406  039C                     	;# 
   407  039D                     	;# 
   408  039E                     	;# 
   409  039F                     	;# 
   410  0FE4                     	;# 
   411  0FE5                     	;# 
   412  0FE6                     	;# 
   413  0FE7                     	;# 
   414  0FE8                     	;# 
   415  0FE9                     	;# 
   416  0FEA                     	;# 
   417  0FEB                     	;# 
   418  0FED                     	;# 
   419  0FEE                     	;# 
   420  0FEF                     	;# 
   421  0000                     	;# 
   422  0001                     	;# 
   423  0002                     	;# 
   424  0003                     	;# 
   425  0004                     	;# 
   426  0005                     	;# 
   427  0006                     	;# 
   428  0007                     	;# 
   429  0008                     	;# 
   430  0009                     	;# 
   431  000A                     	;# 
   432  000B                     	;# 
   433  000C                     	;# 
   434  0011                     	;# 
   435  0012                     	;# 
   436  0015                     	;# 
   437  0016                     	;# 
   438  0016                     	;# 
   439  0017                     	;# 
   440  0018                     	;# 
   441  0019                     	;# 
   442  001A                     	;# 
   443  001B                     	;# 
   444  001C                     	;# 
   445  001E                     	;# 
   446  001F                     	;# 
   447  008C                     	;# 
   448  0091                     	;# 
   449  0092                     	;# 
   450  0095                     	;# 
   451  0096                     	;# 
   452  0097                     	;# 
   453  0098                     	;# 
   454  0099                     	;# 
   455  009A                     	;# 
   456  009B                     	;# 
   457  009B                     	;# 
   458  009C                     	;# 
   459  009D                     	;# 
   460  009E                     	;# 
   461  010C                     	;# 
   462  0111                     	;# 
   463  0112                     	;# 
   464  0115                     	;# 
   465  0116                     	;# 
   466  0117                     	;# 
   467  0118                     	;# 
   468  0119                     	;# 
   469  011A                     	;# 
   470  011B                     	;# 
   471  011D                     	;# 
   472  011D                     	;# 
   473  018C                     	;# 
   474  0191                     	;# 
   475  0191                     	;# 
   476  0192                     	;# 
   477  0193                     	;# 
   478  0193                     	;# 
   479  0193                     	;# 
   480  0194                     	;# 
   481  0195                     	;# 
   482  0196                     	;# 
   483  0199                     	;# 
   484  019A                     	;# 
   485  019B                     	;# 
   486  019B                     	;# 
   487  019B                     	;# 
   488  019B                     	;# 
   489  019C                     	;# 
   490  019C                     	;# 
   491  019D                     	;# 
   492  019E                     	;# 
   493  019F                     	;# 
   494  020C                     	;# 
   495  0211                     	;# 
   496  0211                     	;# 
   497  0212                     	;# 
   498  0212                     	;# 
   499  0213                     	;# 
   500  0213                     	;# 
   501  0214                     	;# 
   502  0214                     	;# 
   503  0215                     	;# 
   504  0215                     	;# 
   505  0215                     	;# 
   506  0216                     	;# 
   507  0216                     	;# 
   508  0217                     	;# 
   509  0217                     	;# 
   510  0291                     	;# 
   511  0291                     	;# 
   512  0292                     	;# 
   513  0293                     	;# 
   514  0294                     	;# 
   515  0295                     	;# 
   516  0295                     	;# 
   517  0296                     	;# 
   518  0391                     	;# 
   519  0392                     	;# 
   520  0393                     	;# 
   521  039A                     	;# 
   522  039C                     	;# 
   523  039D                     	;# 
   524  039E                     	;# 
   525  039F                     	;# 
   526  0FE4                     	;# 
   527  0FE5                     	;# 
   528  0FE6                     	;# 
   529  0FE7                     	;# 
   530  0FE8                     	;# 
   531  0FE9                     	;# 
   532  0FEA                     	;# 
   533  0FEB                     	;# 
   534  0FED                     	;# 
   535  0FEE                     	;# 
   536  0FEF                     	;# 
   537  0000                     	;# 
   538  0001                     	;# 
   539  0002                     	;# 
   540  0003                     	;# 
   541  0004                     	;# 
   542  0005                     	;# 
   543  0006                     	;# 
   544  0007                     	;# 
   545  0008                     	;# 
   546  0009                     	;# 
   547  000A                     	;# 
   548  000B                     	;# 
   549  000C                     	;# 
   550  0011                     	;# 
   551  0012                     	;# 
   552  0015                     	;# 
   553  0016                     	;# 
   554  0016                     	;# 
   555  0017                     	;# 
   556  0018                     	;# 
   557  0019                     	;# 
   558  001A                     	;# 
   559  001B                     	;# 
   560  001C                     	;# 
   561  001E                     	;# 
   562  001F                     	;# 
   563  008C                     	;# 
   564  0091                     	;# 
   565  0092                     	;# 
   566  0095                     	;# 
   567  0096                     	;# 
   568  0097                     	;# 
   569  0098                     	;# 
   570  0099                     	;# 
   571  009A                     	;# 
   572  009B                     	;# 
   573  009B                     	;# 
   574  009C                     	;# 
   575  009D                     	;# 
   576  009E                     	;# 
   577  010C                     	;# 
   578  0111                     	;# 
   579  0112                     	;# 
   580  0115                     	;# 
   581  0116                     	;# 
   582  0117                     	;# 
   583  0118                     	;# 
   584  0119                     	;# 
   585  011A                     	;# 
   586  011B                     	;# 
   587  011D                     	;# 
   588  011D                     	;# 
   589  018C                     	;# 
   590  0191                     	;# 
   591  0191                     	;# 
   592  0192                     	;# 
   593  0193                     	;# 
   594  0193                     	;# 
   595  0193                     	;# 
   596  0194                     	;# 
   597  0195                     	;# 
   598  0196                     	;# 
   599  0199                     	;# 
   600  019A                     	;# 
   601  019B                     	;# 
   602  019B                     	;# 
   603  019B                     	;# 
   604  019B                     	;# 
   605  019C                     	;# 
   606  019C                     	;# 
   607  019D                     	;# 
   608  019E                     	;# 
   609  019F                     	;# 
   610  020C                     	;# 
   611  0211                     	;# 
   612  0211                     	;# 
   613  0212                     	;# 
   614  0212                     	;# 
   615  0213                     	;# 
   616  0213                     	;# 
   617  0214                     	;# 
   618  0214                     	;# 
   619  0215                     	;# 
   620  0215                     	;# 
   621  0215                     	;# 
   622  0216                     	;# 
   623  0216                     	;# 
   624  0217                     	;# 
   625  0217                     	;# 
   626  0291                     	;# 
   627  0291                     	;# 
   628  0292                     	;# 
   629  0293                     	;# 
   630  0294                     	;# 
   631  0295                     	;# 
   632  0295                     	;# 
   633  0296                     	;# 
   634  0391                     	;# 
   635  0392                     	;# 
   636  0393                     	;# 
   637  039A                     	;# 
   638  039C                     	;# 
   639  039D                     	;# 
   640  039E                     	;# 
   641  039F                     	;# 
   642  0FE4                     	;# 
   643  0FE5                     	;# 
   644  0FE6                     	;# 
   645  0FE7                     	;# 
   646  0FE8                     	;# 
   647  0FE9                     	;# 
   648  0FEA                     	;# 
   649  0FEB                     	;# 
   650  0FED                     	;# 
   651  0FEE                     	;# 
   652  0FEF                     	;# 
   653  0000                     	;# 
   654  0001                     	;# 
   655  0002                     	;# 
   656  0003                     	;# 
   657  0004                     	;# 
   658  0005                     	;# 
   659  0006                     	;# 
   660  0007                     	;# 
   661  0008                     	;# 
   662  0009                     	;# 
   663  000A                     	;# 
   664  000B                     	;# 
   665  000C                     	;# 
   666  0011                     	;# 
   667  0012                     	;# 
   668  0015                     	;# 
   669  0016                     	;# 
   670  0016                     	;# 
   671  0017                     	;# 
   672  0018                     	;# 
   673  0019                     	;# 
   674  001A                     	;# 
   675  001B                     	;# 
   676  001C                     	;# 
   677  001E                     	;# 
   678  001F                     	;# 
   679  008C                     	;# 
   680  0091                     	;# 
   681  0092                     	;# 
   682  0095                     	;# 
   683  0096                     	;# 
   684  0097                     	;# 
   685  0098                     	;# 
   686  0099                     	;# 
   687  009A                     	;# 
   688  009B                     	;# 
   689  009B                     	;# 
   690  009C                     	;# 
   691  009D                     	;# 
   692  009E                     	;# 
   693  010C                     	;# 
   694  0111                     	;# 
   695  0112                     	;# 
   696  0115                     	;# 
   697  0116                     	;# 
   698  0117                     	;# 
   699  0118                     	;# 
   700  0119                     	;# 
   701  011A                     	;# 
   702  011B                     	;# 
   703  011D                     	;# 
   704  011D                     	;# 
   705  018C                     	;# 
   706  0191                     	;# 
   707  0191                     	;# 
   708  0192                     	;# 
   709  0193                     	;# 
   710  0193                     	;# 
   711  0193                     	;# 
   712  0194                     	;# 
   713  0195                     	;# 
   714  0196                     	;# 
   715  0199                     	;# 
   716  019A                     	;# 
   717  019B                     	;# 
   718  019B                     	;# 
   719  019B                     	;# 
   720  019B                     	;# 
   721  019C                     	;# 
   722  019C                     	;# 
   723  019D                     	;# 
   724  019E                     	;# 
   725  019F                     	;# 
   726  020C                     	;# 
   727  0211                     	;# 
   728  0211                     	;# 
   729  0212                     	;# 
   730  0212                     	;# 
   731  0213                     	;# 
   732  0213                     	;# 
   733  0214                     	;# 
   734  0214                     	;# 
   735  0215                     	;# 
   736  0215                     	;# 
   737  0215                     	;# 
   738  0216                     	;# 
   739  0216                     	;# 
   740  0217                     	;# 
   741  0217                     	;# 
   742  0291                     	;# 
   743  0291                     	;# 
   744  0292                     	;# 
   745  0293                     	;# 
   746  0294                     	;# 
   747  0295                     	;# 
   748  0295                     	;# 
   749  0296                     	;# 
   750  0391                     	;# 
   751  0392                     	;# 
   752  0393                     	;# 
   753  039A                     	;# 
   754  039C                     	;# 
   755  039D                     	;# 
   756  039E                     	;# 
   757  039F                     	;# 
   758  0FE4                     	;# 
   759  0FE5                     	;# 
   760  0FE6                     	;# 
   761  0FE7                     	;# 
   762  0FE8                     	;# 
   763  0FE9                     	;# 
   764  0FEA                     	;# 
   765  0FEB                     	;# 
   766  0FED                     	;# 
   767  0FEE                     	;# 
   768  0FEF                     	;# 
   769  0000                     	;# 
   770  0001                     	;# 
   771  0002                     	;# 
   772  0003                     	;# 
   773  0004                     	;# 
   774  0005                     	;# 
   775  0006                     	;# 
   776  0007                     	;# 
   777  0008                     	;# 
   778  0009                     	;# 
   779  000A                     	;# 
   780  000B                     	;# 
   781  000C                     	;# 
   782  0011                     	;# 
   783  0012                     	;# 
   784  0015                     	;# 
   785  0016                     	;# 
   786  0016                     	;# 
   787  0017                     	;# 
   788  0018                     	;# 
   789  0019                     	;# 
   790  001A                     	;# 
   791  001B                     	;# 
   792  001C                     	;# 
   793  001E                     	;# 
   794  001F                     	;# 
   795  008C                     	;# 
   796  0091                     	;# 
   797  0092                     	;# 
   798  0095                     	;# 
   799  0096                     	;# 
   800  0097                     	;# 
   801  0098                     	;# 
   802  0099                     	;# 
   803  009A                     	;# 
   804  009B                     	;# 
   805  009B                     	;# 
   806  009C                     	;# 
   807  009D                     	;# 
   808  009E                     	;# 
   809  010C                     	;# 
   810  0111                     	;# 
   811  0112                     	;# 
   812  0115                     	;# 
   813  0116                     	;# 
   814  0117                     	;# 
   815  0118                     	;# 
   816  0119                     	;# 
   817  011A                     	;# 
   818  011B                     	;# 
   819  011D                     	;# 
   820  011D                     	;# 
   821  018C                     	;# 
   822  0191                     	;# 
   823  0191                     	;# 
   824  0192                     	;# 
   825  0193                     	;# 
   826  0193                     	;# 
   827  0193                     	;# 
   828  0194                     	;# 
   829  0195                     	;# 
   830  0196                     	;# 
   831  0199                     	;# 
   832  019A                     	;# 
   833  019B                     	;# 
   834  019B                     	;# 
   835  019B                     	;# 
   836  019B                     	;# 
   837  019C                     	;# 
   838  019C                     	;# 
   839  019D                     	;# 
   840  019E                     	;# 
   841  019F                     	;# 
   842  020C                     	;# 
   843  0211                     	;# 
   844  0211                     	;# 
   845  0212                     	;# 
   846  0212                     	;# 
   847  0213                     	;# 
   848  0213                     	;# 
   849  0214                     	;# 
   850  0214                     	;# 
   851  0215                     	;# 
   852  0215                     	;# 
   853  0215                     	;# 
   854  0216                     	;# 
   855  0216                     	;# 
   856  0217                     	;# 
   857  0217                     	;# 
   858  0291                     	;# 
   859  0291                     	;# 
   860  0292                     	;# 
   861  0293                     	;# 
   862  0294                     	;# 
   863  0295                     	;# 
   864  0295                     	;# 
   865  0296                     	;# 
   866  0391                     	;# 
   867  0392                     	;# 
   868  0393                     	;# 
   869  039A                     	;# 
   870  039C                     	;# 
   871  039D                     	;# 
   872  039E                     	;# 
   873  039F                     	;# 
   874  0FE4                     	;# 
   875  0FE5                     	;# 
   876  0FE6                     	;# 
   877  0FE7                     	;# 
   878  0FE8                     	;# 
   879  0FE9                     	;# 
   880  0FEA                     	;# 
   881  0FEB                     	;# 
   882  0FED                     	;# 
   883  0FEE                     	;# 
   884  0FEF                     	;# 
   885                           
   886                           	psect	idataBANK0
   887  0397                     __pidataBANK0:	
   888                           
   889                           ;initializer for _pRadioConfiguration
   890  0397  345F               	retlw	low (_RadioConfiguration| 0)
   891                           
   892                           ;initializer for _RadioConfiguration
   893  0398  3433               	retlw	low (_Radio_Configuration_Data_Array| (0+32768))
   894  0399  3480               	retlw	high (_Radio_Configuration_Data_Array| (0+32768))
   895  039A  3400               	retlw	0
   896  039B  3407               	retlw	7
   897  039C  3403               	retlw	3
   898  039D  3400               	retlw	0
   899  039E  34F0               	retlw	240
   900                           
   901                           	psect	stringtext
   902  0033                     __pstringtext:	
   903  0033                     _Radio_Configuration_Data_Array:	
   904  0033  3407               	retlw	7
   905  0034  3402               	retlw	2
   906  0035  3401               	retlw	1
   907  0036  3400               	retlw	0
   908  0037  3401               	retlw	1
   909  0038  34C9               	retlw	201
   910  0039  34C3               	retlw	195
   911  003A  3480               	retlw	128
   912  003B  3406               	retlw	6
   913  003C  3411               	retlw	17
   914  003D  3401               	retlw	1
   915  003E  3402               	retlw	2
   916  003F  3400               	retlw	0
   917  0040  3401               	retlw	1
   918  0041  34C8               	retlw	200
   919  0042  3408               	retlw	8
   920  0043  3411               	retlw	17
   921  0044  3402               	retlw	2
   922  0045  3404               	retlw	4
   923  0046  3400               	retlw	0
   924  0047  3408               	retlw	8
   925  0048  3406               	retlw	6
   926  0049  3404               	retlw	4
   927  004A  340A               	retlw	10
   928  004B  3405               	retlw	5
   929  004C  3411               	retlw	17
   930  004D  3424               	retlw	36
   931  004E  3401               	retlw	1
   932  004F  3403               	retlw	3
   933  0050  3452               	retlw	82
   934  0051  3472               	retlw	114
   935  0052  3466               	retlw	102
   936  0053  3496               	retlw	150
   937  0054  3470               	retlw	112
   938  0055  34AC               	retlw	172
   939  0056  3457               	retlw	87
   940  0057  349F               	retlw	159
   941  0058  348C               	retlw	140
   942  0059  3466               	retlw	102
   943  005A  347F               	retlw	127
   944  005B  34A4               	retlw	164
   945  005C  34DB               	retlw	219
   946  005D  342D               	retlw	45
   947  005E  3420               	retlw	32
   948  005F  34F1               	retlw	241
   949  0060  3455               	retlw	85
   950  0061  3406               	retlw	6
   951  0062  3447               	retlw	71
   952  0063  347D               	retlw	125
   953  0064  3493               	retlw	147
   954  0065  344F               	retlw	79
   955  0066  3424               	retlw	36
   956  0067  3442               	retlw	66
   957  0068  349C               	retlw	156
   958  0069  34AF               	retlw	175
   959  006A  34C9               	retlw	201
   960  006B  349F               	retlw	159
   961  006C  347C               	retlw	124
   962  006D  3469               	retlw	105
   963  006E  34D8               	retlw	216
   964  006F  345E               	retlw	94
   965  0070  343E               	retlw	62
   966  0071  346A               	retlw	106
   967  0072  34D2               	retlw	210
   968  0073  346F               	retlw	111
   969  0074  348C               	retlw	140
   970  0075  34B2               	retlw	178
   971  0076  3427               	retlw	39
   972  0077  34D7               	retlw	215
   973  0078  3407               	retlw	7
   974  0079  34BC               	retlw	188
   975  007A  34F3               	retlw	243
   976  007B  3456               	retlw	86
   977  007C  34D4               	retlw	212
   978  007D  3424               	retlw	36
   979  007E  3405               	retlw	5
   980  007F  34F2               	retlw	242
   981  0080  34EB               	retlw	235
   982  0081  34B2               	retlw	178
   983  0082  347E               	retlw	126
   984  0083  3469               	retlw	105
   985  0084  347F               	retlw	127
   986  0085  34D4               	retlw	212
   987  0086  3465               	retlw	101
   988  0087  34C9               	retlw	201
   989  0088  3455               	retlw	85
   990  0089  3436               	retlw	54
   991  008A  344A               	retlw	74
   992  008B  34FB               	retlw	251
   993  008C  3452               	retlw	82
   994  008D  345D               	retlw	93
   995  008E  3469               	retlw	105
   996  008F  344F               	retlw	79
   997  0090  3499               	retlw	153
   998  0091  34C1               	retlw	193
   999  0092  34D2               	retlw	210
  1000  0093  345F               	retlw	95
  1001  0094  34D6               	retlw	214
  1002  0095  34EF               	retlw	239
  1003  0096  34C5               	retlw	197
  1004  0097  34F8               	retlw	248
  1005  0098  3487               	retlw	135
  1006  0099  340F               	retlw	15
  1007  009A  3493               	retlw	147
  1008  009B  34E2               	retlw	226
  1009  009C  3407               	retlw	7
  1010  009D  3477               	retlw	119
  1011  009E  340E               	retlw	14
  1012  009F  3410               	retlw	16
  1013  00A0  342B               	retlw	43
  1014  00A1  34B3               	retlw	179
  1015  00A2  3439               	retlw	57
  1016  00A3  3434               	retlw	52
  1017  00A4  342A               	retlw	42
  1018  00A5  3466               	retlw	102
  1019  00A6  3420               	retlw	32
  1020  00A7  3420               	retlw	32
  1021  00A8  340D               	retlw	13
  1022  00A9  344C               	retlw	76
  1023  00AA  3426               	retlw	38
  1024  00AB  3484               	retlw	132
  1025  00AC  34E9               	retlw	233
  1026  00AD  34E7               	retlw	231
  1027  00AE  34F5               	retlw	245
  1028  00AF  3472               	retlw	114
  1029  00B0  34BA               	retlw	186
  1030  00B1  3479               	retlw	121
  1031  00B2  342C               	retlw	44
  1032  00B3  344C               	retlw	76
  1033  00B4  34ED               	retlw	237
  1034  00B5  3486               	retlw	134
  1035  00B6  34B3               	retlw	179
  1036  00B7  3498               	retlw	152
  1037  00B8  34D3               	retlw	211
  1038  00B9  349F               	retlw	159
  1039  00BA  343B               	retlw	59
  1040  00BB  3427               	retlw	39
  1041  00BC  34BC               	retlw	188
  1042  00BD  340A               	retlw	10
  1043  00BE  3419               	retlw	25
  1044  00BF  3418               	retlw	24
  1045  00C0  3485               	retlw	133
  1046  00C1  3485               	retlw	133
  1047  00C2  3405               	retlw	5
  1048  00C3  3416               	retlw	22
  1049  00C4  3401               	retlw	1
  1050  00C5  3400               	retlw	0
  1051  00C6  3470               	retlw	112
  1052  00C7  3466               	retlw	102
  1053  00C8  3467               	retlw	103
  1054  00C9  344E               	retlw	78
  1055  00CA  34F6               	retlw	246
  1056  00CB  3409               	retlw	9
  1057  00CC  3465               	retlw	101
  1058  00CD  3492               	retlw	146
  1059  00CE  34B9               	retlw	185
  1060  00CF  340C               	retlw	12
  1061  00D0  348F               	retlw	143
  1062  00D1  342C               	retlw	44
  1063  00D2  349A               	retlw	154
  1064  00D3  3438               	retlw	56
  1065  00D4  34C5               	retlw	197
  1066  00D5  340A               	retlw	10
  1067  00D6  3477               	retlw	119
  1068  00D7  34CF               	retlw	207
  1069  00D8  3480               	retlw	128
  1070  00D9  3405               	retlw	5
  1071  00DA  34DC               	retlw	220
  1072  00DB  3428               	retlw	40
  1073  00DC  34DA               	retlw	218
  1074  00DD  340F               	retlw	15
  1075  00DE  34BE               	retlw	190
  1076  00DF  347E               	retlw	126
  1077  00E0  34BE               	retlw	190
  1078  00E1  34C6               	retlw	198
  1079  00E2  3498               	retlw	152
  1080  00E3  341A               	retlw	26
  1081  00E4  341F               	retlw	31
  1082  00E5  342E               	retlw	46
  1083  00E6  3424               	retlw	36
  1084  00E7  349D               	retlw	157
  1085  00E8  34B7               	retlw	183
  1086  00E9  34F2               	retlw	242
  1087  00EA  3472               	retlw	114
  1088  00EB  3468               	retlw	104
  1089  00EC  341A               	retlw	26
  1090  00ED  3404               	retlw	4
  1091  00EE  34F2               	retlw	242
  1092  00EF  3433               	retlw	51
  1093  00F0  344D               	retlw	77
  1094  00F1  3428               	retlw	40
  1095  00F2  347B               	retlw	123
  1096  00F3  341E               	retlw	30
  1097  00F4  3456               	retlw	86
  1098  00F5  349E               	retlw	158
  1099  00F6  3419               	retlw	25
  1100  00F7  34D3               	retlw	211
  1101  00F8  3484               	retlw	132
  1102  00F9  3475               	retlw	117
  1103  00FA  342B               	retlw	43
  1104  00FB  343F               	retlw	63
  1105  00FC  34C6               	retlw	198
  1106  00FD  343D               	retlw	61
  1107  00FE  3475               	retlw	117
  1108  00FF  3441               	retlw	65
  1109  0100  34BC               	retlw	188
  1110  0101  3426               	retlw	38
  1111  0102  34FC               	retlw	252
  1112  0103  3428               	retlw	40
  1113  0104  34FC               	retlw	252
  1114  0105  34D6               	retlw	214
  1115  0106  345F               	retlw	95
  1116  0107  34CB               	retlw	203
  1117  0108  3473               	retlw	115
  1118  0109  34B2               	retlw	178
  1119  010A  342A               	retlw	42
  1120  010B  34A1               	retlw	161
  1121  010C  3438               	retlw	56
  1122  010D  3477               	retlw	119
  1123  010E  3400               	retlw	0
  1124  010F  34C3               	retlw	195
  1125  0110  3416               	retlw	22
  1126  0111  34D9               	retlw	217
  1127  0112  343E               	retlw	62
  1128  0113  34A0               	retlw	160
  1129  0114  3443               	retlw	67
  1130  0115  3461               	retlw	97
  1131  0116  3465               	retlw	101
  1132  0117  34EF               	retlw	239
  1133  0118  343D               	retlw	61
  1134  0119  34CE               	retlw	206
  1135  011A  3480               	retlw	128
  1136  011B  3456               	retlw	86
  1137  011C  34F9               	retlw	249
  1138  011D  34CF               	retlw	207
  1139  011E  3418               	retlw	24
  1140  011F  3405               	retlw	5
  1141  0120  3449               	retlw	73
  1142  0121  3483               	retlw	131
  1143  0122  3407               	retlw	7
  1144  0123  3482               	retlw	130
  1145  0124  3445               	retlw	69
  1146  0125  34F6               	retlw	246
  1147  0126  3407               	retlw	7
  1148  0127  34B2               	retlw	178
  1149  0128  34BC               	retlw	188
  1150  0129  344C               	retlw	76
  1151  012A  348A               	retlw	138
  1152  012B  3466               	retlw	102
  1153  012C  346F               	retlw	111
  1154  012D  341B               	retlw	27
  1155  012E  349E               	retlw	158
  1156  012F  34EF               	retlw	239
  1157  0130  3424               	retlw	36
  1158  0131  3497               	retlw	151
  1159  0132  340A               	retlw	10
  1160  0133  34B0               	retlw	176
  1161  0134  349E               	retlw	158
  1162  0135  34CF               	retlw	207
  1163  0136  3449               	retlw	73
  1164  0137  3403               	retlw	3
  1165  0138  3419               	retlw	25
  1166  0139  3448               	retlw	72
  1167  013A  3453               	retlw	83
  1168  013B  3408               	retlw	8
  1169  013C  3413               	retlw	19
  1170  013D  3400               	retlw	0
  1171  013E  3400               	retlw	0
  1172  013F  3400               	retlw	0
  1173  0140  3400               	retlw	0
  1174  0141  3400               	retlw	0
  1175  0142  3400               	retlw	0
  1176  0143  3460               	retlw	96
  1177  0144  3400               	retlw	0
  1178  0145                     __end_of_Radio_Configuration_Data_Array:	
  1179  000C                     _PORTA	set	12
  1180  0015                     _TMR0	set	21
  1181  0061                     _RA1	set	97
  1182  0065                     _RA5	set	101
  1183  0063                     _RA3	set	99
  1184  0060                     _RA0	set	96
  1185  005A                     _TMR0IF	set	90
  1186  005F                     _GIE	set	95
  1187  005D                     _TMR0IE	set	93
  1188  008B                     _SSP1IF	set	139
  1189  008C                     _TRISA	set	140
  1190  0095                     _OPTION_REG	set	149
  1191  048B                     _SSP1IE	set	1163
  1192  08ED                     _SSSEL	set	2285
  1193  08EE                     _SDOSEL	set	2286
  1194  018C                     _ANSELA	set	396
  1195  0211                     _SSPBUF	set	529
  1196  10A0                     _BF	set	4256
  1197  10AB                     _SSPM3	set	4267
  1198  10AA                     _SSPM2	set	4266
  1199  10A9                     _SSPM1	set	4265
  1200  10A8                     _SSPM0	set	4264
  1201  10AC                     _CKP	set	4268
  1202  10A6                     _CKE	set	4262
  1203  10A7                     _SMP	set	4263
  1204  10AD                     _SSPEN	set	4269
  1205                           
  1206                           ; #config settings
  1207  0000                     
  1208                           	psect	cinit
  1209  001B                     start_initialization:	
  1210  001B                     __initialization:	
  1211                           
  1212                           ; Initialize objects allocated to BANK0
  1213  001B  3097               	movlw	low __pidataBANK0
  1214  001C  0084               	movwf	4
  1215  001D  3083               	movlw	(high __pidataBANK0)| (0+128)
  1216  001E  0085               	movwf	5
  1217  001F  305E               	movlw	low __pdataBANK0
  1218  0020  0086               	movwf	6
  1219  0021  3000               	movlw	high __pdataBANK0
  1220  0022  0087               	movwf	7
  1221  0023  3008               	movlw	8
  1222  0024  3183  239F  3180   	fcall	init_ram
  1223                           
  1224                           ; Clear objects allocated to COMMON
  1225  0027  01FC               	clrf	__pbssCOMMON& (0+127)
  1226                           
  1227                           ; Clear objects allocated to BANK0
  1228  0028  3020               	movlw	low __pbssBANK0
  1229  0029  0084               	movwf	4
  1230  002A  3000               	movlw	high __pbssBANK0
  1231  002B  0085               	movwf	5
  1232  002C  302B               	movlw	43
  1233  002D  3183  23A5         	fcall	clear_ram0
  1234  002F                     end_of_initialization:	
  1235                           ;End of C runtime variable initialization code
  1236                           
  1237  002F                     __end_of__initialization:	
  1238  002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1239  0030  0020               	movlb	0
  1240  0031  3182  2A13         	ljmp	_main	;jump to C main() function
  1241                           
  1242                           	psect	bssCOMMON
  1243  007C                     __pbssCOMMON:	
  1244  007C                     _ctsWentHigh:	
  1245  007C                     	ds	1
  1246                           
  1247                           	psect	bssBANK0
  1248  0020                     __pbssBANK0:	
  1249  0020                     _Si4355Cmd:	
  1250  0020                     	ds	16
  1251  0030                     _counter:	
  1252  0030                     	ds	2
  1253  0032                     _STATE:	
  1254  0032                     	ds	1
  1255  0033                     _dummy:	
  1256  0033                     	ds	1
  1257  0034                     _radioCmd:	
  1258  0034                     	ds	16
  1259  0044                     _RadioPacket:	
  1260  0044                     	ds	7
  1261                           
  1262                           	psect	dataBANK0
  1263  005E                     __pdataBANK0:	
  1264  005E                     _pRadioConfiguration:	
  1265  005E                     	ds	1
  1266  005F                     _RadioConfiguration:	
  1267  005F                     	ds	7
  1268                           
  1269                           	psect	inittext
  1270  039F                     init_ram:	
  1271  039F  00FE               	movwf	126
  1272  03A0                     initloop:	
  1273  03A0  0012               	moviw fsr0++
  1274  03A1  001E               	movwi fsr1++
  1275  03A2  0BFE               	decfsz	126,f
  1276  03A3  2BA0               	goto	initloop
  1277  03A4  3400               	retlw	0
  1278                           
  1279                           	psect	clrtext
  1280  03A5                     clear_ram0:	
  1281                           ;	Called with FSR0 containing the base address, and
  1282                           ;	WREG with the size to clear
  1283                           
  1284  03A5  0064               	clrwdt	;clear the watchdog before getting into this loop
  1285  03A6                     clrloop0:	
  1286  03A6  0180               	clrf	0	;clear RAM location pointed to by FSR
  1287  03A7  3101               	addfsr 0,1
  1288  03A8  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1289  03A9  2BA6               	goto	clrloop0	;have we reached the end yet?
  1290  03AA  3400               	retlw	0	;all done for this memory range, return
  1291                           
  1292                           	psect	cstackCOMMON
  1293  0070                     __pcstackCOMMON:	
  1294  0070                     ?_SPI_WriteByte:	
  1295  0070                     ?_SPI_ReadByte:	
  1296                           ; 1 bytes @ 0x0
  1297                           
  1298  0070                     ?_HW_Config:	
  1299                           ; 1 bytes @ 0x0
  1300                           
  1301  0070                     ?_Radio_Init:	
  1302                           ; 1 bytes @ 0x0
  1303                           
  1304  0070                     ?_Radio_StartRX:	
  1305                           ; 1 bytes @ 0x0
  1306                           
  1307  0070                     ?_si4355_fifo_info:	
  1308                           ; 1 bytes @ 0x0
  1309                           
  1310  0070                     ?_Radio_CheckReceived:	
  1311                           ; 1 bytes @ 0x0
  1312                           
  1313  0070                     ?_si4355_reset:	
  1314                           ; 1 bytes @ 0x0
  1315                           
  1316  0070                     ?_radio_comm_PollCTS:	
  1317                           ; 1 bytes @ 0x0
  1318                           
  1319  0070                     ?_SPI_Init:	
  1320                           ; 1 bytes @ 0x0
  1321                           
  1322  0070                     ?_main:	
  1323                           ; 1 bytes @ 0x0
  1324                           
  1325  0070                     ?_Timer0_ISR:	
  1326                           ; 1 bytes @ 0x0
  1327                           
  1328  0070                     ??_Timer0_ISR:	
  1329                           ; 1 bytes @ 0x0
  1330                           
  1331  0070                     ?_Radio_PowerUp:	
  1332                           ; 1 bytes @ 0x0
  1333                           
  1334                           
  1335                           ; 1 bytes @ 0x0
  1336  0070                     	ds	1
  1337  0071                     ??_SPI_WriteByte:	
  1338  0071                     ??_SPI_ReadByte:	
  1339                           ; 1 bytes @ 0x1
  1340                           
  1341  0071                     ??_HW_Config:	
  1342                           ; 1 bytes @ 0x1
  1343                           
  1344  0071                     ??_si4355_reset:	
  1345                           ; 1 bytes @ 0x1
  1346                           
  1347  0071                     ??_SPI_Init:	
  1348                           ; 1 bytes @ 0x1
  1349                           
  1350                           
  1351                           ; 1 bytes @ 0x1
  1352  0071                     	ds	1
  1353  0072                     SPI_WriteByte@data:	
  1354  0072                     SPI_ReadByte@data:	
  1355                           ; 1 bytes @ 0x2
  1356                           
  1357                           
  1358                           ; 1 bytes @ 0x2
  1359  0072                     	ds	1
  1360  0073                     ?_SPI_WriteBytes:	
  1361  0073                     ?_SPI_ReadBytes:	
  1362                           ; 1 bytes @ 0x3
  1363                           
  1364  0073                     SPI_WriteBytes@data:	
  1365                           ; 1 bytes @ 0x3
  1366                           
  1367  0073                     SPI_ReadBytes@data:	
  1368                           ; 1 bytes @ 0x3
  1369                           
  1370                           
  1371                           ; 1 bytes @ 0x3
  1372  0073                     	ds	1
  1373  0074                     ??_SPI_WriteBytes:	
  1374  0074                     ??_SPI_ReadBytes:	
  1375                           ; 1 bytes @ 0x4
  1376                           
  1377                           
  1378                           ; 1 bytes @ 0x4
  1379  0074                     	ds	1
  1380  0075                     SPI_WriteBytes@len:	
  1381  0075                     SPI_ReadBytes@len:	
  1382                           ; 1 bytes @ 0x5
  1383                           
  1384                           
  1385                           ; 1 bytes @ 0x5
  1386  0075                     	ds	1
  1387  0076                     ?_radio_comm_GetResp:	
  1388  0076                     radio_comm_GetResp@pData:	
  1389                           ; 1 bytes @ 0x6
  1390                           
  1391                           
  1392                           ; 1 bytes @ 0x6
  1393  0076                     	ds	1
  1394  0077                     ??_radio_comm_GetResp:	
  1395                           
  1396                           ; 1 bytes @ 0x7
  1397  0077                     	ds	1
  1398  0078                     radio_comm_GetResp@byteCount:	
  1399                           
  1400                           ; 1 bytes @ 0x8
  1401  0078                     	ds	1
  1402  0079                     radio_comm_GetResp@errCnt:	
  1403                           
  1404                           ; 2 bytes @ 0x9
  1405  0079                     	ds	2
  1406  007B                     ??_radio_comm_PollCTS:	
  1407  007B                     ?_radio_comm_SendCmd:	
  1408                           ; 1 bytes @ 0xB
  1409                           
  1410  007B                     ??_radio_comm_ReadData:	
  1411                           ; 1 bytes @ 0xB
  1412                           
  1413  007B                     ??_Radio_PowerUp:	
  1414                           ; 1 bytes @ 0xB
  1415                           
  1416  007B                     radio_comm_SendCmd@pData:	
  1417                           ; 1 bytes @ 0xB
  1418                           
  1419                           
  1420                           ; 1 bytes @ 0xB
  1421  007B                     	ds	1
  1422  007C                     ??_Radio_Init:	
  1423                           
  1424                           	psect	cstackBANK0
  1425  004B                     __pcstackBANK0:	
  1426                           ; 1 bytes @ 0xC
  1427                           
  1428  004B                     ??_radio_comm_SendCmd:	
  1429  004B                     ?_radio_comm_ReadData:	
  1430                           ; 1 bytes @ 0x0
  1431                           
  1432  004B                     radio_comm_ReadData@pollCts:	
  1433                           ; 1 bytes @ 0x0
  1434                           
  1435  004B                     Radio_PowerUp@wDelay:	
  1436                           ; 1 bytes @ 0x0
  1437                           
  1438                           
  1439                           ; 2 bytes @ 0x0
  1440  004B                     	ds	1
  1441  004C                     radio_comm_SendCmd@byteCount:	
  1442  004C                     radio_comm_ReadData@byteCount:	
  1443                           ; 1 bytes @ 0x1
  1444                           
  1445                           
  1446                           ; 1 bytes @ 0x1
  1447  004C                     	ds	1
  1448  004D                     ?_si4355_start_rx:	
  1449  004D                     ?_radio_comm_SendCmdGetResp:	
  1450                           ; 1 bytes @ 0x2
  1451                           
  1452  004D                     si4355_start_rx@CONDITION:	
  1453                           ; 1 bytes @ 0x2
  1454                           
  1455  004D                     radio_comm_SendCmdGetResp@pCmdData:	
  1456                           ; 1 bytes @ 0x2
  1457                           
  1458  004D                     radio_comm_ReadData@pData:	
  1459                           ; 1 bytes @ 0x2
  1460                           
  1461                           
  1462                           ; 1 bytes @ 0x2
  1463  004D                     	ds	1
  1464  004E                     radio_comm_SendCmdGetResp@respByteCount:	
  1465  004E                     radio_comm_ReadData@cmd:	
  1466                           ; 1 bytes @ 0x3
  1467                           
  1468  004E                     si4355_start_rx@RX_LEN:	
  1469                           ; 1 bytes @ 0x3
  1470                           
  1471                           
  1472                           ; 2 bytes @ 0x3
  1473  004E                     	ds	1
  1474  004F                     ?_si4355_read_rx_fifo:	
  1475  004F                     si4355_read_rx_fifo@pRxData:	
  1476                           ; 1 bytes @ 0x4
  1477                           
  1478  004F                     radio_comm_SendCmdGetResp@pRespData:	
  1479                           ; 1 bytes @ 0x4
  1480                           
  1481                           
  1482                           ; 1 bytes @ 0x4
  1483  004F                     	ds	1
  1484  0050                     ??_si4355_read_rx_fifo:	
  1485  0050                     ??_radio_comm_SendCmdGetResp:	
  1486                           ; 1 bytes @ 0x5
  1487                           
  1488  0050                     si4355_start_rx@NEXT_STATE1:	
  1489                           ; 1 bytes @ 0x5
  1490                           
  1491                           
  1492                           ; 1 bytes @ 0x5
  1493  0050                     	ds	1
  1494  0051                     si4355_start_rx@NEXT_STATE2:	
  1495  0051                     radio_comm_SendCmdGetResp@cmdByteCount:	
  1496                           ; 1 bytes @ 0x6
  1497                           
  1498                           
  1499                           ; 1 bytes @ 0x6
  1500  0051                     	ds	1
  1501  0052                     ??_si4355_fifo_info:	
  1502  0052                     ?_si4355_get_int_status:	
  1503                           ; 1 bytes @ 0x7
  1504                           
  1505  0052                     si4355_get_int_status@MODEM_CLR_PEND:	
  1506                           ; 1 bytes @ 0x7
  1507                           
  1508  0052                     si4355_start_rx@NEXT_STATE3:	
  1509                           ; 1 bytes @ 0x7
  1510                           
  1511  0052                     si4355_read_rx_fifo@numBytes:	
  1512                           ; 1 bytes @ 0x7
  1513                           
  1514                           
  1515                           ; 1 bytes @ 0x7
  1516  0052                     	ds	1
  1517  0053                     ??_si4355_start_rx:	
  1518  0053                     si4355_get_int_status@CHIP_CLR_PEND:	
  1519                           ; 1 bytes @ 0x8
  1520                           
  1521                           
  1522                           ; 1 bytes @ 0x8
  1523  0053                     	ds	1
  1524  0054                     ??_si4355_get_int_status:	
  1525  0054                     si4355_start_rx@CHANNEL:	
  1526                           ; 1 bytes @ 0x9
  1527                           
  1528                           
  1529                           ; 1 bytes @ 0x9
  1530  0054                     	ds	1
  1531  0055                     si4355_fifo_info@FIFO:	
  1532                           
  1533                           ; 1 bytes @ 0xA
  1534  0055                     	ds	2
  1535  0057                     si4355_get_int_status@PH_CLR_PEND:	
  1536                           
  1537                           ; 1 bytes @ 0xC
  1538  0057                     	ds	1
  1539  0058                     ??_Radio_StartRX:	
  1540  0058                     ??_Radio_CheckReceived:	
  1541                           ; 1 bytes @ 0xD
  1542                           
  1543  0058                     ?_si4355_configuration_init:	
  1544                           ; 1 bytes @ 0xD
  1545                           
  1546  0058                     si4355_configuration_init@pSetPropCmd:	
  1547                           ; 1 bytes @ 0xD
  1548                           
  1549                           
  1550                           ; 2 bytes @ 0xD
  1551  0058                     	ds	2
  1552  005A                     ??_si4355_configuration_init:	
  1553  005A                     Radio_StartRX@channel:	
  1554                           ; 1 bytes @ 0xF
  1555                           
  1556                           
  1557                           ; 1 bytes @ 0xF
  1558  005A                     	ds	1
  1559  005B                     si4355_configuration_init@col:	
  1560                           
  1561                           ; 1 bytes @ 0x10
  1562  005B                     	ds	1
  1563  005C                     si4355_configuration_init@numOfBytes:	
  1564                           
  1565                           ; 1 bytes @ 0x11
  1566  005C                     	ds	1
  1567  005D                     ??_main:	
  1568                           
  1569                           ; 1 bytes @ 0x12
  1570  005D                     	ds	1
  1571                           
  1572                           	psect	maintext
  1573  0213                     __pmaintext:	
  1574 ;;
  1575 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1576 ;;
  1577 ;; *************** function _main *****************
  1578 ;; Defined at:
  1579 ;;		line 20 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/main.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;		None
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;		None
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  1    wreg      void 
  1586 ;; Registers used:
  1587 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1588 ;; Tracked objects:
  1589 ;;		On entry : B1F/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1593 ;;      Params:         0       0       0       0
  1594 ;;      Locals:         0       0       0       0
  1595 ;;      Temps:          0       1       0       0
  1596 ;;      Totals:         0       1       0       0
  1597 ;;Total ram usage:        1 bytes
  1598 ;; Hardware stack levels required when called:   10
  1599 ;; This function calls:
  1600 ;;		_HW_Config
  1601 ;;		_Radio_CheckReceived
  1602 ;;		_Radio_Init
  1603 ;;		_Radio_StartRX
  1604 ;;		_SPI_Init
  1605 ;;		_si4355_fifo_info
  1606 ;; This function is called by:
  1607 ;;		Startup code after reset
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           
  1612                           ;psect for function _main
  1613  0213                     _main:	
  1614                           
  1615                           ;main.c: 22: HW_Config();
  1616                           
  1617                           ;incstack = 0
  1618                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1619  0213  3183  2377  3182   	fcall	_HW_Config
  1620                           
  1621                           ;main.c: 23: SPI_Init();
  1622  0216  3183  2337  3182   	fcall	_SPI_Init
  1623                           
  1624                           ;main.c: 34: {
  1625                           ;main.c: 35: switch( STATE )
  1626                           
  1627                           ;main.c: 33: while(1)
  1628  0219  2A31               	goto	l1915
  1629  021A                     l1905:	
  1630                           ;main.c: 36: {
  1631                           ;main.c: 37: case STARTUP:
  1632                           
  1633                           
  1634                           ;main.c: 38: Radio_Init();
  1635  021A  3182  22E1  3182   	fcall	_Radio_Init
  1636  021D                     l1907:	
  1637                           ;main.c: 39: case ARMED:
  1638                           
  1639                           
  1640                           ;main.c: 40: Radio_StartRX( 0u );
  1641  021D  3000               	movlw	0
  1642  021E  3182  22C6  3182   	fcall	_Radio_StartRX
  1643                           
  1644                           ;main.c: 42: si4355_fifo_info( 0x02 );
  1645  0221  3002               	movlw	2
  1646  0222  3182  2268  3182   	fcall	_si4355_fifo_info
  1647                           
  1648                           ;main.c: 43: STATE = RECEIVING;
  1649  0225  3002               	movlw	2
  1650  0226  0020               	movlb	0	; select bank0
  1651  0227  00DD               	movwf	??_main
  1652  0228  085D               	movf	??_main,w
  1653  0229  00B2               	movwf	_STATE
  1654                           
  1655                           ;main.c: 44: break;
  1656  022A  2A31               	goto	l1915
  1657  022B                     l1913:	
  1658                           ;main.c: 45: case RECEIVING:
  1659                           
  1660                           
  1661                           ;main.c: 46: if( Radio_CheckReceived() );
  1662  022B  3182  22F9  3182   	fcall	_Radio_CheckReceived
  1663                           
  1664                           ;main.c: 47: STATE = ARMED;
  1665  022E  0020               	movlb	0	; select bank0
  1666  022F                     l102:	
  1667                           ;main.c: 49: default:
  1668                           
  1669                           ;main.c: 48: break;
  1670                           
  1671                           
  1672                           ;main.c: 50: STATE = ARMED;
  1673  022F  01B2               	clrf	_STATE
  1674  0230  0AB2               	incf	_STATE,f
  1675  0231                     l1915:	
  1676                           ;main.c: 51: }
  1677                           
  1678  0231  0020               	movlb	0	; select bank0
  1679  0232  0832               	movf	_STATE,w
  1680                           
  1681                           ; Switch size 1, requested type "space"
  1682                           ; Number of cases is 3, Range of values is 0 to 2
  1683                           ; switch strategies available:
  1684                           ; Name         Instructions Cycles
  1685                           ; simple_byte           10     6 (average)
  1686                           ; direct_byte           12     6 (fixed)
  1687                           ; jumptable            260     6 (fixed)
  1688                           ;	Chosen strategy is simple_byte
  1689  0233  3A00               	xorlw	0	; case 0
  1690  0234  1903               	skipnz
  1691  0235  2A1A               	goto	l1905
  1692  0236  3A01               	xorlw	1	; case 1
  1693  0237  1903               	skipnz
  1694  0238  2A1D               	goto	l1907
  1695  0239  3A03               	xorlw	3	; case 2
  1696  023A  1903               	skipnz
  1697  023B  2A2B               	goto	l1913
  1698  023C  2A2F               	goto	l102
  1699  023D  2A31               	goto	l1915
  1700  023E                     __end_of_main:	
  1701                           ;main.c: 52: }
  1702                           ;main.c: 53: return;
  1703                           
  1704                           
  1705                           	psect	text1
  1706  0268                     __ptext1:	
  1707 ;; *************** function _si4355_fifo_info *****************
  1708 ;; Defined at:
  1709 ;;		line 200 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/si4355.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;  FIFO            1    wreg     unsigned char 
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;  FIFO            1   10[BANK0 ] unsigned char 
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      void 
  1716 ;; Registers used:
  1717 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1723 ;;      Params:         0       0       0       0
  1724 ;;      Locals:         0       1       0       0
  1725 ;;      Temps:          0       3       0       0
  1726 ;;      Totals:         0       4       0       0
  1727 ;;Total ram usage:        4 bytes
  1728 ;; Hardware stack levels used:    1
  1729 ;; Hardware stack levels required when called:    7
  1730 ;; This function calls:
  1731 ;;		_radio_comm_SendCmdGetResp
  1732 ;; This function is called by:
  1733 ;;		_main
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           
  1738                           ;psect for function _si4355_fifo_info
  1739  0268                     _si4355_fifo_info:	
  1740                           
  1741                           ;incstack = 0
  1742                           ; Regs used in _si4355_fifo_info: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1743                           ;si4355_fifo_info@FIFO stored from wreg
  1744  0268  0020               	movlb	0	; select bank0
  1745  0269  00D5               	movwf	si4355_fifo_info@FIFO
  1746                           
  1747                           ;si4355.c: 202: radioCmd[0] = 0x15;
  1748  026A  3015               	movlw	21
  1749  026B  00D2               	movwf	??_si4355_fifo_info
  1750  026C  0852               	movf	??_si4355_fifo_info,w
  1751  026D  00B4               	movwf	_radioCmd
  1752                           
  1753                           ;si4355.c: 203: radioCmd[1] = FIFO;
  1754  026E  0855               	movf	si4355_fifo_info@FIFO,w
  1755  026F  00D2               	movwf	??_si4355_fifo_info
  1756  0270  0852               	movf	??_si4355_fifo_info,w
  1757  0271  00B5               	movwf	_radioCmd+1
  1758                           
  1759                           ;si4355.c: 205: radio_comm_SendCmdGetResp( 2,
  1760                           ;si4355.c: 206: radioCmd,
  1761                           ;si4355.c: 207: 2,
  1762                           ;si4355.c: 208: radioCmd );
  1763  0272  3034               	movlw	(low (_radioCmd| 0))& (0+255)
  1764  0273  00D2               	movwf	??_si4355_fifo_info
  1765  0274  0852               	movf	??_si4355_fifo_info,w
  1766  0275  00CD               	movwf	radio_comm_SendCmdGetResp@pCmdData
  1767  0276  3002               	movlw	2
  1768  0277  00D3               	movwf	??_si4355_fifo_info+1
  1769  0278  0853               	movf	??_si4355_fifo_info+1,w
  1770  0279  00CE               	movwf	radio_comm_SendCmdGetResp@respByteCount
  1771  027A  3034               	movlw	(low (_radioCmd| 0))& (0+255)
  1772  027B  00D4               	movwf	??_si4355_fifo_info+2
  1773  027C  0854               	movf	??_si4355_fifo_info+2,w
  1774  027D  00CF               	movwf	radio_comm_SendCmdGetResp@pRespData
  1775  027E  3002               	movlw	2
  1776  027F  3183  2324         	fcall	_radio_comm_SendCmdGetResp
  1777                           
  1778                           ;si4355.c: 210: Si4355Cmd.FIFO_INFO.RX_FIFO_COUNT = radioCmd[0];
  1779  0281  0020               	movlb	0	; select bank0
  1780  0282  0834               	movf	_radioCmd,w
  1781  0283  00D2               	movwf	??_si4355_fifo_info
  1782  0284  0852               	movf	??_si4355_fifo_info,w
  1783  0285  00A0               	movwf	_Si4355Cmd
  1784                           
  1785                           ;si4355.c: 211: Si4355Cmd.FIFO_INFO.TX_FIFO_SPACE = radioCmd[1];
  1786  0286  0835               	movf	_radioCmd+1,w
  1787  0287  00D2               	movwf	??_si4355_fifo_info
  1788  0288  0852               	movf	??_si4355_fifo_info,w
  1789  0289  00A1               	movwf	_Si4355Cmd+1
  1790  028A  0008               	return
  1791  028B                     __end_of_si4355_fifo_info:	
  1792                           
  1793                           	psect	text2
  1794  0337                     __ptext2:	
  1795 ;; *************** function _SPI_Init *****************
  1796 ;; Defined at:
  1797 ;;		line 6 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/spi.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;		None
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;		None
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  1    wreg      void 
  1804 ;; Registers used:
  1805 ;;		None
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1811 ;;      Params:         0       0       0       0
  1812 ;;      Locals:         0       0       0       0
  1813 ;;      Temps:          0       0       0       0
  1814 ;;      Totals:         0       0       0       0
  1815 ;;Total ram usage:        0 bytes
  1816 ;; Hardware stack levels used:    1
  1817 ;; Hardware stack levels required when called:    1
  1818 ;; This function calls:
  1819 ;;		Nothing
  1820 ;; This function is called by:
  1821 ;;		_main
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           
  1826                           ;psect for function _SPI_Init
  1827  0337                     _SPI_Init:	
  1828                           
  1829                           ;spi.c: 9: SSPEN = 0;
  1830                           
  1831                           ;incstack = 0
  1832                           ; Regs used in _SPI_Init: []
  1833  0337  0024               	movlb	4	; select bank4
  1834  0338  1295               	bcf	21,5	;volatile
  1835                           
  1836                           ;spi.c: 11: SDOSEL = 1;
  1837  0339  0022               	movlb	2	; select bank2
  1838  033A  171D               	bsf	29,6	;volatile
  1839                           
  1840                           ;spi.c: 12: SSSEL = 0;
  1841  033B  129D               	bcf	29,5	;volatile
  1842                           
  1843                           ;spi.c: 14: SMP = 0;
  1844  033C  0024               	movlb	4	; select bank4
  1845  033D  1394               	bcf	20,7	;volatile
  1846                           
  1847                           ;spi.c: 16: CKE = 0;
  1848  033E  1314               	bcf	20,6	;volatile
  1849                           
  1850                           ;spi.c: 18: CKP = 0;
  1851  033F  1215               	bcf	21,4	;volatile
  1852                           
  1853                           ;spi.c: 20: SSPM0 = 0;
  1854  0340  1015               	bcf	21,0	;volatile
  1855                           
  1856                           ;spi.c: 21: SSPM1 = 0;
  1857  0341  1095               	bcf	21,1	;volatile
  1858                           
  1859                           ;spi.c: 22: SSPM2 = 0;
  1860  0342  1115               	bcf	21,2	;volatile
  1861                           
  1862                           ;spi.c: 23: SSPM3 = 0;
  1863  0343  1195               	bcf	21,3	;volatile
  1864                           
  1865                           ;spi.c: 25: SSP1IE = 1;
  1866  0344  0021               	movlb	1	; select bank1
  1867  0345  1591               	bsf	17,3	;volatile
  1868                           
  1869                           ;spi.c: 27: SSPEN = 1;
  1870  0346  0024               	movlb	4	; select bank4
  1871  0347  1695               	bsf	21,5	;volatile
  1872  0348  0008               	return
  1873  0349                     __end_of_SPI_Init:	
  1874                           
  1875                           	psect	text3
  1876  02C6                     __ptext3:	
  1877 ;; *************** function _Radio_StartRX *****************
  1878 ;; Defined at:
  1879 ;;		line 57 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/radio.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;  channel         1    wreg     unsigned char 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  channel         1   15[BANK0 ] unsigned char 
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      void 
  1886 ;; Registers used:
  1887 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1893 ;;      Params:         0       0       0       0
  1894 ;;      Locals:         0       1       0       0
  1895 ;;      Temps:          0       2       0       0
  1896 ;;      Totals:         0       3       0       0
  1897 ;;Total ram usage:        3 bytes
  1898 ;; Hardware stack levels used:    1
  1899 ;; Hardware stack levels required when called:    8
  1900 ;; This function calls:
  1901 ;;		_si4355_get_int_status
  1902 ;;		_si4355_start_rx
  1903 ;; This function is called by:
  1904 ;;		_main
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           
  1909                           ;psect for function _Radio_StartRX
  1910  02C6                     _Radio_StartRX:	
  1911                           
  1912                           ;incstack = 0
  1913                           ; Regs used in _Radio_StartRX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1914                           ;Radio_StartRX@channel stored from wreg
  1915  02C6  0020               	movlb	0	; select bank0
  1916  02C7  00DA               	movwf	Radio_StartRX@channel
  1917                           
  1918                           ;radio.c: 60: si4355_get_int_status( 0u, 0u, 0u );
  1919  02C8  01D2               	clrf	si4355_get_int_status@MODEM_CLR_PEND
  1920  02C9  01D3               	clrf	si4355_get_int_status@CHIP_CLR_PEND
  1921  02CA  3000               	movlw	0
  1922  02CB  3181  2197  3182   	fcall	_si4355_get_int_status
  1923                           
  1924                           ;radio.c: 63: si4355_start_rx( channel, 0u, 0u,
  1925                           ;radio.c: 64: 8,
  1926                           ;radio.c: 65: 1,
  1927                           ;radio.c: 66: 8 );
  1928  02CE  0020               	movlb	0	; select bank0
  1929  02CF  01CD               	clrf	si4355_start_rx@CONDITION
  1930  02D0  3000               	movlw	0
  1931  02D1  00CE               	movwf	si4355_start_rx@RX_LEN
  1932  02D2  00CF               	movwf	si4355_start_rx@RX_LEN+1
  1933  02D3  3008               	movlw	8
  1934  02D4  00D8               	movwf	??_Radio_StartRX
  1935  02D5  0858               	movf	??_Radio_StartRX,w
  1936  02D6  00D0               	movwf	si4355_start_rx@NEXT_STATE1
  1937  02D7  01D1               	clrf	si4355_start_rx@NEXT_STATE2
  1938  02D8  0AD1               	incf	si4355_start_rx@NEXT_STATE2,f
  1939  02D9  3008               	movlw	8
  1940  02DA  00D9               	movwf	??_Radio_StartRX+1
  1941  02DB  0859               	movf	??_Radio_StartRX+1,w
  1942  02DC  00D2               	movwf	si4355_start_rx@NEXT_STATE3
  1943  02DD  085A               	movf	Radio_StartRX@channel,w
  1944  02DE  3182  223E         	fcall	_si4355_start_rx
  1945  02E0  0008               	return
  1946  02E1                     __end_of_Radio_StartRX:	
  1947                           
  1948                           	psect	text4
  1949  023E                     __ptext4:	
  1950 ;; *************** function _si4355_start_rx *****************
  1951 ;; Defined at:
  1952 ;;		line 261 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/si4355.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;  CHANNEL         1    wreg     unsigned char 
  1955 ;;  CONDITION       1    2[BANK0 ] unsigned char 
  1956 ;;  RX_LEN          2    3[BANK0 ] unsigned int 
  1957 ;;  NEXT_STATE1     1    5[BANK0 ] unsigned char 
  1958 ;;  NEXT_STATE2     1    6[BANK0 ] unsigned char 
  1959 ;;  NEXT_STATE3     1    7[BANK0 ] unsigned char 
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;  CHANNEL         1    9[BANK0 ] unsigned char 
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  1    wreg      void 
  1964 ;; Registers used:
  1965 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1971 ;;      Params:         0       6       0       0
  1972 ;;      Locals:         0       1       0       0
  1973 ;;      Temps:          0       1       0       0
  1974 ;;      Totals:         0       8       0       0
  1975 ;;Total ram usage:        8 bytes
  1976 ;; Hardware stack levels used:    1
  1977 ;; Hardware stack levels required when called:    6
  1978 ;; This function calls:
  1979 ;;		_radio_comm_SendCmd
  1980 ;; This function is called by:
  1981 ;;		_Radio_StartRX
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           
  1986                           ;psect for function _si4355_start_rx
  1987  023E                     _si4355_start_rx:	
  1988                           
  1989                           ;incstack = 0
  1990                           ; Regs used in _si4355_start_rx: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1991                           ;si4355_start_rx@CHANNEL stored from wreg
  1992  023E  0020               	movlb	0	; select bank0
  1993  023F  00D4               	movwf	si4355_start_rx@CHANNEL
  1994                           
  1995                           ;si4355.c: 263: radioCmd[0] = 0x32;
  1996  0240  3032               	movlw	50
  1997  0241  00D3               	movwf	??_si4355_start_rx
  1998  0242  0853               	movf	??_si4355_start_rx,w
  1999  0243  00B4               	movwf	_radioCmd
  2000                           
  2001                           ;si4355.c: 264: radioCmd[1] = CHANNEL;
  2002  0244  0854               	movf	si4355_start_rx@CHANNEL,w
  2003  0245  00D3               	movwf	??_si4355_start_rx
  2004  0246  0853               	movf	??_si4355_start_rx,w
  2005  0247  00B5               	movwf	_radioCmd+1
  2006                           
  2007                           ;si4355.c: 265: radioCmd[2] = CONDITION;
  2008  0248  084D               	movf	si4355_start_rx@CONDITION,w
  2009  0249  00D3               	movwf	??_si4355_start_rx
  2010  024A  0853               	movf	??_si4355_start_rx,w
  2011  024B  00B6               	movwf	_radioCmd+2
  2012                           
  2013                           ;si4355.c: 266: radioCmd[3] = ( U8 )( RX_LEN >> 8 );
  2014  024C  084F               	movf	si4355_start_rx@RX_LEN+1,w
  2015  024D  00D3               	movwf	??_si4355_start_rx
  2016  024E  0853               	movf	??_si4355_start_rx,w
  2017  024F  00B7               	movwf	_radioCmd+3
  2018                           
  2019                           ;si4355.c: 267: radioCmd[4] = ( U8 )( RX_LEN );
  2020  0250  084E               	movf	si4355_start_rx@RX_LEN,w
  2021  0251  00D3               	movwf	??_si4355_start_rx
  2022  0252  0853               	movf	??_si4355_start_rx,w
  2023  0253  00B8               	movwf	_radioCmd+4
  2024                           
  2025                           ;si4355.c: 268: radioCmd[5] = NEXT_STATE1;
  2026  0254  0850               	movf	si4355_start_rx@NEXT_STATE1,w
  2027  0255  00D3               	movwf	??_si4355_start_rx
  2028  0256  0853               	movf	??_si4355_start_rx,w
  2029  0257  00B9               	movwf	_radioCmd+5
  2030                           
  2031                           ;si4355.c: 269: radioCmd[6] = NEXT_STATE2;
  2032  0258  0851               	movf	si4355_start_rx@NEXT_STATE2,w
  2033  0259  00D3               	movwf	??_si4355_start_rx
  2034  025A  0853               	movf	??_si4355_start_rx,w
  2035  025B  00BA               	movwf	_radioCmd+6
  2036                           
  2037                           ;si4355.c: 270: radioCmd[7] = NEXT_STATE3;
  2038  025C  0852               	movf	si4355_start_rx@NEXT_STATE3,w
  2039  025D  00D3               	movwf	??_si4355_start_rx
  2040  025E  0853               	movf	??_si4355_start_rx,w
  2041  025F  00BB               	movwf	_radioCmd+7
  2042                           
  2043                           ;si4355.c: 272: radio_comm_SendCmd( 8, radioCmd );
  2044  0260  3034               	movlw	(low (_radioCmd| 0))& (0+255)
  2045  0261  00D3               	movwf	??_si4355_start_rx
  2046  0262  0853               	movf	??_si4355_start_rx,w
  2047  0263  00FB               	movwf	radio_comm_SendCmd@pData
  2048  0264  3008               	movlw	8
  2049  0265  3182  22A9         	fcall	_radio_comm_SendCmd
  2050  0267  0008               	return
  2051  0268                     __end_of_si4355_start_rx:	
  2052                           
  2053                           	psect	text5
  2054  02E1                     __ptext5:	
  2055 ;; *************** function _Radio_Init *****************
  2056 ;; Defined at:
  2057 ;;		line 23 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/radio.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;		None
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;		None
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      void 
  2064 ;; Registers used:
  2065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2071 ;;      Params:         0       0       0       0
  2072 ;;      Locals:         0       0       0       0
  2073 ;;      Temps:          0       0       0       0
  2074 ;;      Totals:         0       0       0       0
  2075 ;;Total ram usage:        0 bytes
  2076 ;; Hardware stack levels used:    1
  2077 ;; Hardware stack levels required when called:    9
  2078 ;; This function calls:
  2079 ;;		_Radio_PowerUp
  2080 ;;		_si4355_configuration_init
  2081 ;;		_si4355_get_int_status
  2082 ;; This function is called by:
  2083 ;;		_main
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           
  2088                           ;psect for function _Radio_Init
  2089  02E1                     _Radio_Init:	
  2090                           
  2091                           ;radio.c: 26: Radio_PowerUp();
  2092                           
  2093                           ;incstack = 0
  2094                           ; Regs used in _Radio_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2095  02E1  3183  238E  3182   	fcall	_Radio_PowerUp
  2096                           
  2097                           ;radio.c: 29: while( SUCCESS != si4355_configuration_init( pRadioConfiguration->Radio_Co
      +                          nfigurationArray ) )
  2098  02E4  0020               	movlb	0	; select bank0
  2099  02E5  085E               	movf	_pRadioConfiguration,w
  2100  02E6  0086               	movwf	6
  2101  02E7  0187               	clrf	7
  2102  02E8  3F40               	moviw [0]fsr1
  2103  02E9  00D8               	movwf	si4355_configuration_init@pSetPropCmd
  2104  02EA  3F41               	moviw [1]fsr1
  2105  02EB  00D9               	movwf	si4355_configuration_init@pSetPropCmd+1
  2106  02EC  3181  2145  3182   	fcall	_si4355_configuration_init
  2107  02EF  3A00               	xorlw	0
  2108  02F0  1D03               	skipz
  2109  02F1  2AE1               	goto	_Radio_Init
  2110                           
  2111                           ;radio.c: 33: }
  2112                           ;radio.c: 36: si4355_get_int_status(0u, 0u, 0u);
  2113                           
  2114                           ;radio.c: 30: {
  2115                           ;radio.c: 32: Radio_PowerUp();
  2116  02F2  0020               	movlb	0	; select bank0
  2117  02F3  01D2               	clrf	si4355_get_int_status@MODEM_CLR_PEND
  2118  02F4  01D3               	clrf	si4355_get_int_status@CHIP_CLR_PEND
  2119  02F5  3000               	movlw	0
  2120  02F6  3181  2197         	fcall	_si4355_get_int_status
  2121  02F8  0008               	return
  2122  02F9                     __end_of_Radio_Init:	
  2123                           
  2124                           	psect	text6
  2125  0145                     __ptext6:	
  2126 ;; *************** function _si4355_configuration_init *****************
  2127 ;; Defined at:
  2128 ;;		line 13 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/si4355.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;  pSetPropCmd     2   13[BANK0 ] PTR unsigned char 
  2131 ;;		 -> Radio_Configuration_Data_Array(274), 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;  numOfBytes      1   17[BANK0 ] unsigned char 
  2134 ;;  col             1   16[BANK0 ] unsigned char 
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      unsigned char 
  2137 ;; Registers used:
  2138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2144 ;;      Params:         0       2       0       0
  2145 ;;      Locals:         0       2       0       0
  2146 ;;      Temps:          0       1       0       0
  2147 ;;      Totals:         0       5       0       0
  2148 ;;Total ram usage:        5 bytes
  2149 ;; Hardware stack levels used:    1
  2150 ;; Hardware stack levels required when called:    8
  2151 ;; This function calls:
  2152 ;;		_radio_comm_SendCmdGetResp
  2153 ;;		_si4355_get_int_status
  2154 ;; This function is called by:
  2155 ;;		_Radio_Init
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           
  2160                           ;psect for function _si4355_configuration_init
  2161  0145                     _si4355_configuration_init:	
  2162                           
  2163                           ;si4355.c: 15: U8 col = 0;
  2164                           
  2165                           ;incstack = 0
  2166                           ; Regs used in _si4355_configuration_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2167  0145  0020               	movlb	0	; select bank0
  2168  0146  01DB               	clrf	si4355_configuration_init@col
  2169                           
  2170                           ;si4355.c: 16: U8 numOfBytes = 0;
  2171  0147  01DC               	clrf	si4355_configuration_init@numOfBytes
  2172  0148                     l1845:	
  2173                           ;si4355.c: 19: while ( *pSetPropCmd != 0x00 )
  2174                           
  2175  0148  0020               	movlb	0	; select bank0
  2176  0149  0858               	movf	si4355_configuration_init@pSetPropCmd,w
  2177  014A  0084               	movwf	4
  2178  014B  0859               	movf	si4355_configuration_init@pSetPropCmd+1,w
  2179  014C  0085               	movwf	5
  2180  014D  0012               	moviw fsr0++
  2181  014E  1903               	btfsc	3,2
  2182  014F  2995               	goto	l1847
  2183                           
  2184                           ;si4355.c: 20: {
  2185                           ;si4355.c: 26: numOfBytes = *pSetPropCmd++;
  2186  0150  0858               	movf	si4355_configuration_init@pSetPropCmd,w
  2187  0151  0084               	movwf	4
  2188  0152  0859               	movf	si4355_configuration_init@pSetPropCmd+1,w
  2189  0153  0085               	movwf	5
  2190  0154  0800               	movf	0,w	;code access
  2191  0155  00DA               	movwf	??_si4355_configuration_init
  2192  0156  085A               	movf	??_si4355_configuration_init,w
  2193  0157  00DC               	movwf	si4355_configuration_init@numOfBytes
  2194  0158  3001               	movlw	1
  2195  0159  07D8               	addwf	si4355_configuration_init@pSetPropCmd,f
  2196  015A  3000               	movlw	0
  2197  015B  3DD9               	addwfc	si4355_configuration_init@pSetPropCmd+1,f
  2198                           
  2199                           ;si4355.c: 28: if ( numOfBytes > 16u )
  2200  015C  3011               	movlw	17
  2201  015D  025C               	subwf	si4355_configuration_init@numOfBytes,w
  2202  015E  1C03               	skipc
  2203  015F  2962               	goto	l1827
  2204                           
  2205                           ;si4355.c: 29: {
  2206                           ;si4355.c: 31: return COMMAND_ERROR;
  2207  0160  3004               	movlw	4
  2208  0161  0008               	return
  2209  0162                     l1827:	
  2210                           
  2211                           ;si4355.c: 32: }
  2212                           ;si4355.c: 34: for ( col = 0u; col < numOfBytes; col++ )
  2213  0162  01DB               	clrf	si4355_configuration_init@col
  2214  0163                     l1835:	
  2215  0163  085C               	movf	si4355_configuration_init@numOfBytes,w
  2216  0164  025B               	subwf	si4355_configuration_init@col,w
  2217  0165  1803               	btfsc	3,0
  2218  0166  297C               	goto	l1837
  2219                           
  2220                           ;si4355.c: 35: {
  2221                           ;si4355.c: 36: radioCmd[col] = *pSetPropCmd;
  2222  0167  0858               	movf	si4355_configuration_init@pSetPropCmd,w
  2223  0168  0084               	movwf	4
  2224  0169  0859               	movf	si4355_configuration_init@pSetPropCmd+1,w
  2225  016A  0085               	movwf	5
  2226  016B  0800               	movf	0,w	;code access
  2227  016C  00DA               	movwf	??_si4355_configuration_init
  2228  016D  085B               	movf	si4355_configuration_init@col,w
  2229  016E  3E34               	addlw	(low (_radioCmd| 0))& (0+255)
  2230  016F  0086               	movwf	6
  2231  0170  0187               	clrf	7
  2232  0171  085A               	movf	??_si4355_configuration_init,w
  2233  0172  0081               	movwf	1
  2234                           
  2235                           ;si4355.c: 37: pSetPropCmd++;
  2236  0173  3001               	movlw	1
  2237  0174  07D8               	addwf	si4355_configuration_init@pSetPropCmd,f
  2238  0175  3000               	movlw	0
  2239  0176  3DD9               	addwfc	si4355_configuration_init@pSetPropCmd+1,f
  2240  0177  3001               	movlw	1
  2241  0178  00DA               	movwf	??_si4355_configuration_init
  2242  0179  085A               	movf	??_si4355_configuration_init,w
  2243  017A  07DB               	addwf	si4355_configuration_init@col,f
  2244  017B  2963               	goto	l1835
  2245  017C                     l1837:	
  2246                           
  2247                           ;si4355.c: 38: }
  2248                           ;si4355.c: 40: if ( !radio_comm_SendCmdGetResp( numOfBytes, radioCmd, 0, 0 ) )
  2249  017C  3034               	movlw	(low (_radioCmd| 0))& (0+255)
  2250  017D  00DA               	movwf	??_si4355_configuration_init
  2251  017E  085A               	movf	??_si4355_configuration_init,w
  2252  017F  00CD               	movwf	radio_comm_SendCmdGetResp@pCmdData
  2253  0180  01CE               	clrf	radio_comm_SendCmdGetResp@respByteCount
  2254  0181  01CF               	clrf	radio_comm_SendCmdGetResp@pRespData
  2255  0182  085C               	movf	si4355_configuration_init@numOfBytes,w
  2256  0183  3183  2324  3181   	fcall	_radio_comm_SendCmdGetResp
  2257  0186  3A00               	xorlw	0
  2258  0187  1D03               	skipz
  2259  0188  298B               	goto	l186
  2260                           
  2261                           ;si4355.c: 41: {
  2262                           ;si4355.c: 43: return CTS_TIMEOUT;
  2263  0189  3002               	movlw	2
  2264  018A  0008               	return
  2265  018B                     l186:	
  2266                           
  2267                           ;si4355.c: 44: }
  2268                           ;si4355.c: 46: if( !RA3 )
  2269  018B  0020               	movlb	0	; select bank0
  2270  018C  198C               	btfsc	12,3	;volatile
  2271  018D  2948               	goto	l1845
  2272                           
  2273                           ;si4355.c: 47: {
  2274                           ;si4355.c: 49: si4355_get_int_status( 0u, 0u, 0u );
  2275  018E  01D2               	clrf	si4355_get_int_status@MODEM_CLR_PEND
  2276  018F  01D3               	clrf	si4355_get_int_status@CHIP_CLR_PEND
  2277  0190  3000               	movlw	0
  2278  0191  3181  2197  3181   	fcall	_si4355_get_int_status
  2279  0194  2948               	goto	l1845
  2280  0195                     l1847:	
  2281                           
  2282                           ;si4355.c: 54: }
  2283                           ;si4355.c: 55: }
  2284                           ;si4355.c: 56: return SUCCESS;
  2285  0195  3000               	movlw	0
  2286  0196  0008               	return
  2287  0197                     __end_of_si4355_configuration_init:	
  2288                           
  2289                           	psect	text7
  2290  038E                     __ptext7:	
  2291 ;; *************** function _Radio_PowerUp *****************
  2292 ;; Defined at:
  2293 ;;		line 14 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/radio.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;		None
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;  wDelay          2    0[BANK0 ] unsigned int 
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  1    wreg      void 
  2300 ;; Registers used:
  2301 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2307 ;;      Params:         0       0       0       0
  2308 ;;      Locals:         0       2       0       0
  2309 ;;      Temps:          0       0       0       0
  2310 ;;      Totals:         0       2       0       0
  2311 ;;Total ram usage:        2 bytes
  2312 ;; Hardware stack levels used:    1
  2313 ;; Hardware stack levels required when called:    5
  2314 ;; This function calls:
  2315 ;;		_radio_comm_PollCTS
  2316 ;;		_si4355_reset
  2317 ;; This function is called by:
  2318 ;;		_Radio_Init
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           
  2323                           ;psect for function _Radio_PowerUp
  2324  038E                     _Radio_PowerUp:	
  2325                           
  2326                           ;radio.c: 16: U16 wDelay = 0u;
  2327                           
  2328                           ;incstack = 0
  2329                           ; Regs used in _Radio_PowerUp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2330  038E  0020               	movlb	0	; select bank0
  2331  038F  01CB               	clrf	Radio_PowerUp@wDelay
  2332  0390  01CC               	clrf	Radio_PowerUp@wDelay+1
  2333                           
  2334                           ;radio.c: 18: si4355_reset();
  2335  0391  3183  23B0  3183   	fcall	_si4355_reset
  2336                           
  2337                           ;radio.c: 20: radio_comm_PollCTS();
  2338  0394  3183  23AB         	fcall	_radio_comm_PollCTS
  2339  0396  0008               	return
  2340  0397                     __end_of_Radio_PowerUp:	
  2341                           
  2342                           	psect	text8
  2343  03B0                     __ptext8:	
  2344 ;; *************** function _si4355_reset *****************
  2345 ;; Defined at:
  2346 ;;		line 59 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/si4355.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;		None
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;		None
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  1    wreg      void 
  2353 ;; Registers used:
  2354 ;;		None
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2360 ;;      Params:         0       0       0       0
  2361 ;;      Locals:         0       0       0       0
  2362 ;;      Temps:          0       0       0       0
  2363 ;;      Totals:         0       0       0       0
  2364 ;;Total ram usage:        0 bytes
  2365 ;; Hardware stack levels used:    1
  2366 ;; Hardware stack levels required when called:    1
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_Radio_PowerUp
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           
  2375                           ;psect for function _si4355_reset
  2376  03B0                     _si4355_reset:	
  2377                           
  2378                           ;incstack = 0
  2379                           ; Regs used in _si4355_reset: []
  2380  03B0  0008               	return
  2381  03B1                     __end_of_si4355_reset:	
  2382                           
  2383                           	psect	text9
  2384  02F9                     __ptext9:	
  2385 ;; *************** function _Radio_CheckReceived *****************
  2386 ;; Defined at:
  2387 ;;		line 39 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/radio.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;		None
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;		None
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  1    wreg      unsigned char 
  2394 ;; Registers used:
  2395 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2401 ;;      Params:         0       0       0       0
  2402 ;;      Locals:         0       0       0       0
  2403 ;;      Temps:          0       1       0       0
  2404 ;;      Totals:         0       1       0       0
  2405 ;;Total ram usage:        1 bytes
  2406 ;; Hardware stack levels used:    1
  2407 ;; Hardware stack levels required when called:    8
  2408 ;; This function calls:
  2409 ;;		_si4355_get_int_status
  2410 ;;		_si4355_read_rx_fifo
  2411 ;; This function is called by:
  2412 ;;		_main
  2413 ;; This function uses a non-reentrant model
  2414 ;;
  2415                           
  2416                           
  2417                           ;psect for function _Radio_CheckReceived
  2418  02F9                     _Radio_CheckReceived:	
  2419                           
  2420                           ;radio.c: 41: if( !RA3 )
  2421                           
  2422                           ;incstack = 0
  2423                           ; Regs used in _Radio_CheckReceived: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2424  02F9  0020               	movlb	0	; select bank0
  2425  02FA  198C               	btfsc	12,3	;volatile
  2426  02FB  2B0E               	goto	l1897
  2427                           
  2428                           ;radio.c: 42: {
  2429                           ;radio.c: 44: si4355_get_int_status(0u, 0u, 0u);
  2430  02FC  01D2               	clrf	si4355_get_int_status@MODEM_CLR_PEND
  2431  02FD  01D3               	clrf	si4355_get_int_status@CHIP_CLR_PEND
  2432  02FE  3000               	movlw	0
  2433  02FF  3181  2197  3182   	fcall	_si4355_get_int_status
  2434                           
  2435                           ;radio.c: 47: if (Si4355Cmd.GET_INT_STATUS.PH_PEND & 0x10)
  2436  0302  0020               	movlb	0	; select bank0
  2437  0303  1E22               	btfss	_Si4355Cmd+2,4
  2438  0304  2B0E               	goto	l1897
  2439                           
  2440                           ;radio.c: 48: {
  2441                           ;radio.c: 50: si4355_read_rx_fifo( sizeof( tRadioPacket ), ( U8 * ) &RadioPacket );
  2442  0305  3044               	movlw	(low (_RadioPacket| 0))& (0+255)
  2443  0306  00D8               	movwf	??_Radio_CheckReceived
  2444  0307  0858               	movf	??_Radio_CheckReceived,w
  2445  0308  00CF               	movwf	si4355_read_rx_fifo@pRxData
  2446  0309  3007               	movlw	7
  2447  030A  3183  235B         	fcall	_si4355_read_rx_fifo
  2448                           
  2449                           ;radio.c: 51: return 1;
  2450  030C  3001               	movlw	1
  2451  030D  0008               	return
  2452  030E                     l1897:	
  2453                           
  2454                           ;radio.c: 52: }
  2455                           ;radio.c: 53: }
  2456                           ;radio.c: 54: return 0;
  2457  030E  3000               	movlw	0
  2458  030F  0008               	return
  2459  0310                     __end_of_Radio_CheckReceived:	
  2460                           
  2461                           	psect	text10
  2462  035B                     __ptext10:	
  2463 ;; *************** function _si4355_read_rx_fifo *****************
  2464 ;; Defined at:
  2465 ;;		line 360 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/si4355.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;  numBytes        1    wreg     unsigned char 
  2468 ;;  pRxData         1    4[BANK0 ] PTR unsigned char 
  2469 ;;		 -> RadioPacket(7), 
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;  numBytes        1    7[BANK0 ] unsigned char 
  2472 ;; Return value:  Size  Location     Type
  2473 ;;                  1    wreg      void 
  2474 ;; Registers used:
  2475 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2481 ;;      Params:         0       1       0       0
  2482 ;;      Locals:         0       1       0       0
  2483 ;;      Temps:          0       2       0       0
  2484 ;;      Totals:         0       4       0       0
  2485 ;;Total ram usage:        4 bytes
  2486 ;; Hardware stack levels used:    1
  2487 ;; Hardware stack levels required when called:    6
  2488 ;; This function calls:
  2489 ;;		_radio_comm_ReadData
  2490 ;; This function is called by:
  2491 ;;		_Radio_CheckReceived
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           
  2496                           ;psect for function _si4355_read_rx_fifo
  2497  035B                     _si4355_read_rx_fifo:	
  2498                           
  2499                           ;incstack = 0
  2500                           ; Regs used in _si4355_read_rx_fifo: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2501                           ;si4355_read_rx_fifo@numBytes stored from wreg
  2502  035B  0020               	movlb	0	; select bank0
  2503  035C  00D2               	movwf	si4355_read_rx_fifo@numBytes
  2504                           
  2505                           ;si4355.c: 362: radio_comm_ReadData( 0x77, 0, numBytes, pRxData );
  2506  035D  01CB               	clrf	radio_comm_ReadData@pollCts
  2507  035E  0852               	movf	si4355_read_rx_fifo@numBytes,w
  2508  035F  00D0               	movwf	??_si4355_read_rx_fifo
  2509  0360  0850               	movf	??_si4355_read_rx_fifo,w
  2510  0361  00CC               	movwf	radio_comm_ReadData@byteCount
  2511  0362  084F               	movf	si4355_read_rx_fifo@pRxData,w
  2512  0363  00D1               	movwf	??_si4355_read_rx_fifo+1
  2513  0364  0851               	movf	??_si4355_read_rx_fifo+1,w
  2514  0365  00CD               	movwf	radio_comm_ReadData@pData
  2515  0366  3077               	movlw	119
  2516  0367  3182  228B         	fcall	_radio_comm_ReadData
  2517  0369  0008               	return
  2518  036A                     __end_of_si4355_read_rx_fifo:	
  2519                           
  2520                           	psect	text11
  2521  028B                     __ptext11:	
  2522 ;; *************** function _radio_comm_ReadData *****************
  2523 ;; Defined at:
  2524 ;;		line 67 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/comm.c"
  2525 ;; Parameters:    Size  Location     Type
  2526 ;;  cmd             1    wreg     unsigned char 
  2527 ;;  pollCts         1    0[BANK0 ] unsigned char 
  2528 ;;  byteCount       1    1[BANK0 ] unsigned char 
  2529 ;;  pData           1    2[BANK0 ] PTR unsigned char 
  2530 ;;		 -> radioCmd(16), RadioPacket(7), 
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;  cmd             1    3[BANK0 ] unsigned char 
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  1    wreg      void 
  2535 ;; Registers used:
  2536 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2542 ;;      Params:         0       3       0       0
  2543 ;;      Locals:         0       1       0       0
  2544 ;;      Temps:          1       0       0       0
  2545 ;;      Totals:         1       4       0       0
  2546 ;;Total ram usage:        5 bytes
  2547 ;; Hardware stack levels used:    1
  2548 ;; Hardware stack levels required when called:    5
  2549 ;; This function calls:
  2550 ;;		_SPI_ReadBytes
  2551 ;;		_SPI_WriteByte
  2552 ;;		_radio_comm_PollCTS
  2553 ;; This function is called by:
  2554 ;;		_si4355_read_rx_fifo
  2555 ;;		_si4355_frr_a_read
  2556 ;;		_si4355_frr_b_read
  2557 ;;		_si4355_frr_c_read
  2558 ;;		_si4355_frr_d_read
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           
  2563                           ;psect for function _radio_comm_ReadData
  2564  028B                     _radio_comm_ReadData:	
  2565                           
  2566                           ;incstack = 0
  2567                           ; Regs used in _radio_comm_ReadData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2568                           ;radio_comm_ReadData@cmd stored from wreg
  2569  028B  0020               	movlb	0	; select bank0
  2570  028C  00CE               	movwf	radio_comm_ReadData@cmd
  2571                           
  2572                           ;comm.c: 69: if( pollCts )
  2573  028D  084B               	movf	radio_comm_ReadData@pollCts,w
  2574  028E  1D03               	btfss	3,2
  2575  028F  2A94               	goto	l1799
  2576  0290  2A97               	goto	l293
  2577  0291                     l1797:	
  2578                           ;comm.c: 70: {
  2579                           ;comm.c: 71: while( !ctsWentHigh )
  2580                           
  2581                           
  2582                           ;comm.c: 72: {
  2583                           ;comm.c: 73: radio_comm_PollCTS();
  2584  0291  3183  23AB  3182   	fcall	_radio_comm_PollCTS
  2585  0294                     l1799:	
  2586  0294  087C               	movf	_ctsWentHigh,w
  2587  0295  1903               	btfsc	3,2
  2588  0296  2A91               	goto	l1797
  2589  0297                     l293:	
  2590                           
  2591                           ;comm.c: 74: }
  2592                           ;comm.c: 75: }
  2593                           ;comm.c: 76: RA5 = 0;
  2594  0297  0020               	movlb	0	; select bank0
  2595  0298  128C               	bcf	12,5	;volatile
  2596                           
  2597                           ;comm.c: 77: SPI_WriteByte( cmd );
  2598  0299  084E               	movf	radio_comm_ReadData@cmd,w
  2599  029A  3183  236A  3182   	fcall	_SPI_WriteByte
  2600                           
  2601                           ;comm.c: 78: SPI_ReadBytes( byteCount, pData );
  2602  029D  0020               	movlb	0	; select bank0
  2603  029E  084D               	movf	radio_comm_ReadData@pData,w
  2604  029F  00FB               	movwf	??_radio_comm_ReadData
  2605  02A0  087B               	movf	??_radio_comm_ReadData,w
  2606  02A1  00F3               	movwf	SPI_ReadBytes@data
  2607  02A2  084C               	movf	radio_comm_ReadData@byteCount,w
  2608  02A3  3183  2310         	fcall	_SPI_ReadBytes
  2609                           
  2610                           ;comm.c: 79: RA5 = 1;
  2611  02A5  0020               	movlb	0	; select bank0
  2612  02A6  168C               	bsf	12,5	;volatile
  2613                           
  2614                           ;comm.c: 80: ctsWentHigh = 0;
  2615  02A7  01FC               	clrf	_ctsWentHigh
  2616  02A8  0008               	return
  2617  02A9                     __end_of_radio_comm_ReadData:	
  2618                           
  2619                           	psect	text12
  2620  0197                     __ptext12:	
  2621 ;; *************** function _si4355_get_int_status *****************
  2622 ;; Defined at:
  2623 ;;		line 239 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/si4355.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;  PH_CLR_PEND     1    wreg     unsigned char 
  2626 ;;  MODEM_CLR_PE    1    7[BANK0 ] unsigned char 
  2627 ;;  CHIP_CLR_PEN    1    8[BANK0 ] unsigned char 
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;  PH_CLR_PEND     1   12[BANK0 ] unsigned char 
  2630 ;; Return value:  Size  Location     Type
  2631 ;;                  1    wreg      void 
  2632 ;; Registers used:
  2633 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2634 ;; Tracked objects:
  2635 ;;		On entry : 0/0
  2636 ;;		On exit  : 0/0
  2637 ;;		Unchanged: 0/0
  2638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2639 ;;      Params:         0       2       0       0
  2640 ;;      Locals:         0       1       0       0
  2641 ;;      Temps:          0       3       0       0
  2642 ;;      Totals:         0       6       0       0
  2643 ;;Total ram usage:        6 bytes
  2644 ;; Hardware stack levels used:    1
  2645 ;; Hardware stack levels required when called:    7
  2646 ;; This function calls:
  2647 ;;		_radio_comm_SendCmdGetResp
  2648 ;; This function is called by:
  2649 ;;		_Radio_Init
  2650 ;;		_Radio_CheckReceived
  2651 ;;		_Radio_StartRX
  2652 ;;		_si4355_configuration_init
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656                           
  2657                           ;psect for function _si4355_get_int_status
  2658  0197                     _si4355_get_int_status:	
  2659                           
  2660                           ;incstack = 0
  2661                           ; Regs used in _si4355_get_int_status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  2662                           ;si4355_get_int_status@PH_CLR_PEND stored from wreg
  2663  0197  0020               	movlb	0	; select bank0
  2664  0198  00D7               	movwf	si4355_get_int_status@PH_CLR_PEND
  2665                           
  2666                           ;si4355.c: 241: radioCmd[0] = 0x20;
  2667  0199  3020               	movlw	32
  2668  019A  00D4               	movwf	??_si4355_get_int_status
  2669  019B  0854               	movf	??_si4355_get_int_status,w
  2670  019C  00B4               	movwf	_radioCmd
  2671                           
  2672                           ;si4355.c: 242: radioCmd[1] = PH_CLR_PEND;
  2673  019D  0857               	movf	si4355_get_int_status@PH_CLR_PEND,w
  2674  019E  00D4               	movwf	??_si4355_get_int_status
  2675  019F  0854               	movf	??_si4355_get_int_status,w
  2676  01A0  00B5               	movwf	_radioCmd+1
  2677                           
  2678                           ;si4355.c: 243: radioCmd[2] = MODEM_CLR_PEND;
  2679  01A1  0852               	movf	si4355_get_int_status@MODEM_CLR_PEND,w
  2680  01A2  00D4               	movwf	??_si4355_get_int_status
  2681  01A3  0854               	movf	??_si4355_get_int_status,w
  2682  01A4  00B6               	movwf	_radioCmd+2
  2683                           
  2684                           ;si4355.c: 244: radioCmd[3] = CHIP_CLR_PEND;
  2685  01A5  0853               	movf	si4355_get_int_status@CHIP_CLR_PEND,w
  2686  01A6  00D4               	movwf	??_si4355_get_int_status
  2687  01A7  0854               	movf	??_si4355_get_int_status,w
  2688  01A8  00B7               	movwf	_radioCmd+3
  2689                           
  2690                           ;si4355.c: 246: radio_comm_SendCmdGetResp( 4,
  2691                           ;si4355.c: 247: radioCmd,
  2692                           ;si4355.c: 248: 8,
  2693                           ;si4355.c: 249: radioCmd );
  2694  01A9  3034               	movlw	(low (_radioCmd| 0))& (0+255)
  2695  01AA  00D4               	movwf	??_si4355_get_int_status
  2696  01AB  0854               	movf	??_si4355_get_int_status,w
  2697  01AC  00CD               	movwf	radio_comm_SendCmdGetResp@pCmdData
  2698  01AD  3008               	movlw	8
  2699  01AE  00D5               	movwf	??_si4355_get_int_status+1
  2700  01AF  0855               	movf	??_si4355_get_int_status+1,w
  2701  01B0  00CE               	movwf	radio_comm_SendCmdGetResp@respByteCount
  2702  01B1  3034               	movlw	(low (_radioCmd| 0))& (0+255)
  2703  01B2  00D6               	movwf	??_si4355_get_int_status+2
  2704  01B3  0856               	movf	??_si4355_get_int_status+2,w
  2705  01B4  00CF               	movwf	radio_comm_SendCmdGetResp@pRespData
  2706  01B5  3004               	movlw	4
  2707  01B6  3183  2324         	fcall	_radio_comm_SendCmdGetResp
  2708                           
  2709                           ;si4355.c: 251: Si4355Cmd.GET_INT_STATUS.INT_PEND = radioCmd[0];
  2710  01B8  0020               	movlb	0	; select bank0
  2711  01B9  0834               	movf	_radioCmd,w
  2712  01BA  00D4               	movwf	??_si4355_get_int_status
  2713  01BB  0854               	movf	??_si4355_get_int_status,w
  2714  01BC  00A0               	movwf	_Si4355Cmd
  2715                           
  2716                           ;si4355.c: 252: Si4355Cmd.GET_INT_STATUS.INT_STATUS = radioCmd[1];
  2717  01BD  0835               	movf	_radioCmd+1,w
  2718  01BE  00D4               	movwf	??_si4355_get_int_status
  2719  01BF  0854               	movf	??_si4355_get_int_status,w
  2720  01C0  00A1               	movwf	_Si4355Cmd+1
  2721                           
  2722                           ;si4355.c: 253: Si4355Cmd.GET_INT_STATUS.PH_PEND = radioCmd[2];
  2723  01C1  0836               	movf	_radioCmd+2,w
  2724  01C2  00D4               	movwf	??_si4355_get_int_status
  2725  01C3  0854               	movf	??_si4355_get_int_status,w
  2726  01C4  00A2               	movwf	_Si4355Cmd+2
  2727                           
  2728                           ;si4355.c: 254: Si4355Cmd.GET_INT_STATUS.PH_STATUS = radioCmd[3];
  2729  01C5  0837               	movf	_radioCmd+3,w
  2730  01C6  00D4               	movwf	??_si4355_get_int_status
  2731  01C7  0854               	movf	??_si4355_get_int_status,w
  2732  01C8  00A3               	movwf	_Si4355Cmd+3
  2733                           
  2734                           ;si4355.c: 255: Si4355Cmd.GET_INT_STATUS.MODEM_PEND = radioCmd[4];
  2735  01C9  0838               	movf	_radioCmd+4,w
  2736  01CA  00D4               	movwf	??_si4355_get_int_status
  2737  01CB  0854               	movf	??_si4355_get_int_status,w
  2738  01CC  00A4               	movwf	_Si4355Cmd+4
  2739                           
  2740                           ;si4355.c: 256: Si4355Cmd.GET_INT_STATUS.MODEM_STATUS = radioCmd[5];
  2741  01CD  0839               	movf	_radioCmd+5,w
  2742  01CE  00D4               	movwf	??_si4355_get_int_status
  2743  01CF  0854               	movf	??_si4355_get_int_status,w
  2744  01D0  00A5               	movwf	_Si4355Cmd+5
  2745                           
  2746                           ;si4355.c: 257: Si4355Cmd.GET_INT_STATUS.CHIP_PEND = radioCmd[6];
  2747  01D1  083A               	movf	_radioCmd+6,w
  2748  01D2  00D4               	movwf	??_si4355_get_int_status
  2749  01D3  0854               	movf	??_si4355_get_int_status,w
  2750  01D4  00A6               	movwf	_Si4355Cmd+6
  2751                           
  2752                           ;si4355.c: 258: Si4355Cmd.GET_INT_STATUS.CHIP_STATUS = radioCmd[7];
  2753  01D5  083B               	movf	_radioCmd+7,w
  2754  01D6  00D4               	movwf	??_si4355_get_int_status
  2755  01D7  0854               	movf	??_si4355_get_int_status,w
  2756  01D8  00A7               	movwf	_Si4355Cmd+7
  2757  01D9  0008               	return
  2758  01DA                     __end_of_si4355_get_int_status:	
  2759                           
  2760                           	psect	text13
  2761  0324                     __ptext13:	
  2762 ;; *************** function _radio_comm_SendCmdGetResp *****************
  2763 ;; Defined at:
  2764 ;;		line 61 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/comm.c"
  2765 ;; Parameters:    Size  Location     Type
  2766 ;;  cmdByteCount    1    wreg     unsigned char 
  2767 ;;  pCmdData        1    2[BANK0 ] PTR unsigned char 
  2768 ;;		 -> radioCmd(16), 
  2769 ;;  respByteCoun    1    3[BANK0 ] unsigned char 
  2770 ;;  pRespData       1    4[BANK0 ] PTR unsigned char 
  2771 ;;		 -> NULL(0), radioCmd(16), 
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;  cmdByteCount    1    6[BANK0 ] unsigned char 
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      unsigned char 
  2776 ;; Registers used:
  2777 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2783 ;;      Params:         0       3       0       0
  2784 ;;      Locals:         0       1       0       0
  2785 ;;      Temps:          0       1       0       0
  2786 ;;      Totals:         0       5       0       0
  2787 ;;Total ram usage:        5 bytes
  2788 ;; Hardware stack levels used:    1
  2789 ;; Hardware stack levels required when called:    6
  2790 ;; This function calls:
  2791 ;;		_radio_comm_GetResp
  2792 ;;		_radio_comm_SendCmd
  2793 ;; This function is called by:
  2794 ;;		_si4355_configuration_init
  2795 ;;		_si4355_fifo_info
  2796 ;;		_si4355_get_int_status
  2797 ;;		_si4355_part_info
  2798 ;;		_si4355_func_info
  2799 ;;		_si4355_get_property
  2800 ;;		_si4355_gpio_pin_cfg
  2801 ;;		_si4355_request_device_state
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804                           
  2805                           
  2806                           ;psect for function _radio_comm_SendCmdGetResp
  2807  0324                     _radio_comm_SendCmdGetResp:	
  2808                           
  2809                           ;incstack = 0
  2810                           ; Regs used in _radio_comm_SendCmdGetResp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  2811                           ;radio_comm_SendCmdGetResp@cmdByteCount stored from wreg
  2812  0324  0020               	movlb	0	; select bank0
  2813  0325  00D1               	movwf	radio_comm_SendCmdGetResp@cmdByteCount
  2814                           
  2815                           ;comm.c: 63: radio_comm_SendCmd( cmdByteCount, pCmdData );
  2816  0326  084D               	movf	radio_comm_SendCmdGetResp@pCmdData,w
  2817  0327  00D0               	movwf	??_radio_comm_SendCmdGetResp
  2818  0328  0850               	movf	??_radio_comm_SendCmdGetResp,w
  2819  0329  00FB               	movwf	radio_comm_SendCmd@pData
  2820  032A  0851               	movf	radio_comm_SendCmdGetResp@cmdByteCount,w
  2821  032B  3182  22A9  3183   	fcall	_radio_comm_SendCmd
  2822                           
  2823                           ;comm.c: 64: return radio_comm_GetResp( respByteCount, pRespData );
  2824  032E  0020               	movlb	0	; select bank0
  2825  032F  084F               	movf	radio_comm_SendCmdGetResp@pRespData,w
  2826  0330  00D0               	movwf	??_radio_comm_SendCmdGetResp
  2827  0331  0850               	movf	??_radio_comm_SendCmdGetResp,w
  2828  0332  00F6               	movwf	radio_comm_GetResp@pData
  2829  0333  084E               	movf	radio_comm_SendCmdGetResp@respByteCount,w
  2830  0334  3181  21DA         	fcall	_radio_comm_GetResp
  2831  0336  0008               	return
  2832  0337                     __end_of_radio_comm_SendCmdGetResp:	
  2833                           
  2834                           	psect	text14
  2835  02A9                     __ptext14:	
  2836 ;; *************** function _radio_comm_SendCmd *****************
  2837 ;; Defined at:
  2838 ;;		line 44 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/comm.c"
  2839 ;; Parameters:    Size  Location     Type
  2840 ;;  byteCount       1    wreg     unsigned char 
  2841 ;;  pData           1   11[COMMON] PTR unsigned char 
  2842 ;;		 -> radioCmd(16), 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;  byteCount       1    1[BANK0 ] unsigned char 
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  1    wreg      void 
  2847 ;; Registers used:
  2848 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2854 ;;      Params:         1       0       0       0
  2855 ;;      Locals:         0       1       0       0
  2856 ;;      Temps:          0       1       0       0
  2857 ;;      Totals:         1       2       0       0
  2858 ;;Total ram usage:        3 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; Hardware stack levels required when called:    5
  2861 ;; This function calls:
  2862 ;;		_SPI_WriteBytes
  2863 ;;		_radio_comm_PollCTS
  2864 ;; This function is called by:
  2865 ;;		_si4355_start_rx
  2866 ;;		_radio_comm_SendCmdGetResp
  2867 ;;		_si4355_nop
  2868 ;;		_si4355_power_up
  2869 ;;		_si4355_set_property
  2870 ;;		_si4355_change_state
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           
  2875                           ;psect for function _radio_comm_SendCmd
  2876  02A9                     _radio_comm_SendCmd:	
  2877                           
  2878                           ;incstack = 0
  2879                           ; Regs used in _radio_comm_SendCmd: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2880                           ;radio_comm_SendCmd@byteCount stored from wreg
  2881  02A9  0020               	movlb	0	; select bank0
  2882  02AA  00CC               	movwf	radio_comm_SendCmd@byteCount
  2883                           
  2884                           ;comm.c: 48: if ( byteCount == 1 )
  2885  02AB  034C               	decf	radio_comm_SendCmd@byteCount,w
  2886  02AC  1D03               	btfss	3,2
  2887  02AD  2AB2               	goto	l1761
  2888                           
  2889                           ;comm.c: 49: byteCount++;
  2890  02AE  3001               	movlw	1
  2891  02AF  00CB               	movwf	??_radio_comm_SendCmd
  2892  02B0  084B               	movf	??_radio_comm_SendCmd,w
  2893  02B1  07CC               	addwf	radio_comm_SendCmd@byteCount,f
  2894  02B2                     l1761:	
  2895                           ;comm.c: 51: while( !ctsWentHigh )
  2896                           
  2897  02B2  087C               	movf	_ctsWentHigh,w
  2898  02B3  1D03               	btfss	3,2
  2899  02B4  2AB9               	goto	l286
  2900                           
  2901                           ;comm.c: 52: {
  2902                           ;comm.c: 53: radio_comm_PollCTS();
  2903  02B5  3183  23AB  3182   	fcall	_radio_comm_PollCTS
  2904  02B8  2AB2               	goto	l1761
  2905  02B9                     l286:	
  2906                           
  2907                           ;comm.c: 54: }
  2908                           ;comm.c: 55: RA5 = 0;
  2909  02B9  0020               	movlb	0	; select bank0
  2910  02BA  128C               	bcf	12,5	;volatile
  2911                           
  2912                           ;comm.c: 56: SPI_WriteBytes( byteCount, pData );
  2913  02BB  087B               	movf	radio_comm_SendCmd@pData,w
  2914  02BC  00CB               	movwf	??_radio_comm_SendCmd
  2915  02BD  084B               	movf	??_radio_comm_SendCmd,w
  2916  02BE  00F3               	movwf	SPI_WriteBytes@data
  2917  02BF  084C               	movf	radio_comm_SendCmd@byteCount,w
  2918  02C0  3183  2349         	fcall	_SPI_WriteBytes
  2919                           
  2920                           ;comm.c: 57: RA5 = 1;
  2921  02C2  0020               	movlb	0	; select bank0
  2922  02C3  168C               	bsf	12,5	;volatile
  2923                           
  2924                           ;comm.c: 58: ctsWentHigh = 0;
  2925  02C4  01FC               	clrf	_ctsWentHigh
  2926  02C5  0008               	return
  2927  02C6                     __end_of_radio_comm_SendCmd:	
  2928                           
  2929                           	psect	text15
  2930  03AB                     __ptext15:	
  2931 ;; *************** function _radio_comm_PollCTS *****************
  2932 ;; Defined at:
  2933 ;;		line 39 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/comm.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;		None
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;		None
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  1    wreg      unsigned char 
  2940 ;; Registers used:
  2941 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2947 ;;      Params:         0       0       0       0
  2948 ;;      Locals:         0       0       0       0
  2949 ;;      Temps:          0       0       0       0
  2950 ;;      Totals:         0       0       0       0
  2951 ;;Total ram usage:        0 bytes
  2952 ;; Hardware stack levels used:    1
  2953 ;; Hardware stack levels required when called:    4
  2954 ;; This function calls:
  2955 ;;		_radio_comm_GetResp
  2956 ;; This function is called by:
  2957 ;;		_Radio_PowerUp
  2958 ;;		_radio_comm_SendCmd
  2959 ;;		_radio_comm_ReadData
  2960 ;;		_radio_comm_WriteData
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           
  2965                           ;psect for function _radio_comm_PollCTS
  2966  03AB                     _radio_comm_PollCTS:	
  2967                           
  2968                           ;comm.c: 41: return radio_comm_GetResp( 0, 0 );
  2969                           ;	Return value of _radio_comm_PollCTS is never used
  2970                           
  2971                           ;incstack = 0
  2972                           ; Regs used in _radio_comm_PollCTS: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2973  03AB  01F6               	clrf	radio_comm_GetResp@pData
  2974  03AC  3000               	movlw	0
  2975  03AD  3181  21DA         	fcall	_radio_comm_GetResp
  2976  03AF  0008               	return
  2977  03B0                     __end_of_radio_comm_PollCTS:	
  2978                           
  2979                           	psect	text16
  2980  01DA                     __ptext16:	
  2981 ;; *************** function _radio_comm_GetResp *****************
  2982 ;; Defined at:
  2983 ;;		line 8 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/comm.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  byteCount       1    wreg     unsigned char 
  2986 ;;  pData           1    6[COMMON] PTR unsigned char 
  2987 ;;		 -> NULL(0), radioCmd(16), 
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;  byteCount       1    8[COMMON] unsigned char 
  2990 ;;  errCnt          2    9[COMMON] unsigned int 
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  1    wreg      unsigned char 
  2993 ;; Registers used:
  2994 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3000 ;;      Params:         1       0       0       0
  3001 ;;      Locals:         3       0       0       0
  3002 ;;      Temps:          1       0       0       0
  3003 ;;      Totals:         5       0       0       0
  3004 ;;Total ram usage:        5 bytes
  3005 ;; Hardware stack levels used:    1
  3006 ;; Hardware stack levels required when called:    3
  3007 ;; This function calls:
  3008 ;;		_SPI_ReadByte
  3009 ;;		_SPI_ReadBytes
  3010 ;;		_SPI_WriteByte
  3011 ;; This function is called by:
  3012 ;;		_radio_comm_PollCTS
  3013 ;;		_radio_comm_SendCmdGetResp
  3014 ;;		_si4355_ezconfig_check
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           
  3019                           ;psect for function _radio_comm_GetResp
  3020  01DA                     _radio_comm_GetResp:	
  3021                           
  3022                           ;incstack = 0
  3023                           ; Regs used in _radio_comm_GetResp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3024                           ;radio_comm_GetResp@byteCount stored from wreg
  3025  01DA  00F8               	movwf	radio_comm_GetResp@byteCount
  3026                           
  3027                           ;comm.c: 10: U16 errCnt = 5000;
  3028  01DB  3088               	movlw	136
  3029  01DC  00F9               	movwf	radio_comm_GetResp@errCnt
  3030  01DD  3013               	movlw	19
  3031  01DE  00FA               	movwf	radio_comm_GetResp@errCnt+1
  3032  01DF                     l1731:	
  3033                           ;comm.c: 11: while( errCnt != 0 )
  3034                           
  3035  01DF  0879               	movf	radio_comm_GetResp@errCnt,w
  3036  01E0  047A               	iorwf	radio_comm_GetResp@errCnt+1,w
  3037  01E1  1903               	btfsc	3,2
  3038  01E2  2A0B               	goto	l1733
  3039                           
  3040                           ;comm.c: 12: {
  3041                           ;comm.c: 13: RA5 = 0;
  3042  01E3  0020               	movlb	0	; select bank0
  3043  01E4  128C               	bcf	12,5	;volatile
  3044                           
  3045                           ;comm.c: 14: SPI_WriteByte( 0x44 );
  3046  01E5  3044               	movlw	68
  3047  01E6  3183  236A  3181   	fcall	_SPI_WriteByte
  3048                           
  3049                           ;comm.c: 15: ctsWentHigh = SPI_ReadByte();
  3050  01E9  3183  2383  3181   	fcall	_SPI_ReadByte
  3051  01EC  00F7               	movwf	??_radio_comm_GetResp
  3052  01ED  0877               	movf	??_radio_comm_GetResp,w
  3053  01EE  00FC               	movwf	_ctsWentHigh
  3054                           
  3055                           ;comm.c: 16: SPI_WriteByte( ctsWentHigh );
  3056  01EF  087C               	movf	_ctsWentHigh,w
  3057  01F0  3183  236A  3181   	fcall	_SPI_WriteByte
  3058                           
  3059                           ;comm.c: 17: if( ctsWentHigh )
  3060  01F3  087C               	movf	_ctsWentHigh,w
  3061  01F4  1903               	btfsc	3,2
  3062  01F5  2A04               	goto	l270
  3063                           
  3064                           ;comm.c: 18: {
  3065                           ;comm.c: 19: if( byteCount )
  3066  01F6  0878               	movf	radio_comm_GetResp@byteCount,w
  3067  01F7  1903               	btfsc	3,2
  3068  01F8  2A01               	goto	l1727
  3069                           
  3070                           ;comm.c: 20: {
  3071                           ;comm.c: 21: SPI_ReadBytes( byteCount, pData );
  3072  01F9  0876               	movf	radio_comm_GetResp@pData,w
  3073  01FA  00F7               	movwf	??_radio_comm_GetResp
  3074  01FB  0877               	movf	??_radio_comm_GetResp,w
  3075  01FC  00F3               	movwf	SPI_ReadBytes@data
  3076  01FD  0878               	movf	radio_comm_GetResp@byteCount,w
  3077  01FE  3183  2310  3181   	fcall	_SPI_ReadBytes
  3078  0201                     l1727:	
  3079                           
  3080                           ;comm.c: 22: }
  3081                           ;comm.c: 23: RA5 = 1;
  3082  0201  0020               	movlb	0	; select bank0
  3083  0202  168C               	bsf	12,5	;volatile
  3084  0203                     l272:	
  3085                           ;comm.c: 24: while(1);
  3086                           
  3087  0203  2A03               	goto	l272
  3088  0204                     l270:	
  3089                           ;comm.c: 25: break;
  3090                           
  3091                           
  3092                           ;comm.c: 26: }
  3093                           ;comm.c: 27: RA5 = 1;
  3094  0204  0020               	movlb	0	; select bank0
  3095  0205  168C               	bsf	12,5	;volatile
  3096                           
  3097                           ;comm.c: 28: errCnt--;
  3098  0206  3001               	movlw	1
  3099  0207  02F9               	subwf	radio_comm_GetResp@errCnt,f
  3100  0208  3000               	movlw	0
  3101  0209  3BFA               	subwfb	radio_comm_GetResp@errCnt+1,f
  3102  020A  29DF               	goto	l1731
  3103  020B                     l1733:	
  3104                           
  3105                           ;comm.c: 29: }
  3106                           ;comm.c: 31: if( errCnt == 0 )
  3107  020B  0879               	movf	radio_comm_GetResp@errCnt,w
  3108  020C  047A               	iorwf	radio_comm_GetResp@errCnt+1,w
  3109  020D  1D03               	btfss	3,2
  3110  020E  2A11               	goto	l1739
  3111                           
  3112                           ;comm.c: 32: {
  3113                           ;comm.c: 33: return 0;
  3114  020F  3000               	movlw	0
  3115  0210  0008               	return
  3116  0211                     l1739:	
  3117                           
  3118                           ;comm.c: 34: }
  3119                           ;comm.c: 36: return ctsWentHigh;
  3120  0211  087C               	movf	_ctsWentHigh,w
  3121  0212  0008               	return
  3122  0213                     __end_of_radio_comm_GetResp:	
  3123                           
  3124                           	psect	text17
  3125  0310                     __ptext17:	
  3126 ;; *************** function _SPI_ReadBytes *****************
  3127 ;; Defined at:
  3128 ;;		line 45 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/spi.c"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;  len             1    wreg     unsigned char 
  3131 ;;  data            1    3[COMMON] PTR unsigned char 
  3132 ;;		 -> NULL(0), radioCmd(16), RadioPacket(7), 
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;  len             1    5[COMMON] unsigned char 
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  1    wreg      void 
  3137 ;; Registers used:
  3138 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3144 ;;      Params:         1       0       0       0
  3145 ;;      Locals:         1       0       0       0
  3146 ;;      Temps:          1       0       0       0
  3147 ;;      Totals:         3       0       0       0
  3148 ;;Total ram usage:        3 bytes
  3149 ;; Hardware stack levels used:    1
  3150 ;; Hardware stack levels required when called:    2
  3151 ;; This function calls:
  3152 ;;		_SPI_ReadByte
  3153 ;; This function is called by:
  3154 ;;		_radio_comm_GetResp
  3155 ;;		_radio_comm_ReadData
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158                           
  3159                           
  3160                           ;psect for function _SPI_ReadBytes
  3161  0310                     _SPI_ReadBytes:	
  3162                           
  3163                           ;incstack = 0
  3164                           ; Regs used in _SPI_ReadBytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3165                           ;SPI_ReadBytes@len stored from wreg
  3166  0310  00F5               	movwf	SPI_ReadBytes@len
  3167  0311                     l1711:	
  3168                           ;spi.c: 47: while( len-- )
  3169                           
  3170  0311  3001               	movlw	1
  3171  0312  02F5               	subwf	SPI_ReadBytes@len,f
  3172  0313  0A75               	incf	SPI_ReadBytes@len,w
  3173  0314  1903               	btfsc	3,2
  3174  0315  0008               	return
  3175                           
  3176                           ;spi.c: 48: {
  3177                           ;spi.c: 49: *data++ = SPI_ReadByte();
  3178  0316  3183  2383  3183   	fcall	_SPI_ReadByte
  3179  0319  00F4               	movwf	??_SPI_ReadBytes
  3180  031A  0873               	movf	SPI_ReadBytes@data,w
  3181  031B  0086               	movwf	6
  3182  031C  0187               	clrf	7
  3183  031D  0874               	movf	??_SPI_ReadBytes,w
  3184  031E  0081               	movwf	1
  3185  031F  3001               	movlw	1
  3186  0320  00F4               	movwf	??_SPI_ReadBytes
  3187  0321  0874               	movf	??_SPI_ReadBytes,w
  3188  0322  07F3               	addwf	SPI_ReadBytes@data,f
  3189  0323  2B11               	goto	l1711
  3190  0324                     __end_of_SPI_ReadBytes:	
  3191                           
  3192                           	psect	text18
  3193  0383                     __ptext18:	
  3194 ;; *************** function _SPI_ReadByte *****************
  3195 ;; Defined at:
  3196 ;;		line 53 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/spi.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;		None
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;  data            1    2[COMMON] unsigned char 
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  1    wreg      unsigned char 
  3203 ;; Registers used:
  3204 ;;		wreg, status,2
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3210 ;;      Params:         0       0       0       0
  3211 ;;      Locals:         1       0       0       0
  3212 ;;      Temps:          1       0       0       0
  3213 ;;      Totals:         2       0       0       0
  3214 ;;Total ram usage:        2 bytes
  3215 ;; Hardware stack levels used:    1
  3216 ;; Hardware stack levels required when called:    1
  3217 ;; This function calls:
  3218 ;;		Nothing
  3219 ;; This function is called by:
  3220 ;;		_SPI_ReadBytes
  3221 ;;		_radio_comm_GetResp
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225                           
  3226                           ;psect for function _SPI_ReadByte
  3227  0383                     _SPI_ReadByte:	
  3228                           
  3229                           ;spi.c: 55: U8 data = 0;
  3230                           
  3231                           ;incstack = 0
  3232                           ; Regs used in _SPI_ReadByte: [wreg+status,2]
  3233  0383  01F2               	clrf	SPI_ReadByte@data
  3234                           
  3235                           ;spi.c: 56: SSPBUF = 0;
  3236  0384  0024               	movlb	4	; select bank4
  3237  0385  0191               	clrf	17	;volatile
  3238  0386                     l58:	
  3239                           ;spi.c: 57: while( BF == 0 );
  3240                           
  3241  0386  1C14               	btfss	20,0	;volatile
  3242  0387  2B86               	goto	l58
  3243                           
  3244                           ;spi.c: 58: data = SSPBUF;
  3245  0388  0811               	movf	17,w	;volatile
  3246  0389  00F1               	movwf	??_SPI_ReadByte
  3247  038A  0871               	movf	??_SPI_ReadByte,w
  3248  038B  00F2               	movwf	SPI_ReadByte@data
  3249                           
  3250                           ;spi.c: 59: return data;
  3251  038C  0872               	movf	SPI_ReadByte@data,w
  3252  038D  0008               	return
  3253  038E                     __end_of_SPI_ReadByte:	
  3254                           
  3255                           	psect	text19
  3256  0349                     __ptext19:	
  3257 ;; *************** function _SPI_WriteBytes *****************
  3258 ;; Defined at:
  3259 ;;		line 30 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/spi.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;  len             1    wreg     unsigned char 
  3262 ;;  data            1    3[COMMON] PTR unsigned char 
  3263 ;;		 -> radioCmd(16), 
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;  len             1    5[COMMON] unsigned char 
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  1    wreg      void 
  3268 ;; Registers used:
  3269 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3275 ;;      Params:         1       0       0       0
  3276 ;;      Locals:         1       0       0       0
  3277 ;;      Temps:          1       0       0       0
  3278 ;;      Totals:         3       0       0       0
  3279 ;;Total ram usage:        3 bytes
  3280 ;; Hardware stack levels used:    1
  3281 ;; Hardware stack levels required when called:    2
  3282 ;; This function calls:
  3283 ;;		_SPI_WriteByte
  3284 ;; This function is called by:
  3285 ;;		_radio_comm_SendCmd
  3286 ;;		_radio_comm_WriteData
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           
  3291                           ;psect for function _SPI_WriteBytes
  3292  0349                     _SPI_WriteBytes:	
  3293                           
  3294                           ;incstack = 0
  3295                           ; Regs used in _SPI_WriteBytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3296                           ;SPI_WriteBytes@len stored from wreg
  3297  0349  00F5               	movwf	SPI_WriteBytes@len
  3298  034A                     l1749:	
  3299                           ;spi.c: 32: while( len-- )
  3300                           
  3301  034A  3001               	movlw	1
  3302  034B  02F5               	subwf	SPI_WriteBytes@len,f
  3303  034C  0A75               	incf	SPI_WriteBytes@len,w
  3304  034D  1903               	btfsc	3,2
  3305  034E  0008               	return
  3306                           
  3307                           ;spi.c: 33: {
  3308                           ;spi.c: 34: SPI_WriteByte( *data++ );
  3309  034F  0873               	movf	SPI_WriteBytes@data,w
  3310  0350  0086               	movwf	6
  3311  0351  0187               	clrf	7
  3312  0352  0801               	movf	1,w
  3313  0353  3183  236A  3183   	fcall	_SPI_WriteByte
  3314  0356  3001               	movlw	1
  3315  0357  00F4               	movwf	??_SPI_WriteBytes
  3316  0358  0874               	movf	??_SPI_WriteBytes,w
  3317  0359  07F3               	addwf	SPI_WriteBytes@data,f
  3318  035A  2B4A               	goto	l1749
  3319  035B                     __end_of_SPI_WriteBytes:	
  3320                           
  3321                           	psect	text20
  3322  036A                     __ptext20:	
  3323 ;; *************** function _SPI_WriteByte *****************
  3324 ;; Defined at:
  3325 ;;		line 38 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/spi.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;  data            1    wreg     unsigned char 
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;  data            1    2[COMMON] unsigned char 
  3330 ;; Return value:  Size  Location     Type
  3331 ;;                  1    wreg      void 
  3332 ;; Registers used:
  3333 ;;		wreg
  3334 ;; Tracked objects:
  3335 ;;		On entry : 0/0
  3336 ;;		On exit  : 0/0
  3337 ;;		Unchanged: 0/0
  3338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3339 ;;      Params:         0       0       0       0
  3340 ;;      Locals:         1       0       0       0
  3341 ;;      Temps:          1       0       0       0
  3342 ;;      Totals:         2       0       0       0
  3343 ;;Total ram usage:        2 bytes
  3344 ;; Hardware stack levels used:    1
  3345 ;; Hardware stack levels required when called:    1
  3346 ;; This function calls:
  3347 ;;		Nothing
  3348 ;; This function is called by:
  3349 ;;		_SPI_WriteBytes
  3350 ;;		_radio_comm_GetResp
  3351 ;;		_radio_comm_ReadData
  3352 ;;		_si4355_ezconfig_check
  3353 ;;		_radio_comm_WriteData
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           
  3358                           ;psect for function _SPI_WriteByte
  3359  036A                     _SPI_WriteByte:	
  3360                           
  3361                           ;incstack = 0
  3362                           ; Regs used in _SPI_WriteByte: [wreg]
  3363                           ;SPI_WriteByte@data stored from wreg
  3364  036A  00F2               	movwf	SPI_WriteByte@data
  3365                           
  3366                           ;spi.c: 40: SSPBUF = data;
  3367  036B  0872               	movf	SPI_WriteByte@data,w
  3368  036C  0024               	movlb	4	; select bank4
  3369  036D  0091               	movwf	17	;volatile
  3370  036E                     l46:	
  3371                           ;spi.c: 41: while( !SSP1IF );
  3372                           
  3373  036E  0020               	movlb	0	; select bank0
  3374  036F  1D91               	btfss	17,3	;volatile
  3375  0370  2B6E               	goto	l46
  3376                           
  3377                           ;spi.c: 42: data = SSPBUF;
  3378  0371  0024               	movlb	4	; select bank4
  3379  0372  0811               	movf	17,w	;volatile
  3380  0373  00F1               	movwf	??_SPI_WriteByte
  3381  0374  0871               	movf	??_SPI_WriteByte,w
  3382  0375  00F2               	movwf	SPI_WriteByte@data
  3383  0376  0008               	return
  3384  0377                     __end_of_SPI_WriteByte:	
  3385                           
  3386                           	psect	text21
  3387  0377                     __ptext21:	
  3388 ;; *************** function _HW_Config *****************
  3389 ;; Defined at:
  3390 ;;		line 4 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/config.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;		None
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;		None
  3395 ;; Return value:  Size  Location     Type
  3396 ;;                  1    wreg      void 
  3397 ;; Registers used:
  3398 ;;		wreg, status,2
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/0
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3404 ;;      Params:         0       0       0       0
  3405 ;;      Locals:         0       0       0       0
  3406 ;;      Temps:          0       0       0       0
  3407 ;;      Totals:         0       0       0       0
  3408 ;;Total ram usage:        0 bytes
  3409 ;; Hardware stack levels used:    1
  3410 ;; Hardware stack levels required when called:    1
  3411 ;; This function calls:
  3412 ;;		Nothing
  3413 ;; This function is called by:
  3414 ;;		_main
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418                           
  3419                           ;psect for function _HW_Config
  3420  0377                     _HW_Config:	
  3421                           
  3422                           ;config.c: 6: ANSELA = 0x00;
  3423                           
  3424                           ;incstack = 0
  3425                           ; Regs used in _HW_Config: [wreg+status,2]
  3426  0377  0023               	movlb	3	; select bank3
  3427  0378  018C               	clrf	12	;volatile
  3428                           
  3429                           ;config.c: 7: TRISA = 0xCC;
  3430  0379  30CC               	movlw	204
  3431  037A  0021               	movlb	1	; select bank1
  3432  037B  008C               	movwf	12	;volatile
  3433                           
  3434                           ;config.c: 8: PORTA = 0x22;
  3435  037C  3022               	movlw	34
  3436  037D  0020               	movlb	0	; select bank0
  3437  037E  008C               	movwf	12	;volatile
  3438                           
  3439                           ;config.c: 9: RA1 = 1;
  3440  037F  148C               	bsf	12,1	;volatile
  3441                           
  3442                           ;config.c: 10: RA0 = 0;
  3443  0380  100C               	bcf	12,0	;volatile
  3444                           
  3445                           ;config.c: 11: RA5 = 1;
  3446  0381  168C               	bsf	12,5	;volatile
  3447  0382  0008               	return
  3448  0383                     __end_of_HW_Config:	
  3449                           
  3450                           	psect	intentry
  3451  0004                     __pintentry:	
  3452 ;; *************** function _Timer0_ISR *****************
  3453 ;; Defined at:
  3454 ;;		line 56 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/main.c"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;		None
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;		None
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  1    wreg      void 
  3461 ;; Registers used:
  3462 ;;		wreg
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3468 ;;      Params:         0       0       0       0
  3469 ;;      Locals:         0       0       0       0
  3470 ;;      Temps:          1       0       0       0
  3471 ;;      Totals:         1       0       0       0
  3472 ;;Total ram usage:        1 bytes
  3473 ;; Hardware stack levels used:    1
  3474 ;; This function calls:
  3475 ;;		Nothing
  3476 ;; This function is called by:
  3477 ;;		Interrupt level 1
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481  0004                     _Timer0_ISR:	
  3482                           
  3483                           ;incstack = 0
  3484  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3485                           
  3486                           ; Regs used in _Timer0_ISR: [wreg]
  3487  0005  3180               	pagesel	$
  3488  0006  0020               	movlb	0	; select bank0
  3489  0007  087F               	movf	127,w
  3490  0008  00F0               	movwf	??_Timer0_ISR
  3491                           
  3492                           ;main.c: 58: TMR0IF = 0;
  3493  0009  110B               	bcf	11,2	;volatile
  3494                           
  3495                           ;main.c: 59: counter++;
  3496  000A  3001               	movlw	1
  3497  000B  07B0               	addwf	_counter,f
  3498  000C  3000               	movlw	0
  3499  000D  3DB1               	addwfc	_counter+1,f
  3500                           
  3501                           ;main.c: 60: RA0 = counter & 1;
  3502  000E  1C30               	btfss	_counter,0
  3503  000F  2813               	goto	u48_20
  3504  0010  0020               	movlb	0	; select bank0
  3505  0011  140C               	bsf	12,0	;volatile
  3506  0012  2815               	goto	i1l108
  3507  0013                     u48_20:	
  3508  0013  0020               	movlb	0	; select bank0
  3509  0014  100C               	bcf	12,0	;volatile
  3510  0015                     i1l108:	
  3511  0015  0870               	movf	??_Timer0_ISR,w
  3512  0016  00FF               	movwf	127
  3513  0017  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3514  0018  0009               	retfie
  3515  0019                     __end_of_Timer0_ISR:	
  3516  007E                     btemp	set	126	;btemp
  3517  007E                     int$flags	set	126
  3518  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    274
    Data        8
    BSS         44
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     19      70
    BANK1            80      0       0
    BANK2            64      0       0

Pointer List with Targets:

    radio_comm_ReadData@pData	PTR unsigned char  size(1) Largest target is 16
		 -> radioCmd(BANK0[16]), RadioPacket(BANK0[7]), 

    radio_comm_SendCmdGetResp@pRespData	PTR unsigned char  size(1) Largest target is 16
		 -> NULL(NULL[0]), radioCmd(BANK0[16]), 

    radio_comm_SendCmdGetResp@pCmdData	PTR unsigned char  size(1) Largest target is 16
		 -> radioCmd(BANK0[16]), 

    radio_comm_SendCmd@pData	PTR unsigned char  size(1) Largest target is 16
		 -> radioCmd(BANK0[16]), 

    radio_comm_GetResp@pData	PTR unsigned char  size(1) Largest target is 16
		 -> NULL(NULL[0]), radioCmd(BANK0[16]), 

    si4355_read_rx_fifo@pRxData	PTR unsigned char  size(1) Largest target is 7
		 -> RadioPacket(BANK0[7]), 

    si4355_configuration_init@pSetPropCmd	PTR unsigned char  size(2) Largest target is 274
		 -> Radio_Configuration_Data_Array(CODE[274]), 

    pRadioConfiguration.Radio_ConfigurationArray	PTR unsigned char  size(2) Largest target is 274
		 -> Radio_Configuration_Data_Array(CODE[274]), 

    pRadioConfiguration	PTR struct . size(1) Largest target is 7
		 -> RadioConfiguration(BANK0[7]), 

    S96$Radio_ConfigurationArray	PTR unsigned char  size(2) Largest target is 274
		 -> Radio_Configuration_Data_Array(CODE[274]), 

    RadioConfiguration.Radio_ConfigurationArray	PTR unsigned char  size(2) Largest target is 274
		 -> Radio_Configuration_Data_Array(CODE[274]), 

    SPI_ReadBytes@data	PTR unsigned char  size(1) Largest target is 16
		 -> NULL(NULL[0]), radioCmd(BANK0[16]), RadioPacket(BANK0[7]), 

    SPI_WriteBytes@data	PTR unsigned char  size(1) Largest target is 16
		 -> radioCmd(BANK0[16]), 


Critical Paths under _main in COMMON

    _si4355_start_rx->_radio_comm_SendCmd
    _si4355_read_rx_fifo->_radio_comm_ReadData
    _radio_comm_SendCmdGetResp->_radio_comm_SendCmd
    _radio_comm_PollCTS->_radio_comm_GetResp
    _radio_comm_GetResp->_SPI_ReadBytes
    _SPI_ReadBytes->_SPI_ReadByte
    _SPI_WriteBytes->_SPI_WriteByte

Critical Paths under _Timer0_ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _si4355_fifo_info->_radio_comm_SendCmdGetResp
    _Radio_StartRX->_si4355_get_int_status
    _si4355_start_rx->_radio_comm_SendCmd
    _Radio_Init->_si4355_configuration_init
    _si4355_configuration_init->_si4355_get_int_status
    _Radio_CheckReceived->_si4355_get_int_status
    _si4355_read_rx_fifo->_radio_comm_ReadData
    _si4355_get_int_status->_radio_comm_SendCmdGetResp
    _radio_comm_SendCmdGetResp->_radio_comm_SendCmd

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   33851
                                             18 BANK0      1     1      0
                          _HW_Config
                _Radio_CheckReceived
                         _Radio_Init
                      _Radio_StartRX
                           _SPI_Init
                   _si4355_fifo_info
 ---------------------------------------------------------------------------------
 (1) _si4355_fifo_info                                     4     4      0    4252
                                              7 BANK0      4     4      0
          _radio_comm_SendCmdGetResp
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Radio_StartRX                                        3     3      0    7093
                                             13 BANK0      3     3      0
              _si4355_get_int_status
                    _si4355_start_rx
 ---------------------------------------------------------------------------------
 (2) _si4355_start_rx                                      8     2      6    2132
                                              2 BANK0      8     2      6
                 _radio_comm_SendCmd
 ---------------------------------------------------------------------------------
 (1) _Radio_Init                                           0     0      0   15149
                      _Radio_PowerUp
          _si4355_configuration_init
              _si4355_get_int_status
 ---------------------------------------------------------------------------------
 (2) _si4355_configuration_init                            5     3      2    9497
                                             13 BANK0      5     3      2
          _radio_comm_SendCmdGetResp
              _si4355_get_int_status
 ---------------------------------------------------------------------------------
 (2) _Radio_PowerUp                                        2     2      0     722
                                              0 BANK0      2     2      0
                 _radio_comm_PollCTS
                       _si4355_reset
 ---------------------------------------------------------------------------------
 (3) _si4355_reset                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Radio_CheckReceived                                  1     1      0    7357
                                             13 BANK0      1     1      0
              _si4355_get_int_status
                _si4355_read_rx_fifo
 ---------------------------------------------------------------------------------
 (2) _si4355_read_rx_fifo                                  4     3      1    2427
                                              4 BANK0      4     3      1
                _radio_comm_ReadData
 ---------------------------------------------------------------------------------
 (3) _radio_comm_ReadData                                  5     2      3    2288
                                             11 COMMON     1     1      0
                                              0 BANK0      4     1      3
                      _SPI_ReadBytes
                      _SPI_WriteByte
                 _radio_comm_PollCTS
 ---------------------------------------------------------------------------------
 (2) _si4355_get_int_status                                6     4      2    4930
                                              7 BANK0      6     4      2
          _radio_comm_SendCmdGetResp
 ---------------------------------------------------------------------------------
 (2) _radio_comm_SendCmdGetResp                            5     2      3    4221
                                              2 BANK0      5     2      3
                 _radio_comm_GetResp
                 _radio_comm_SendCmd
 ---------------------------------------------------------------------------------
 (3) _radio_comm_SendCmd                                   3     2      1    1530
                                             11 COMMON     1     0      1
                                              0 BANK0      2     2      0
                     _SPI_WriteBytes
                 _radio_comm_PollCTS
 ---------------------------------------------------------------------------------
 (4) _radio_comm_PollCTS                                   0     0      0     719
                 _radio_comm_GetResp
 ---------------------------------------------------------------------------------
 (5) _radio_comm_GetResp                                   5     4      1     719
                                              6 COMMON     5     4      1
                       _SPI_ReadByte
                      _SPI_ReadBytes
                      _SPI_WriteByte
 ---------------------------------------------------------------------------------
 (6) _SPI_ReadBytes                                        3     2      1     256
                                              3 COMMON     3     2      1
                       _SPI_ReadByte
 ---------------------------------------------------------------------------------
 (7) _SPI_ReadByte                                         2     2      0      37
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _SPI_WriteBytes                                       3     2      1     253
                                              3 COMMON     3     2      1
                      _SPI_WriteByte
 ---------------------------------------------------------------------------------
 (6) _SPI_WriteByte                                        2     2      0      34
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _HW_Config                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _Timer0_ISR                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HW_Config
   _Radio_CheckReceived
     _si4355_get_int_status
       _radio_comm_SendCmdGetResp
         _radio_comm_GetResp
           _SPI_ReadByte
           _SPI_ReadBytes
             _SPI_ReadByte
           _SPI_WriteByte
         _radio_comm_SendCmd
           _SPI_WriteBytes
             _SPI_WriteByte
           _radio_comm_PollCTS
             _radio_comm_GetResp
               _SPI_ReadByte
               _SPI_ReadBytes
                 _SPI_ReadByte
               _SPI_WriteByte
     _si4355_read_rx_fifo
       _radio_comm_ReadData
         _SPI_ReadBytes
           _SPI_ReadByte
         _SPI_WriteByte
         _radio_comm_PollCTS
           _radio_comm_GetResp
             _SPI_ReadByte
             _SPI_ReadBytes
               _SPI_ReadByte
             _SPI_WriteByte
   _Radio_Init
     _Radio_PowerUp
       _radio_comm_PollCTS
         _radio_comm_GetResp
           _SPI_ReadByte
           _SPI_ReadBytes
             _SPI_ReadByte
           _SPI_WriteByte
       _si4355_reset
     _si4355_configuration_init
       _radio_comm_SendCmdGetResp
         _radio_comm_GetResp
           _SPI_ReadByte
           _SPI_ReadBytes
             _SPI_ReadByte
           _SPI_WriteByte
         _radio_comm_SendCmd
           _SPI_WriteBytes
             _SPI_WriteByte
           _radio_comm_PollCTS
             _radio_comm_GetResp
               _SPI_ReadByte
               _SPI_ReadBytes
                 _SPI_ReadByte
               _SPI_WriteByte
       _si4355_get_int_status
         _radio_comm_SendCmdGetResp
           _radio_comm_GetResp
             _SPI_ReadByte
             _SPI_ReadBytes
               _SPI_ReadByte
             _SPI_WriteByte
           _radio_comm_SendCmd
             _SPI_WriteBytes
               _SPI_WriteByte
             _radio_comm_PollCTS
               _radio_comm_GetResp
                 _SPI_ReadByte
                 _SPI_ReadBytes
                   _SPI_ReadByte
                 _SPI_WriteByte
     _si4355_get_int_status
       _radio_comm_SendCmdGetResp
         _radio_comm_GetResp
           _SPI_ReadByte
           _SPI_ReadBytes
             _SPI_ReadByte
           _SPI_WriteByte
         _radio_comm_SendCmd
           _SPI_WriteBytes
             _SPI_WriteByte
           _radio_comm_PollCTS
             _radio_comm_GetResp
               _SPI_ReadByte
               _SPI_ReadBytes
                 _SPI_ReadByte
               _SPI_WriteByte
   _Radio_StartRX
     _si4355_get_int_status
       _radio_comm_SendCmdGetResp
         _radio_comm_GetResp
           _SPI_ReadByte
           _SPI_ReadBytes
             _SPI_ReadByte
           _SPI_WriteByte
         _radio_comm_SendCmd
           _SPI_WriteBytes
             _SPI_WriteByte
           _radio_comm_PollCTS
             _radio_comm_GetResp
               _SPI_ReadByte
               _SPI_ReadBytes
                 _SPI_ReadByte
               _SPI_WriteByte
     _si4355_start_rx
       _radio_comm_SendCmd
         _SPI_WriteBytes
           _SPI_WriteByte
         _radio_comm_PollCTS
           _radio_comm_GetResp
             _SPI_ReadByte
             _SPI_ReadBytes
               _SPI_ReadByte
             _SPI_WriteByte
   _SPI_Init
   _si4355_fifo_info
     _radio_comm_SendCmdGetResp
       _radio_comm_GetResp
         _SPI_ReadByte
         _SPI_ReadBytes
           _SPI_ReadByte
         _SPI_WriteByte
       _radio_comm_SendCmd
         _SPI_WriteBytes
           _SPI_WriteByte
         _radio_comm_PollCTS
           _radio_comm_GetResp
             _SPI_ReadByte
             _SPI_ReadBytes
               _SPI_ReadByte
             _SPI_WriteByte

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              E0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      53       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     13      46       6       87.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            40      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               40      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      53      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Feb 09 00:56:06 2017

                           __CFG_CP$OFF 0000                                      _BF 10A0  
                                    l46 036E                                      l58 0386  
     radio_comm_SendCmdGetResp@pCmdData 004D                       ?_si4355_fifo_info 0070  
                                   l102 022F                                     l270 0204  
                                   l272 0203                                     l186 018B  
                                   l293 0297                                     l286 02B9  
                                   _CKE 10A6                                     _CKP 10AC  
                                   _GIE 005F                                     _RA0 0060  
                                   _RA1 0061                                     _RA3 0063  
                                   _RA5 0065                     _pRadioConfiguration 005E  
                          __CFG_CPD$OFF 0000                                     _SMP 10A7  
    __size_of_radio_comm_SendCmdGetResp 0013                      ??_si4355_fifo_info 0052  
                          __CFG_BORV$LO 0000                                     wreg 0009  
                          __CFG_IESO$ON 0000                            _si4355_reset 03B0  
                          __CFG_LVP$OFF 0000                                    l1711 0311  
                                  l1731 01DF                                    l1733 020B  
                                  l1727 0201                                    l1761 02B2  
                                  l1913 022B                                    l1905 021A  
                                  l1739 0211                                    l1835 0163  
                                  l1827 0162                                    l1907 021D  
                                  l1915 0231                                    l1749 034A  
                                  l1837 017C                                    l1845 0148  
                                  l1847 0195                                    l1797 0291  
                                  l1799 0294                                    l1897 030E  
                                  _TMR0 0015                            __CFG_WRT$OFF 0000  
                         __CFG_FCMEN$ON 0000                                    _main 0213  
                     ??_si4355_start_rx 0053                                    fsr0h 0005  
                                  fsr1h 0007                                    indf0 0000  
                                  fsr0l 0004                                    indf1 0001  
                                  fsr1l 0006                                    btemp 007E  
                __size_of_Radio_PowerUp 0009                           __CFG_BOREN$ON 0000  
                  si4355_fifo_info@FIFO 0055                  __size_of_Radio_StartRX 001B  
                                  start 0019                          ?_SPI_ReadBytes 0073  
                         _SPI_WriteByte 036A                           __CFG_MCLRE$ON 0000  
               ??_si4355_get_int_status 0054                           __CFG_PLLEN$ON 0000  
           si4355_read_rx_fifo@numBytes 0052                                   ?_main 0070  
           ??_si4355_configuration_init 005A                           __CFG_WDTE$OFF 0000  
                                 i1l108 0015                                   _PORTA 000C  
 radio_comm_SendCmdGetResp@cmdByteCount 0051                                   _STATE 0032  
                                 u48_20 0013                                   _SSPM0 10A8  
                                 _SSPM1 10A9                                   _SSPM2 10AA  
                                 _SSPM3 10AB                                   _TRISA 008C  
                                 _SSPEN 10AD                                   _SSSEL 08ED  
     __end_of_radio_comm_SendCmdGetResp 0337                      __size_of_HW_Config 000C  
                      SPI_ReadByte@data 0072                                   _dummy 0033  
                      __end_of_SPI_Init 0349             __end_of_radio_comm_ReadData 02A9  
                      SPI_ReadBytes@len 0075                                   status 0003  
                                 wtemp0 007E             radio_comm_GetResp@byteCount 0078  
                        ?_SPI_WriteByte 0070                          _SPI_WriteBytes 0349  
                       __initialization 001B                            __end_of_main 023E  
                   Radio_PowerUp@wDelay 004B                              _Radio_Init 02E1  
                                ??_main 005D            __size_of_si4355_read_rx_fifo 000F  
                         _Radio_PowerUp 038E                           _Radio_StartRX 02C6  
               radio_comm_SendCmd@pData 007B                                  _ANSELA 018C  
                 si4355_start_rx@RX_LEN 004E                                  _SDOSEL 08EE  
             _si4355_configuration_init 0145                                  _TMR0IE 005D  
                                _TMR0IF 005A                                  _SSP1IE 048B  
                                _SSP1IF 008B                         ??_SPI_ReadBytes 0074  
                                _SSPBUF 0211                  __end_of_SPI_WriteBytes 035B  
                        __CFG_PWRTE$OFF 0000                              _Timer0_ISR 0004  
                     __end_of_HW_Config 0383                          __CFG_STVREN$ON 0000  
                        ?_Radio_PowerUp 0070                          ?_Radio_StartRX 0070  
           __size_of_radio_comm_GetResp 0039             radio_comm_SendCmd@byteCount 004C  
          __size_of_Radio_CheckReceived 0017                       SPI_ReadBytes@data 0073  
           __size_of_radio_comm_SendCmd 001D             __size_of_radio_comm_PollCTS 0005  
               __end_of__initialization 002F                         ??_SPI_WriteByte 0071  
                       ?_SPI_WriteBytes 0073                          __pcstackCOMMON 0070  
                          __pidataBANK0 0397                             ?_Radio_Init 0070  
                           _RadioPacket 0044                               ?_SPI_Init 0070  
    si4355_get_int_status@CHIP_CLR_PEND 0053                         _si4355_start_rx 023E  
__end_of_Radio_Configuration_Data_Array 0145          _Radio_Configuration_Data_Array 0033  
                            __pbssBANK0 0020               __size_of_si4355_fifo_info 0023  
                           ?_Timer0_ISR 0070                  si4355_start_rx@CHANNEL 0054  
                            __pmaintext 0213                              __pintentry 0004  
                       ??_Radio_PowerUp 007B                         ??_Radio_StartRX 0058  
        __size_of_si4355_get_int_status 0043           __end_of_si4355_get_int_status 01DA  
              si4355_start_rx@CONDITION 004D                              ??_SPI_Init 0071  
            si4355_start_rx@NEXT_STATE1 0050              si4355_start_rx@NEXT_STATE2 0051  
            si4355_start_rx@NEXT_STATE3 0052                     __size_of_Radio_Init 0018  
                   _si4355_read_rx_fifo 035B      __size_of_si4355_configuration_init 0052  
                     SPI_WriteByte@data 0072                 __end_of_si4355_start_rx 0268  
                     SPI_WriteBytes@len 0075                                 __ptext1 0268  
                               __ptext2 0337                                 __ptext3 02C6  
                               __ptext4 023E                                 __ptext5 02E1  
                               __ptext6 0145                                 __ptext7 038E  
                               __ptext8 03B0                                 __ptext9 02F9  
                  ?_si4355_read_rx_fifo 004F                                 _counter 0030  
                   __size_of_Timer0_ISR 0015              ?_radio_comm_SendCmdGetResp 004D  
                radio_comm_ReadData@cmd 004E                                 clrloop0 03A6  
                  end_of_initialization 002F                                 init_ram 039F  
                               initloop 03A0                     _Radio_CheckReceived 02F9  
          __size_of_radio_comm_ReadData 001E                 radio_comm_GetResp@pData 0076  
                          __pstringtext 0033       __end_of_si4355_configuration_init 0197  
                 ??_si4355_read_rx_fifo 0050                               _HW_Config 0377  
                             _Si4355Cmd 0020                    ?_Radio_CheckReceived 0070  
                      __CFG_FOSC$INTOSC 0000                        ??_SPI_WriteBytes 0074  
                      _si4355_fifo_info 0268                   __end_of_SPI_ReadBytes 0324  
            si4355_read_rx_fifo@pRxData 004F                           ?_SPI_ReadByte 0070  
                          ??_Radio_Init 007C                        ?_si4355_start_rx 004D  
            __end_of_radio_comm_GetResp 0213                              ?_HW_Config 0070  
                 ??_Radio_CheckReceived 0058                       __size_of_SPI_Init 0012  
            __end_of_radio_comm_SendCmd 02C6              __end_of_radio_comm_PollCTS 03B0  
                   start_initialization 001B                           ?_si4355_reset 0070  
                    __end_of_Radio_Init 02F9            si4355_configuration_init@col 005B  
   si4355_get_int_status@MODEM_CLR_PEND 0052                          ??_SPI_ReadByte 0071  
                 __end_of_SPI_WriteByte 0377                            ??_Timer0_ISR 0070  
                           __pdataBANK0 005E                    Radio_StartRX@channel 005A  
                           __pbssCOMMON 007C                          ??_si4355_reset 0071  
                             ___latbits 0001                           __pcstackBANK0 004B  
                    __end_of_Timer0_ISR 0019      radio_comm_SendCmdGetResp@pRespData 004F  
                 __end_of_Radio_PowerUp 0397                             ??_HW_Config 0071  
                 __end_of_Radio_StartRX 02E1                   _si4355_get_int_status 0197  
                   _radio_comm_ReadData 028B             ??_radio_comm_SendCmdGetResp 0050  
                             clear_ram0 03A5     si4355_configuration_init@numOfBytes 005C  
                  ?_radio_comm_ReadData 004B                __end_of_si4355_fifo_info 028B  
                              _SPI_Init 0337                radio_comm_ReadData@pData 004D  
                  __end_of_SPI_ReadByte 038E                             _ctsWentHigh 007C  
                 ??_radio_comm_ReadData 007B                    __end_of_si4355_reset 03B1  
           __end_of_si4355_read_rx_fifo 036A               _radio_comm_SendCmdGetResp 0324  
            ?_si4355_configuration_init 0058                  ?_si4355_get_int_status 0052  
  si4355_configuration_init@pSetPropCmd 0058                      SPI_WriteBytes@data 0073  
            radio_comm_ReadData@pollCts 004B                                __ptext10 035B  
                              __ptext11 028B                                __ptext20 036A  
                              __ptext12 0197                                __ptext21 0377  
                              __ptext13 0324                                __ptext14 02A9  
                              __ptext15 03AB                                __ptext16 01DA  
                              __ptext17 0310                                __ptext18 0383  
                              __ptext19 0349                      _radio_comm_GetResp 01DA  
                              _radioCmd 0034                      _radio_comm_SendCmd 02A9  
                         __size_of_main 002B                      _radio_comm_PollCTS 03AB  
                   ?_radio_comm_GetResp 0076                     ?_radio_comm_SendCmd 007B  
                   ?_radio_comm_PollCTS 0070                                int$flags 007E  
           __end_of_Radio_CheckReceived 0310                    ??_radio_comm_GetResp 0077  
                __size_of_SPI_ReadBytes 0014                    ??_radio_comm_SendCmd 004B  
              __size_of_si4355_start_rx 002A                    ??_radio_comm_PollCTS 007B  
          radio_comm_ReadData@byteCount 004C        si4355_get_int_status@PH_CLR_PEND 0057  
                              intlevel1 0000                       __CFG_CLKOUTEN$OFF 0000  
               __size_of_SPI_WriteBytes 0012                radio_comm_GetResp@errCnt 0079  
                 __size_of_SPI_ReadByte 000B                              _OPTION_REG 0095  
radio_comm_SendCmdGetResp@respByteCount 004E                  __size_of_SPI_WriteByte 000D  
                 __size_of_si4355_reset 0001                      _RadioConfiguration 005F  
                         _SPI_ReadBytes 0310                            _SPI_ReadByte 0383  
