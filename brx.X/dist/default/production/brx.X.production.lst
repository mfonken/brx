

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Feb 07 19:33:51 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	12LF1840
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 1.41
    39                           ; Generated 25/01/2017 GMT
    40                           ; 
    41                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC12LF1840 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  008C                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  010C                     	;# 
   113  0111                     	;# 
   114  0112                     	;# 
   115  0115                     	;# 
   116  0116                     	;# 
   117  0117                     	;# 
   118  0118                     	;# 
   119  0119                     	;# 
   120  011A                     	;# 
   121  011B                     	;# 
   122  011D                     	;# 
   123  011D                     	;# 
   124  018C                     	;# 
   125  0191                     	;# 
   126  0191                     	;# 
   127  0192                     	;# 
   128  0193                     	;# 
   129  0193                     	;# 
   130  0193                     	;# 
   131  0194                     	;# 
   132  0195                     	;# 
   133  0196                     	;# 
   134  0199                     	;# 
   135  019A                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019C                     	;# 
   141  019C                     	;# 
   142  019D                     	;# 
   143  019E                     	;# 
   144  019F                     	;# 
   145  020C                     	;# 
   146  0211                     	;# 
   147  0211                     	;# 
   148  0212                     	;# 
   149  0212                     	;# 
   150  0213                     	;# 
   151  0213                     	;# 
   152  0214                     	;# 
   153  0214                     	;# 
   154  0215                     	;# 
   155  0215                     	;# 
   156  0215                     	;# 
   157  0216                     	;# 
   158  0216                     	;# 
   159  0217                     	;# 
   160  0217                     	;# 
   161  0291                     	;# 
   162  0291                     	;# 
   163  0292                     	;# 
   164  0293                     	;# 
   165  0294                     	;# 
   166  0295                     	;# 
   167  0295                     	;# 
   168  0296                     	;# 
   169  0391                     	;# 
   170  0392                     	;# 
   171  0393                     	;# 
   172  039A                     	;# 
   173  039C                     	;# 
   174  039D                     	;# 
   175  039E                     	;# 
   176  039F                     	;# 
   177  0FE4                     	;# 
   178  0FE5                     	;# 
   179  0FE6                     	;# 
   180  0FE7                     	;# 
   181  0FE8                     	;# 
   182  0FE9                     	;# 
   183  0FEA                     	;# 
   184  0FEB                     	;# 
   185  0FED                     	;# 
   186  0FEE                     	;# 
   187  0FEF                     	;# 
   188  0000                     	;# 
   189  0001                     	;# 
   190  0002                     	;# 
   191  0003                     	;# 
   192  0004                     	;# 
   193  0005                     	;# 
   194  0006                     	;# 
   195  0007                     	;# 
   196  0008                     	;# 
   197  0009                     	;# 
   198  000A                     	;# 
   199  000B                     	;# 
   200  000C                     	;# 
   201  0011                     	;# 
   202  0012                     	;# 
   203  0015                     	;# 
   204  0016                     	;# 
   205  0016                     	;# 
   206  0017                     	;# 
   207  0018                     	;# 
   208  0019                     	;# 
   209  001A                     	;# 
   210  001B                     	;# 
   211  001C                     	;# 
   212  001E                     	;# 
   213  001F                     	;# 
   214  008C                     	;# 
   215  0091                     	;# 
   216  0092                     	;# 
   217  0095                     	;# 
   218  0096                     	;# 
   219  0097                     	;# 
   220  0098                     	;# 
   221  0099                     	;# 
   222  009A                     	;# 
   223  009B                     	;# 
   224  009B                     	;# 
   225  009C                     	;# 
   226  009D                     	;# 
   227  009E                     	;# 
   228  010C                     	;# 
   229  0111                     	;# 
   230  0112                     	;# 
   231  0115                     	;# 
   232  0116                     	;# 
   233  0117                     	;# 
   234  0118                     	;# 
   235  0119                     	;# 
   236  011A                     	;# 
   237  011B                     	;# 
   238  011D                     	;# 
   239  011D                     	;# 
   240  018C                     	;# 
   241  0191                     	;# 
   242  0191                     	;# 
   243  0192                     	;# 
   244  0193                     	;# 
   245  0193                     	;# 
   246  0193                     	;# 
   247  0194                     	;# 
   248  0195                     	;# 
   249  0196                     	;# 
   250  0199                     	;# 
   251  019A                     	;# 
   252  019B                     	;# 
   253  019B                     	;# 
   254  019B                     	;# 
   255  019B                     	;# 
   256  019C                     	;# 
   257  019C                     	;# 
   258  019D                     	;# 
   259  019E                     	;# 
   260  019F                     	;# 
   261  020C                     	;# 
   262  0211                     	;# 
   263  0211                     	;# 
   264  0212                     	;# 
   265  0212                     	;# 
   266  0213                     	;# 
   267  0213                     	;# 
   268  0214                     	;# 
   269  0214                     	;# 
   270  0215                     	;# 
   271  0215                     	;# 
   272  0215                     	;# 
   273  0216                     	;# 
   274  0216                     	;# 
   275  0217                     	;# 
   276  0217                     	;# 
   277  0291                     	;# 
   278  0291                     	;# 
   279  0292                     	;# 
   280  0293                     	;# 
   281  0294                     	;# 
   282  0295                     	;# 
   283  0295                     	;# 
   284  0296                     	;# 
   285  0391                     	;# 
   286  0392                     	;# 
   287  0393                     	;# 
   288  039A                     	;# 
   289  039C                     	;# 
   290  039D                     	;# 
   291  039E                     	;# 
   292  039F                     	;# 
   293  0FE4                     	;# 
   294  0FE5                     	;# 
   295  0FE6                     	;# 
   296  0FE7                     	;# 
   297  0FE8                     	;# 
   298  0FE9                     	;# 
   299  0FEA                     	;# 
   300  0FEB                     	;# 
   301  0FED                     	;# 
   302  0FEE                     	;# 
   303  0FEF                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0006                     	;# 
   311  0007                     	;# 
   312  0008                     	;# 
   313  0009                     	;# 
   314  000A                     	;# 
   315  000B                     	;# 
   316  000C                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  008C                     	;# 
   331  0091                     	;# 
   332  0092                     	;# 
   333  0095                     	;# 
   334  0096                     	;# 
   335  0097                     	;# 
   336  0098                     	;# 
   337  0099                     	;# 
   338  009A                     	;# 
   339  009B                     	;# 
   340  009B                     	;# 
   341  009C                     	;# 
   342  009D                     	;# 
   343  009E                     	;# 
   344  010C                     	;# 
   345  0111                     	;# 
   346  0112                     	;# 
   347  0115                     	;# 
   348  0116                     	;# 
   349  0117                     	;# 
   350  0118                     	;# 
   351  0119                     	;# 
   352  011A                     	;# 
   353  011B                     	;# 
   354  011D                     	;# 
   355  011D                     	;# 
   356  018C                     	;# 
   357  0191                     	;# 
   358  0191                     	;# 
   359  0192                     	;# 
   360  0193                     	;# 
   361  0193                     	;# 
   362  0193                     	;# 
   363  0194                     	;# 
   364  0195                     	;# 
   365  0196                     	;# 
   366  0199                     	;# 
   367  019A                     	;# 
   368  019B                     	;# 
   369  019B                     	;# 
   370  019B                     	;# 
   371  019B                     	;# 
   372  019C                     	;# 
   373  019C                     	;# 
   374  019D                     	;# 
   375  019E                     	;# 
   376  019F                     	;# 
   377  020C                     	;# 
   378  0211                     	;# 
   379  0211                     	;# 
   380  0212                     	;# 
   381  0212                     	;# 
   382  0213                     	;# 
   383  0213                     	;# 
   384  0214                     	;# 
   385  0214                     	;# 
   386  0215                     	;# 
   387  0215                     	;# 
   388  0215                     	;# 
   389  0216                     	;# 
   390  0216                     	;# 
   391  0217                     	;# 
   392  0217                     	;# 
   393  0291                     	;# 
   394  0291                     	;# 
   395  0292                     	;# 
   396  0293                     	;# 
   397  0294                     	;# 
   398  0295                     	;# 
   399  0295                     	;# 
   400  0296                     	;# 
   401  0391                     	;# 
   402  0392                     	;# 
   403  0393                     	;# 
   404  039A                     	;# 
   405  039C                     	;# 
   406  039D                     	;# 
   407  039E                     	;# 
   408  039F                     	;# 
   409  0FE4                     	;# 
   410  0FE5                     	;# 
   411  0FE6                     	;# 
   412  0FE7                     	;# 
   413  0FE8                     	;# 
   414  0FE9                     	;# 
   415  0FEA                     	;# 
   416  0FEB                     	;# 
   417  0FED                     	;# 
   418  0FEE                     	;# 
   419  0FEF                     	;# 
   420  0000                     	;# 
   421  0001                     	;# 
   422  0002                     	;# 
   423  0003                     	;# 
   424  0004                     	;# 
   425  0005                     	;# 
   426  0006                     	;# 
   427  0007                     	;# 
   428  0008                     	;# 
   429  0009                     	;# 
   430  000A                     	;# 
   431  000B                     	;# 
   432  000C                     	;# 
   433  0011                     	;# 
   434  0012                     	;# 
   435  0015                     	;# 
   436  0016                     	;# 
   437  0016                     	;# 
   438  0017                     	;# 
   439  0018                     	;# 
   440  0019                     	;# 
   441  001A                     	;# 
   442  001B                     	;# 
   443  001C                     	;# 
   444  001E                     	;# 
   445  001F                     	;# 
   446  008C                     	;# 
   447  0091                     	;# 
   448  0092                     	;# 
   449  0095                     	;# 
   450  0096                     	;# 
   451  0097                     	;# 
   452  0098                     	;# 
   453  0099                     	;# 
   454  009A                     	;# 
   455  009B                     	;# 
   456  009B                     	;# 
   457  009C                     	;# 
   458  009D                     	;# 
   459  009E                     	;# 
   460  010C                     	;# 
   461  0111                     	;# 
   462  0112                     	;# 
   463  0115                     	;# 
   464  0116                     	;# 
   465  0117                     	;# 
   466  0118                     	;# 
   467  0119                     	;# 
   468  011A                     	;# 
   469  011B                     	;# 
   470  011D                     	;# 
   471  011D                     	;# 
   472  018C                     	;# 
   473  0191                     	;# 
   474  0191                     	;# 
   475  0192                     	;# 
   476  0193                     	;# 
   477  0193                     	;# 
   478  0193                     	;# 
   479  0194                     	;# 
   480  0195                     	;# 
   481  0196                     	;# 
   482  0199                     	;# 
   483  019A                     	;# 
   484  019B                     	;# 
   485  019B                     	;# 
   486  019B                     	;# 
   487  019B                     	;# 
   488  019C                     	;# 
   489  019C                     	;# 
   490  019D                     	;# 
   491  019E                     	;# 
   492  019F                     	;# 
   493  020C                     	;# 
   494  0211                     	;# 
   495  0211                     	;# 
   496  0212                     	;# 
   497  0212                     	;# 
   498  0213                     	;# 
   499  0213                     	;# 
   500  0214                     	;# 
   501  0214                     	;# 
   502  0215                     	;# 
   503  0215                     	;# 
   504  0215                     	;# 
   505  0216                     	;# 
   506  0216                     	;# 
   507  0217                     	;# 
   508  0217                     	;# 
   509  0291                     	;# 
   510  0291                     	;# 
   511  0292                     	;# 
   512  0293                     	;# 
   513  0294                     	;# 
   514  0295                     	;# 
   515  0295                     	;# 
   516  0296                     	;# 
   517  0391                     	;# 
   518  0392                     	;# 
   519  0393                     	;# 
   520  039A                     	;# 
   521  039C                     	;# 
   522  039D                     	;# 
   523  039E                     	;# 
   524  039F                     	;# 
   525  0FE4                     	;# 
   526  0FE5                     	;# 
   527  0FE6                     	;# 
   528  0FE7                     	;# 
   529  0FE8                     	;# 
   530  0FE9                     	;# 
   531  0FEA                     	;# 
   532  0FEB                     	;# 
   533  0FED                     	;# 
   534  0FEE                     	;# 
   535  0FEF                     	;# 
   536  0000                     	;# 
   537  0001                     	;# 
   538  0002                     	;# 
   539  0003                     	;# 
   540  0004                     	;# 
   541  0005                     	;# 
   542  0006                     	;# 
   543  0007                     	;# 
   544  0008                     	;# 
   545  0009                     	;# 
   546  000A                     	;# 
   547  000B                     	;# 
   548  000C                     	;# 
   549  0011                     	;# 
   550  0012                     	;# 
   551  0015                     	;# 
   552  0016                     	;# 
   553  0016                     	;# 
   554  0017                     	;# 
   555  0018                     	;# 
   556  0019                     	;# 
   557  001A                     	;# 
   558  001B                     	;# 
   559  001C                     	;# 
   560  001E                     	;# 
   561  001F                     	;# 
   562  008C                     	;# 
   563  0091                     	;# 
   564  0092                     	;# 
   565  0095                     	;# 
   566  0096                     	;# 
   567  0097                     	;# 
   568  0098                     	;# 
   569  0099                     	;# 
   570  009A                     	;# 
   571  009B                     	;# 
   572  009B                     	;# 
   573  009C                     	;# 
   574  009D                     	;# 
   575  009E                     	;# 
   576  010C                     	;# 
   577  0111                     	;# 
   578  0112                     	;# 
   579  0115                     	;# 
   580  0116                     	;# 
   581  0117                     	;# 
   582  0118                     	;# 
   583  0119                     	;# 
   584  011A                     	;# 
   585  011B                     	;# 
   586  011D                     	;# 
   587  011D                     	;# 
   588  018C                     	;# 
   589  0191                     	;# 
   590  0191                     	;# 
   591  0192                     	;# 
   592  0193                     	;# 
   593  0193                     	;# 
   594  0193                     	;# 
   595  0194                     	;# 
   596  0195                     	;# 
   597  0196                     	;# 
   598  0199                     	;# 
   599  019A                     	;# 
   600  019B                     	;# 
   601  019B                     	;# 
   602  019B                     	;# 
   603  019B                     	;# 
   604  019C                     	;# 
   605  019C                     	;# 
   606  019D                     	;# 
   607  019E                     	;# 
   608  019F                     	;# 
   609  020C                     	;# 
   610  0211                     	;# 
   611  0211                     	;# 
   612  0212                     	;# 
   613  0212                     	;# 
   614  0213                     	;# 
   615  0213                     	;# 
   616  0214                     	;# 
   617  0214                     	;# 
   618  0215                     	;# 
   619  0215                     	;# 
   620  0215                     	;# 
   621  0216                     	;# 
   622  0216                     	;# 
   623  0217                     	;# 
   624  0217                     	;# 
   625  0291                     	;# 
   626  0291                     	;# 
   627  0292                     	;# 
   628  0293                     	;# 
   629  0294                     	;# 
   630  0295                     	;# 
   631  0295                     	;# 
   632  0296                     	;# 
   633  0391                     	;# 
   634  0392                     	;# 
   635  0393                     	;# 
   636  039A                     	;# 
   637  039C                     	;# 
   638  039D                     	;# 
   639  039E                     	;# 
   640  039F                     	;# 
   641  0FE4                     	;# 
   642  0FE5                     	;# 
   643  0FE6                     	;# 
   644  0FE7                     	;# 
   645  0FE8                     	;# 
   646  0FE9                     	;# 
   647  0FEA                     	;# 
   648  0FEB                     	;# 
   649  0FED                     	;# 
   650  0FEE                     	;# 
   651  0FEF                     	;# 
   652  0000                     	;# 
   653  0001                     	;# 
   654  0002                     	;# 
   655  0003                     	;# 
   656  0004                     	;# 
   657  0005                     	;# 
   658  0006                     	;# 
   659  0007                     	;# 
   660  0008                     	;# 
   661  0009                     	;# 
   662  000A                     	;# 
   663  000B                     	;# 
   664  000C                     	;# 
   665  0011                     	;# 
   666  0012                     	;# 
   667  0015                     	;# 
   668  0016                     	;# 
   669  0016                     	;# 
   670  0017                     	;# 
   671  0018                     	;# 
   672  0019                     	;# 
   673  001A                     	;# 
   674  001B                     	;# 
   675  001C                     	;# 
   676  001E                     	;# 
   677  001F                     	;# 
   678  008C                     	;# 
   679  0091                     	;# 
   680  0092                     	;# 
   681  0095                     	;# 
   682  0096                     	;# 
   683  0097                     	;# 
   684  0098                     	;# 
   685  0099                     	;# 
   686  009A                     	;# 
   687  009B                     	;# 
   688  009B                     	;# 
   689  009C                     	;# 
   690  009D                     	;# 
   691  009E                     	;# 
   692  010C                     	;# 
   693  0111                     	;# 
   694  0112                     	;# 
   695  0115                     	;# 
   696  0116                     	;# 
   697  0117                     	;# 
   698  0118                     	;# 
   699  0119                     	;# 
   700  011A                     	;# 
   701  011B                     	;# 
   702  011D                     	;# 
   703  011D                     	;# 
   704  018C                     	;# 
   705  0191                     	;# 
   706  0191                     	;# 
   707  0192                     	;# 
   708  0193                     	;# 
   709  0193                     	;# 
   710  0193                     	;# 
   711  0194                     	;# 
   712  0195                     	;# 
   713  0196                     	;# 
   714  0199                     	;# 
   715  019A                     	;# 
   716  019B                     	;# 
   717  019B                     	;# 
   718  019B                     	;# 
   719  019B                     	;# 
   720  019C                     	;# 
   721  019C                     	;# 
   722  019D                     	;# 
   723  019E                     	;# 
   724  019F                     	;# 
   725  020C                     	;# 
   726  0211                     	;# 
   727  0211                     	;# 
   728  0212                     	;# 
   729  0212                     	;# 
   730  0213                     	;# 
   731  0213                     	;# 
   732  0214                     	;# 
   733  0214                     	;# 
   734  0215                     	;# 
   735  0215                     	;# 
   736  0215                     	;# 
   737  0216                     	;# 
   738  0216                     	;# 
   739  0217                     	;# 
   740  0217                     	;# 
   741  0291                     	;# 
   742  0291                     	;# 
   743  0292                     	;# 
   744  0293                     	;# 
   745  0294                     	;# 
   746  0295                     	;# 
   747  0295                     	;# 
   748  0296                     	;# 
   749  0391                     	;# 
   750  0392                     	;# 
   751  0393                     	;# 
   752  039A                     	;# 
   753  039C                     	;# 
   754  039D                     	;# 
   755  039E                     	;# 
   756  039F                     	;# 
   757  0FE4                     	;# 
   758  0FE5                     	;# 
   759  0FE6                     	;# 
   760  0FE7                     	;# 
   761  0FE8                     	;# 
   762  0FE9                     	;# 
   763  0FEA                     	;# 
   764  0FEB                     	;# 
   765  0FED                     	;# 
   766  0FEE                     	;# 
   767  0FEF                     	;# 
   768                           
   769                           	psect	idataBANK0
   770  03A1                     __pidataBANK0:	
   771                           
   772                           ;initializer for _pRadioConfiguration
   773  03A1  345F               	retlw	low (_RadioConfiguration| 0)
   774                           
   775                           ;initializer for _RadioConfiguration
   776  03A2  3433               	retlw	low (_Radio_Configuration_Data_Array| (0+32768))
   777  03A3  3480               	retlw	high (_Radio_Configuration_Data_Array| (0+32768))
   778  03A4  3400               	retlw	0
   779  03A5  3407               	retlw	7
   780  03A6  3403               	retlw	3
   781  03A7  3400               	retlw	0
   782  03A8  34F0               	retlw	240
   783                           
   784                           	psect	stringtext
   785  0033                     __pstringtext:	
   786  0033                     _Radio_Configuration_Data_Array:	
   787  0033  3407               	retlw	7
   788  0034  3402               	retlw	2
   789  0035  3401               	retlw	1
   790  0036  3400               	retlw	0
   791  0037  3401               	retlw	1
   792  0038  34C9               	retlw	201
   793  0039  34C3               	retlw	195
   794  003A  3480               	retlw	128
   795  003B  3406               	retlw	6
   796  003C  3411               	retlw	17
   797  003D  3401               	retlw	1
   798  003E  3402               	retlw	2
   799  003F  3400               	retlw	0
   800  0040  3401               	retlw	1
   801  0041  34C8               	retlw	200
   802  0042  3408               	retlw	8
   803  0043  3411               	retlw	17
   804  0044  3402               	retlw	2
   805  0045  3404               	retlw	4
   806  0046  3400               	retlw	0
   807  0047  3408               	retlw	8
   808  0048  3406               	retlw	6
   809  0049  3404               	retlw	4
   810  004A  340A               	retlw	10
   811  004B  3405               	retlw	5
   812  004C  3411               	retlw	17
   813  004D  3424               	retlw	36
   814  004E  3401               	retlw	1
   815  004F  3403               	retlw	3
   816  0050  3452               	retlw	82
   817  0051  3472               	retlw	114
   818  0052  3466               	retlw	102
   819  0053  3496               	retlw	150
   820  0054  3470               	retlw	112
   821  0055  34AC               	retlw	172
   822  0056  3457               	retlw	87
   823  0057  349F               	retlw	159
   824  0058  348C               	retlw	140
   825  0059  3466               	retlw	102
   826  005A  347F               	retlw	127
   827  005B  34A4               	retlw	164
   828  005C  34DB               	retlw	219
   829  005D  342D               	retlw	45
   830  005E  3420               	retlw	32
   831  005F  34F1               	retlw	241
   832  0060  3455               	retlw	85
   833  0061  3406               	retlw	6
   834  0062  3447               	retlw	71
   835  0063  347D               	retlw	125
   836  0064  3493               	retlw	147
   837  0065  344F               	retlw	79
   838  0066  3424               	retlw	36
   839  0067  3442               	retlw	66
   840  0068  349C               	retlw	156
   841  0069  34AF               	retlw	175
   842  006A  34C9               	retlw	201
   843  006B  349F               	retlw	159
   844  006C  347C               	retlw	124
   845  006D  3469               	retlw	105
   846  006E  34D8               	retlw	216
   847  006F  345E               	retlw	94
   848  0070  343E               	retlw	62
   849  0071  346A               	retlw	106
   850  0072  34D2               	retlw	210
   851  0073  346F               	retlw	111
   852  0074  348C               	retlw	140
   853  0075  34B2               	retlw	178
   854  0076  3427               	retlw	39
   855  0077  34D7               	retlw	215
   856  0078  3407               	retlw	7
   857  0079  34BC               	retlw	188
   858  007A  34F3               	retlw	243
   859  007B  3456               	retlw	86
   860  007C  34D4               	retlw	212
   861  007D  3424               	retlw	36
   862  007E  3405               	retlw	5
   863  007F  34F2               	retlw	242
   864  0080  34EB               	retlw	235
   865  0081  34B2               	retlw	178
   866  0082  347E               	retlw	126
   867  0083  3469               	retlw	105
   868  0084  347F               	retlw	127
   869  0085  34D4               	retlw	212
   870  0086  3465               	retlw	101
   871  0087  34C9               	retlw	201
   872  0088  3455               	retlw	85
   873  0089  3436               	retlw	54
   874  008A  344A               	retlw	74
   875  008B  34FB               	retlw	251
   876  008C  3452               	retlw	82
   877  008D  345D               	retlw	93
   878  008E  3469               	retlw	105
   879  008F  344F               	retlw	79
   880  0090  3499               	retlw	153
   881  0091  34C1               	retlw	193
   882  0092  34D2               	retlw	210
   883  0093  345F               	retlw	95
   884  0094  34D6               	retlw	214
   885  0095  34EF               	retlw	239
   886  0096  34C5               	retlw	197
   887  0097  34F8               	retlw	248
   888  0098  3487               	retlw	135
   889  0099  340F               	retlw	15
   890  009A  3493               	retlw	147
   891  009B  34E2               	retlw	226
   892  009C  3407               	retlw	7
   893  009D  3477               	retlw	119
   894  009E  340E               	retlw	14
   895  009F  3410               	retlw	16
   896  00A0  342B               	retlw	43
   897  00A1  34B3               	retlw	179
   898  00A2  3439               	retlw	57
   899  00A3  3434               	retlw	52
   900  00A4  342A               	retlw	42
   901  00A5  3466               	retlw	102
   902  00A6  3420               	retlw	32
   903  00A7  3420               	retlw	32
   904  00A8  340D               	retlw	13
   905  00A9  344C               	retlw	76
   906  00AA  3426               	retlw	38
   907  00AB  3484               	retlw	132
   908  00AC  34E9               	retlw	233
   909  00AD  34E7               	retlw	231
   910  00AE  34F5               	retlw	245
   911  00AF  3472               	retlw	114
   912  00B0  34BA               	retlw	186
   913  00B1  3479               	retlw	121
   914  00B2  342C               	retlw	44
   915  00B3  344C               	retlw	76
   916  00B4  34ED               	retlw	237
   917  00B5  3486               	retlw	134
   918  00B6  34B3               	retlw	179
   919  00B7  3498               	retlw	152
   920  00B8  34D3               	retlw	211
   921  00B9  349F               	retlw	159
   922  00BA  343B               	retlw	59
   923  00BB  3427               	retlw	39
   924  00BC  34BC               	retlw	188
   925  00BD  340A               	retlw	10
   926  00BE  3419               	retlw	25
   927  00BF  3418               	retlw	24
   928  00C0  3485               	retlw	133
   929  00C1  3485               	retlw	133
   930  00C2  3405               	retlw	5
   931  00C3  3416               	retlw	22
   932  00C4  3401               	retlw	1
   933  00C5  3400               	retlw	0
   934  00C6  3470               	retlw	112
   935  00C7  3466               	retlw	102
   936  00C8  3467               	retlw	103
   937  00C9  344E               	retlw	78
   938  00CA  34F6               	retlw	246
   939  00CB  3409               	retlw	9
   940  00CC  3465               	retlw	101
   941  00CD  3492               	retlw	146
   942  00CE  34B9               	retlw	185
   943  00CF  340C               	retlw	12
   944  00D0  348F               	retlw	143
   945  00D1  342C               	retlw	44
   946  00D2  349A               	retlw	154
   947  00D3  3438               	retlw	56
   948  00D4  34C5               	retlw	197
   949  00D5  340A               	retlw	10
   950  00D6  3477               	retlw	119
   951  00D7  34CF               	retlw	207
   952  00D8  3480               	retlw	128
   953  00D9  3405               	retlw	5
   954  00DA  34DC               	retlw	220
   955  00DB  3428               	retlw	40
   956  00DC  34DA               	retlw	218
   957  00DD  340F               	retlw	15
   958  00DE  34BE               	retlw	190
   959  00DF  347E               	retlw	126
   960  00E0  34BE               	retlw	190
   961  00E1  34C6               	retlw	198
   962  00E2  3498               	retlw	152
   963  00E3  341A               	retlw	26
   964  00E4  341F               	retlw	31
   965  00E5  342E               	retlw	46
   966  00E6  3424               	retlw	36
   967  00E7  349D               	retlw	157
   968  00E8  34B7               	retlw	183
   969  00E9  34F2               	retlw	242
   970  00EA  3472               	retlw	114
   971  00EB  3468               	retlw	104
   972  00EC  341A               	retlw	26
   973  00ED  3404               	retlw	4
   974  00EE  34F2               	retlw	242
   975  00EF  3433               	retlw	51
   976  00F0  344D               	retlw	77
   977  00F1  3428               	retlw	40
   978  00F2  347B               	retlw	123
   979  00F3  341E               	retlw	30
   980  00F4  3456               	retlw	86
   981  00F5  349E               	retlw	158
   982  00F6  3419               	retlw	25
   983  00F7  34D3               	retlw	211
   984  00F8  3484               	retlw	132
   985  00F9  3475               	retlw	117
   986  00FA  342B               	retlw	43
   987  00FB  343F               	retlw	63
   988  00FC  34C6               	retlw	198
   989  00FD  343D               	retlw	61
   990  00FE  3475               	retlw	117
   991  00FF  3441               	retlw	65
   992  0100  34BC               	retlw	188
   993  0101  3426               	retlw	38
   994  0102  34FC               	retlw	252
   995  0103  3428               	retlw	40
   996  0104  34FC               	retlw	252
   997  0105  34D6               	retlw	214
   998  0106  345F               	retlw	95
   999  0107  34CB               	retlw	203
  1000  0108  3473               	retlw	115
  1001  0109  34B2               	retlw	178
  1002  010A  342A               	retlw	42
  1003  010B  34A1               	retlw	161
  1004  010C  3438               	retlw	56
  1005  010D  3477               	retlw	119
  1006  010E  3400               	retlw	0
  1007  010F  34C3               	retlw	195
  1008  0110  3416               	retlw	22
  1009  0111  34D9               	retlw	217
  1010  0112  343E               	retlw	62
  1011  0113  34A0               	retlw	160
  1012  0114  3443               	retlw	67
  1013  0115  3461               	retlw	97
  1014  0116  3465               	retlw	101
  1015  0117  34EF               	retlw	239
  1016  0118  343D               	retlw	61
  1017  0119  34CE               	retlw	206
  1018  011A  3480               	retlw	128
  1019  011B  3456               	retlw	86
  1020  011C  34F9               	retlw	249
  1021  011D  34CF               	retlw	207
  1022  011E  3418               	retlw	24
  1023  011F  3405               	retlw	5
  1024  0120  3449               	retlw	73
  1025  0121  3483               	retlw	131
  1026  0122  3407               	retlw	7
  1027  0123  3482               	retlw	130
  1028  0124  3445               	retlw	69
  1029  0125  34F6               	retlw	246
  1030  0126  3407               	retlw	7
  1031  0127  34B2               	retlw	178
  1032  0128  34BC               	retlw	188
  1033  0129  344C               	retlw	76
  1034  012A  348A               	retlw	138
  1035  012B  3466               	retlw	102
  1036  012C  346F               	retlw	111
  1037  012D  341B               	retlw	27
  1038  012E  349E               	retlw	158
  1039  012F  34EF               	retlw	239
  1040  0130  3424               	retlw	36
  1041  0131  3497               	retlw	151
  1042  0132  340A               	retlw	10
  1043  0133  34B0               	retlw	176
  1044  0134  349E               	retlw	158
  1045  0135  34CF               	retlw	207
  1046  0136  3449               	retlw	73
  1047  0137  3403               	retlw	3
  1048  0138  3419               	retlw	25
  1049  0139  3448               	retlw	72
  1050  013A  3453               	retlw	83
  1051  013B  3408               	retlw	8
  1052  013C  3413               	retlw	19
  1053  013D  3400               	retlw	0
  1054  013E  3400               	retlw	0
  1055  013F  3400               	retlw	0
  1056  0140  3400               	retlw	0
  1057  0141  3400               	retlw	0
  1058  0142  3400               	retlw	0
  1059  0143  3460               	retlw	96
  1060  0144  3400               	retlw	0
  1061  0145                     __end_of_Radio_Configuration_Data_Array:	
  1062  0015                     _TMR0	set	21
  1063  0065                     _RA5	set	101
  1064  0063                     _RA3	set	99
  1065  0060                     _RA0	set	96
  1066  005A                     _TMR0IF	set	90
  1067  005F                     _GIE	set	95
  1068  005D                     _TMR0IE	set	93
  1069  008B                     _SSP1IF	set	139
  1070  0095                     _OPTION_REG	set	149
  1071  08ED                     _SSSEL	set	2285
  1072  08EE                     _SDOSEL	set	2286
  1073  0211                     _SSPBUF	set	529
  1074  10AB                     _SSPM3	set	4267
  1075  10AA                     _SSPM2	set	4266
  1076  10A9                     _SSPM1	set	4265
  1077  10A8                     _SSPM0	set	4264
  1078  10AC                     _CKP	set	4268
  1079  10A6                     _CKE	set	4262
  1080  10A7                     _SMP	set	4263
  1081  10AD                     _SSPEN	set	4269
  1082                           
  1083                           ; #config settings
  1084  0000                     
  1085                           	psect	cinit
  1086  001B                     start_initialization:	
  1087  001B                     __initialization:	
  1088                           
  1089                           ; Initialize objects allocated to BANK0
  1090  001B  30A1               	movlw	low __pidataBANK0
  1091  001C  0084               	movwf	4
  1092  001D  3083               	movlw	(high __pidataBANK0)| (0+128)
  1093  001E  0085               	movwf	5
  1094  001F  305E               	movlw	low __pdataBANK0
  1095  0020  0086               	movwf	6
  1096  0021  3000               	movlw	high __pdataBANK0
  1097  0022  0087               	movwf	7
  1098  0023  3008               	movlw	8
  1099  0024  3183  23A9  3180   	fcall	init_ram
  1100                           
  1101                           ; Clear objects allocated to COMMON
  1102  0027  01FC               	clrf	__pbssCOMMON& (0+127)
  1103                           
  1104                           ; Clear objects allocated to BANK0
  1105  0028  3020               	movlw	low __pbssBANK0
  1106  0029  0084               	movwf	4
  1107  002A  3000               	movlw	high __pbssBANK0
  1108  002B  0085               	movwf	5
  1109  002C  302B               	movlw	43
  1110  002D  3183  23AF         	fcall	clear_ram0
  1111  002F                     end_of_initialization:	
  1112                           ;End of C runtime variable initialization code
  1113                           
  1114  002F                     __end_of__initialization:	
  1115  002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1116  0030  0020               	movlb	0
  1117  0031  3182  2A41         	ljmp	_main	;jump to C main() function
  1118                           
  1119                           	psect	bssCOMMON
  1120  007C                     __pbssCOMMON:	
  1121  007C                     _ctsWentHigh:	
  1122  007C                     	ds	1
  1123                           
  1124                           	psect	bssBANK0
  1125  0020                     __pbssBANK0:	
  1126  0020                     _Si4355Cmd:	
  1127  0020                     	ds	16
  1128  0030                     _counter:	
  1129  0030                     	ds	2
  1130  0032                     _STATE:	
  1131  0032                     	ds	1
  1132  0033                     _dummy:	
  1133  0033                     	ds	1
  1134  0034                     _radioCmd:	
  1135  0034                     	ds	16
  1136  0044                     _RadioPacket:	
  1137  0044                     	ds	7
  1138                           
  1139                           	psect	dataBANK0
  1140  005E                     __pdataBANK0:	
  1141  005E                     _pRadioConfiguration:	
  1142  005E                     	ds	1
  1143  005F                     _RadioConfiguration:	
  1144  005F                     	ds	7
  1145                           
  1146                           	psect	inittext
  1147  03A9                     init_ram:	
  1148  03A9  00FE               	movwf	126
  1149  03AA                     initloop:	
  1150  03AA  0012               	moviw fsr0++
  1151  03AB  001E               	movwi fsr1++
  1152  03AC  0BFE               	decfsz	126,f
  1153  03AD  2BAA               	goto	initloop
  1154  03AE  3400               	retlw	0
  1155                           
  1156                           	psect	clrtext
  1157  03AF                     clear_ram0:	
  1158                           ;	Called with FSR0 containing the base address, and
  1159                           ;	WREG with the size to clear
  1160                           
  1161  03AF  0064               	clrwdt	;clear the watchdog before getting into this loop
  1162  03B0                     clrloop0:	
  1163  03B0  0180               	clrf	0	;clear RAM location pointed to by FSR
  1164  03B1  3101               	addfsr 0,1
  1165  03B2  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1166  03B3  2BB0               	goto	clrloop0	;have we reached the end yet?
  1167  03B4  3400               	retlw	0	;all done for this memory range, return
  1168                           
  1169                           	psect	cstackCOMMON
  1170  0070                     __pcstackCOMMON:	
  1171  0070                     ?_SPI_WriteByte:	
  1172  0070                     ?_SPI_ReadByte:	
  1173                           ; 1 bytes @ 0x0
  1174                           
  1175  0070                     ?_Radio_Init:	
  1176                           ; 1 bytes @ 0x0
  1177                           
  1178  0070                     ?_Radio_StartRX:	
  1179                           ; 1 bytes @ 0x0
  1180                           
  1181  0070                     ?_si4355_fifo_info:	
  1182                           ; 1 bytes @ 0x0
  1183                           
  1184  0070                     ?_Radio_CheckReceived:	
  1185                           ; 1 bytes @ 0x0
  1186                           
  1187  0070                     ?_si4355_reset:	
  1188                           ; 1 bytes @ 0x0
  1189                           
  1190  0070                     ?_radio_comm_PollCTS:	
  1191                           ; 1 bytes @ 0x0
  1192                           
  1193  0070                     ?_SPI_Init:	
  1194                           ; 1 bytes @ 0x0
  1195                           
  1196  0070                     ?_main:	
  1197                           ; 1 bytes @ 0x0
  1198                           
  1199  0070                     ?_Timer0_ISR:	
  1200                           ; 1 bytes @ 0x0
  1201                           
  1202  0070                     ??_Timer0_ISR:	
  1203                           ; 1 bytes @ 0x0
  1204                           
  1205  0070                     ?_Radio_PowerUp:	
  1206                           ; 1 bytes @ 0x0
  1207                           
  1208                           
  1209                           ; 1 bytes @ 0x0
  1210  0070                     	ds	1
  1211  0071                     ??_SPI_WriteByte:	
  1212  0071                     ??_SPI_ReadByte:	
  1213                           ; 1 bytes @ 0x1
  1214                           
  1215  0071                     ??_si4355_reset:	
  1216                           ; 1 bytes @ 0x1
  1217                           
  1218  0071                     ??_SPI_Init:	
  1219                           ; 1 bytes @ 0x1
  1220                           
  1221                           
  1222                           ; 1 bytes @ 0x1
  1223  0071                     	ds	1
  1224  0072                     SPI_WriteByte@data:	
  1225  0072                     SPI_ReadByte@data:	
  1226                           ; 1 bytes @ 0x2
  1227                           
  1228                           
  1229                           ; 1 bytes @ 0x2
  1230  0072                     	ds	1
  1231  0073                     ?_SPI_WriteBytes:	
  1232  0073                     ?_SPI_ReadBytes:	
  1233                           ; 1 bytes @ 0x3
  1234                           
  1235  0073                     SPI_WriteBytes@data:	
  1236                           ; 1 bytes @ 0x3
  1237                           
  1238  0073                     SPI_ReadBytes@data:	
  1239                           ; 1 bytes @ 0x3
  1240                           
  1241                           
  1242                           ; 1 bytes @ 0x3
  1243  0073                     	ds	1
  1244  0074                     ??_SPI_WriteBytes:	
  1245  0074                     ??_SPI_ReadBytes:	
  1246                           ; 1 bytes @ 0x4
  1247                           
  1248                           
  1249                           ; 1 bytes @ 0x4
  1250  0074                     	ds	1
  1251  0075                     SPI_WriteBytes@len:	
  1252  0075                     SPI_ReadBytes@len:	
  1253                           ; 1 bytes @ 0x5
  1254                           
  1255                           
  1256                           ; 1 bytes @ 0x5
  1257  0075                     	ds	1
  1258  0076                     ?_radio_comm_GetResp:	
  1259  0076                     radio_comm_GetResp@pData:	
  1260                           ; 1 bytes @ 0x6
  1261                           
  1262                           
  1263                           ; 1 bytes @ 0x6
  1264  0076                     	ds	1
  1265  0077                     ??_radio_comm_GetResp:	
  1266                           
  1267                           ; 1 bytes @ 0x7
  1268  0077                     	ds	1
  1269  0078                     radio_comm_GetResp@byteCount:	
  1270                           
  1271                           ; 1 bytes @ 0x8
  1272  0078                     	ds	1
  1273  0079                     radio_comm_GetResp@errCnt:	
  1274                           
  1275                           ; 2 bytes @ 0x9
  1276  0079                     	ds	2
  1277  007B                     ??_radio_comm_PollCTS:	
  1278  007B                     ?_radio_comm_SendCmd:	
  1279                           ; 1 bytes @ 0xB
  1280                           
  1281  007B                     ??_radio_comm_ReadData:	
  1282                           ; 1 bytes @ 0xB
  1283                           
  1284  007B                     radio_comm_SendCmd@pData:	
  1285                           ; 1 bytes @ 0xB
  1286                           
  1287                           
  1288                           ; 1 bytes @ 0xB
  1289  007B                     	ds	1
  1290  007C                     ??_Radio_Init:	
  1291                           
  1292                           	psect	cstackBANK0
  1293  004B                     __pcstackBANK0:	
  1294                           ; 1 bytes @ 0xC
  1295                           
  1296  004B                     ??_radio_comm_SendCmd:	
  1297  004B                     ?_radio_comm_ReadData:	
  1298                           ; 1 bytes @ 0x0
  1299                           
  1300  004B                     ??_Radio_PowerUp:	
  1301                           ; 1 bytes @ 0x0
  1302                           
  1303  004B                     radio_comm_ReadData@pollCts:	
  1304                           ; 1 bytes @ 0x0
  1305                           
  1306                           
  1307                           ; 1 bytes @ 0x0
  1308  004B                     	ds	1
  1309  004C                     radio_comm_SendCmd@byteCount:	
  1310  004C                     radio_comm_ReadData@byteCount:	
  1311                           ; 1 bytes @ 0x1
  1312                           
  1313                           
  1314                           ; 1 bytes @ 0x1
  1315  004C                     	ds	1
  1316  004D                     ?_si4355_start_rx:	
  1317  004D                     ?_radio_comm_SendCmdGetResp:	
  1318                           ; 1 bytes @ 0x2
  1319                           
  1320  004D                     si4355_start_rx@CONDITION:	
  1321                           ; 1 bytes @ 0x2
  1322                           
  1323  004D                     radio_comm_SendCmdGetResp@pCmdData:	
  1324                           ; 1 bytes @ 0x2
  1325                           
  1326  004D                     radio_comm_ReadData@pData:	
  1327                           ; 1 bytes @ 0x2
  1328                           
  1329  004D                     Radio_PowerUp@wDelay:	
  1330                           ; 1 bytes @ 0x2
  1331                           
  1332                           
  1333                           ; 2 bytes @ 0x2
  1334  004D                     	ds	1
  1335  004E                     radio_comm_SendCmdGetResp@respByteCount:	
  1336  004E                     radio_comm_ReadData@cmd:	
  1337                           ; 1 bytes @ 0x3
  1338                           
  1339  004E                     si4355_start_rx@RX_LEN:	
  1340                           ; 1 bytes @ 0x3
  1341                           
  1342                           
  1343                           ; 2 bytes @ 0x3
  1344  004E                     	ds	1
  1345  004F                     ?_si4355_read_rx_fifo:	
  1346  004F                     si4355_read_rx_fifo@pRxData:	
  1347                           ; 1 bytes @ 0x4
  1348                           
  1349  004F                     radio_comm_SendCmdGetResp@pRespData:	
  1350                           ; 1 bytes @ 0x4
  1351                           
  1352                           
  1353                           ; 1 bytes @ 0x4
  1354  004F                     	ds	1
  1355  0050                     ??_si4355_read_rx_fifo:	
  1356  0050                     ??_radio_comm_SendCmdGetResp:	
  1357                           ; 1 bytes @ 0x5
  1358                           
  1359  0050                     si4355_start_rx@NEXT_STATE1:	
  1360                           ; 1 bytes @ 0x5
  1361                           
  1362                           
  1363                           ; 1 bytes @ 0x5
  1364  0050                     	ds	1
  1365  0051                     si4355_start_rx@NEXT_STATE2:	
  1366  0051                     radio_comm_SendCmdGetResp@cmdByteCount:	
  1367                           ; 1 bytes @ 0x6
  1368                           
  1369                           
  1370                           ; 1 bytes @ 0x6
  1371  0051                     	ds	1
  1372  0052                     ??_si4355_fifo_info:	
  1373  0052                     ?_si4355_get_int_status:	
  1374                           ; 1 bytes @ 0x7
  1375                           
  1376  0052                     si4355_get_int_status@MODEM_CLR_PEND:	
  1377                           ; 1 bytes @ 0x7
  1378                           
  1379  0052                     si4355_start_rx@NEXT_STATE3:	
  1380                           ; 1 bytes @ 0x7
  1381                           
  1382  0052                     si4355_read_rx_fifo@numBytes:	
  1383                           ; 1 bytes @ 0x7
  1384                           
  1385                           
  1386                           ; 1 bytes @ 0x7
  1387  0052                     	ds	1
  1388  0053                     ??_si4355_start_rx:	
  1389  0053                     si4355_get_int_status@CHIP_CLR_PEND:	
  1390                           ; 1 bytes @ 0x8
  1391                           
  1392                           
  1393                           ; 1 bytes @ 0x8
  1394  0053                     	ds	1
  1395  0054                     ??_si4355_get_int_status:	
  1396  0054                     si4355_start_rx@CHANNEL:	
  1397                           ; 1 bytes @ 0x9
  1398                           
  1399                           
  1400                           ; 1 bytes @ 0x9
  1401  0054                     	ds	1
  1402  0055                     si4355_fifo_info@FIFO:	
  1403                           
  1404                           ; 1 bytes @ 0xA
  1405  0055                     	ds	2
  1406  0057                     si4355_get_int_status@PH_CLR_PEND:	
  1407                           
  1408                           ; 1 bytes @ 0xC
  1409  0057                     	ds	1
  1410  0058                     ??_Radio_StartRX:	
  1411  0058                     ??_Radio_CheckReceived:	
  1412                           ; 1 bytes @ 0xD
  1413                           
  1414  0058                     ?_si4355_configuration_init:	
  1415                           ; 1 bytes @ 0xD
  1416                           
  1417  0058                     si4355_configuration_init@pSetPropCmd:	
  1418                           ; 1 bytes @ 0xD
  1419                           
  1420                           
  1421                           ; 2 bytes @ 0xD
  1422  0058                     	ds	2
  1423  005A                     ??_si4355_configuration_init:	
  1424  005A                     Radio_StartRX@channel:	
  1425                           ; 1 bytes @ 0xF
  1426                           
  1427                           
  1428                           ; 1 bytes @ 0xF
  1429  005A                     	ds	1
  1430  005B                     si4355_configuration_init@col:	
  1431                           
  1432                           ; 1 bytes @ 0x10
  1433  005B                     	ds	1
  1434  005C                     si4355_configuration_init@numOfBytes:	
  1435                           
  1436                           ; 1 bytes @ 0x11
  1437  005C                     	ds	1
  1438  005D                     ??_main:	
  1439                           
  1440                           ; 1 bytes @ 0x12
  1441  005D                     	ds	1
  1442                           
  1443                           	psect	maintext
  1444  0241                     __pmaintext:	
  1445 ;;
  1446 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1447 ;;
  1448 ;; *************** function _main *****************
  1449 ;; Defined at:
  1450 ;;		line 12 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/main.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;		None
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;		None
  1455 ;; Return value:  Size  Location     Type
  1456 ;;                  1    wreg      void 
  1457 ;; Registers used:
  1458 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1459 ;; Tracked objects:
  1460 ;;		On entry : B1F/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1464 ;;      Params:         0       0       0       0
  1465 ;;      Locals:         0       0       0       0
  1466 ;;      Temps:          0       1       0       0
  1467 ;;      Totals:         0       1       0       0
  1468 ;;Total ram usage:        1 bytes
  1469 ;; Hardware stack levels required when called:   10
  1470 ;; This function calls:
  1471 ;;		_Radio_CheckReceived
  1472 ;;		_Radio_Init
  1473 ;;		_Radio_StartRX
  1474 ;;		_SPI_Init
  1475 ;;		_si4355_fifo_info
  1476 ;; This function is called by:
  1477 ;;		Startup code after reset
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           
  1482                           ;psect for function _main
  1483  0241                     _main:	
  1484                           
  1485                           ;main.c: 14: SPI_Init();
  1486                           
  1487                           ;incstack = 0
  1488                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1489  0241  3183  236A  3182   	fcall	_SPI_Init
  1490                           
  1491                           ;main.c: 16: {
  1492                           ;main.c: 17: switch( STATE )
  1493                           
  1494                           ;main.c: 15: while(1)
  1495  0244  2A5C               	goto	l1902
  1496  0245                     l1892:	
  1497                           ;main.c: 18: {
  1498                           ;main.c: 19: case STARTUP:
  1499                           
  1500                           
  1501                           ;main.c: 20: Radio_Init();
  1502  0245  3183  2302  3182   	fcall	_Radio_Init
  1503  0248                     l1894:	
  1504                           ;main.c: 21: case ARMED:
  1505                           
  1506                           
  1507                           ;main.c: 22: Radio_StartRX( 0u );
  1508  0248  3000               	movlw	0
  1509  0249  3182  22E7  3182   	fcall	_Radio_StartRX
  1510                           
  1511                           ;main.c: 24: si4355_fifo_info( 0x02 );
  1512  024C  3002               	movlw	2
  1513  024D  3182  2269  3182   	fcall	_si4355_fifo_info
  1514                           
  1515                           ;main.c: 25: STATE = RECEIVING;
  1516  0250  3002               	movlw	2
  1517  0251  0020               	movlb	0	; select bank0
  1518  0252  00DD               	movwf	??_main
  1519  0253  085D               	movf	??_main,w
  1520  0254  00B2               	movwf	_STATE
  1521                           
  1522                           ;main.c: 26: break;
  1523  0255  2A5C               	goto	l1902
  1524  0256                     l1900:	
  1525                           ;main.c: 27: case RECEIVING:
  1526                           
  1527                           
  1528                           ;main.c: 28: if( Radio_CheckReceived() );
  1529  0256  3183  231A  3182   	fcall	_Radio_CheckReceived
  1530                           
  1531                           ;main.c: 29: STATE = ARMED;
  1532  0259  0020               	movlb	0	; select bank0
  1533  025A                     l96:	
  1534                           ;main.c: 31: default:
  1535                           
  1536                           ;main.c: 30: break;
  1537                           
  1538                           
  1539                           ;main.c: 32: STATE = ARMED;
  1540  025A  01B2               	clrf	_STATE
  1541  025B  0AB2               	incf	_STATE,f
  1542  025C                     l1902:	
  1543                           ;main.c: 33: }
  1544                           
  1545  025C  0020               	movlb	0	; select bank0
  1546  025D  0832               	movf	_STATE,w
  1547                           
  1548                           ; Switch size 1, requested type "space"
  1549                           ; Number of cases is 3, Range of values is 0 to 2
  1550                           ; switch strategies available:
  1551                           ; Name         Instructions Cycles
  1552                           ; simple_byte           10     6 (average)
  1553                           ; direct_byte           12     6 (fixed)
  1554                           ; jumptable            260     6 (fixed)
  1555                           ;	Chosen strategy is simple_byte
  1556  025E  3A00               	xorlw	0	; case 0
  1557  025F  1903               	skipnz
  1558  0260  2A45               	goto	l1892
  1559  0261  3A01               	xorlw	1	; case 1
  1560  0262  1903               	skipnz
  1561  0263  2A48               	goto	l1894
  1562  0264  3A03               	xorlw	3	; case 2
  1563  0265  1903               	skipnz
  1564  0266  2A56               	goto	l1900
  1565  0267  2A5A               	goto	l96
  1566  0268  2A5C               	goto	l1902
  1567  0269                     __end_of_main:	
  1568                           ;main.c: 34: }
  1569                           ;main.c: 35: return;
  1570                           
  1571                           
  1572                           	psect	text1
  1573  0269                     __ptext1:	
  1574 ;; *************** function _si4355_fifo_info *****************
  1575 ;; Defined at:
  1576 ;;		line 200 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/si4355.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;  FIFO            1    wreg     unsigned char 
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;  FIFO            1   10[BANK0 ] unsigned char 
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  1    wreg      void 
  1583 ;; Registers used:
  1584 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1590 ;;      Params:         0       0       0       0
  1591 ;;      Locals:         0       1       0       0
  1592 ;;      Temps:          0       3       0       0
  1593 ;;      Totals:         0       4       0       0
  1594 ;;Total ram usage:        4 bytes
  1595 ;; Hardware stack levels used:    1
  1596 ;; Hardware stack levels required when called:    7
  1597 ;; This function calls:
  1598 ;;		_radio_comm_SendCmdGetResp
  1599 ;; This function is called by:
  1600 ;;		_main
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           
  1605                           ;psect for function _si4355_fifo_info
  1606  0269                     _si4355_fifo_info:	
  1607                           
  1608                           ;incstack = 0
  1609                           ; Regs used in _si4355_fifo_info: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1610                           ;si4355_fifo_info@FIFO stored from wreg
  1611  0269  0020               	movlb	0	; select bank0
  1612  026A  00D5               	movwf	si4355_fifo_info@FIFO
  1613                           
  1614                           ;si4355.c: 202: radioCmd[0] = 0x15;
  1615  026B  3015               	movlw	21
  1616  026C  00D2               	movwf	??_si4355_fifo_info
  1617  026D  0852               	movf	??_si4355_fifo_info,w
  1618  026E  00B4               	movwf	_radioCmd
  1619                           
  1620                           ;si4355.c: 203: radioCmd[1] = FIFO;
  1621  026F  0855               	movf	si4355_fifo_info@FIFO,w
  1622  0270  00D2               	movwf	??_si4355_fifo_info
  1623  0271  0852               	movf	??_si4355_fifo_info,w
  1624  0272  00B5               	movwf	_radioCmd+1
  1625                           
  1626                           ;si4355.c: 205: radio_comm_SendCmdGetResp( 2,
  1627                           ;si4355.c: 206: radioCmd,
  1628                           ;si4355.c: 207: 2,
  1629                           ;si4355.c: 208: radioCmd );
  1630  0273  3034               	movlw	(low (_radioCmd| 0))& (0+255)
  1631  0274  00D2               	movwf	??_si4355_fifo_info
  1632  0275  0852               	movf	??_si4355_fifo_info,w
  1633  0276  00CD               	movwf	radio_comm_SendCmdGetResp@pCmdData
  1634  0277  3002               	movlw	2
  1635  0278  00D3               	movwf	??_si4355_fifo_info+1
  1636  0279  0853               	movf	??_si4355_fifo_info+1,w
  1637  027A  00CE               	movwf	radio_comm_SendCmdGetResp@respByteCount
  1638  027B  3034               	movlw	(low (_radioCmd| 0))& (0+255)
  1639  027C  00D4               	movwf	??_si4355_fifo_info+2
  1640  027D  0854               	movf	??_si4355_fifo_info+2,w
  1641  027E  00CF               	movwf	radio_comm_SendCmdGetResp@pRespData
  1642  027F  3002               	movlw	2
  1643  0280  3183  2345         	fcall	_radio_comm_SendCmdGetResp
  1644                           
  1645                           ;si4355.c: 210: Si4355Cmd.FIFO_INFO.RX_FIFO_COUNT = radioCmd[0];
  1646  0282  0020               	movlb	0	; select bank0
  1647  0283  0834               	movf	_radioCmd,w
  1648  0284  00D2               	movwf	??_si4355_fifo_info
  1649  0285  0852               	movf	??_si4355_fifo_info,w
  1650  0286  00A0               	movwf	_Si4355Cmd
  1651                           
  1652                           ;si4355.c: 211: Si4355Cmd.FIFO_INFO.TX_FIFO_SPACE = radioCmd[1];
  1653  0287  0835               	movf	_radioCmd+1,w
  1654  0288  00D2               	movwf	??_si4355_fifo_info
  1655  0289  0852               	movf	??_si4355_fifo_info,w
  1656  028A  00A1               	movwf	_Si4355Cmd+1
  1657  028B  0008               	return
  1658  028C                     __end_of_si4355_fifo_info:	
  1659                           
  1660                           	psect	text2
  1661  036A                     __ptext2:	
  1662 ;; *************** function _SPI_Init *****************
  1663 ;; Defined at:
  1664 ;;		line 5 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/spi.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;		None
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;		None
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      void 
  1671 ;; Registers used:
  1672 ;;		None
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1678 ;;      Params:         0       0       0       0
  1679 ;;      Locals:         0       0       0       0
  1680 ;;      Temps:          0       0       0       0
  1681 ;;      Totals:         0       0       0       0
  1682 ;;Total ram usage:        0 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; Hardware stack levels required when called:    1
  1685 ;; This function calls:
  1686 ;;		Nothing
  1687 ;; This function is called by:
  1688 ;;		_main
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           
  1693                           ;psect for function _SPI_Init
  1694  036A                     _SPI_Init:	
  1695                           
  1696                           ;spi.c: 8: SSPEN = 0;
  1697                           
  1698                           ;incstack = 0
  1699                           ; Regs used in _SPI_Init: []
  1700  036A  0024               	movlb	4	; select bank4
  1701  036B  1295               	bcf	21,5	;volatile
  1702                           
  1703                           ;spi.c: 10: SDOSEL = 1;
  1704  036C  0022               	movlb	2	; select bank2
  1705  036D  171D               	bsf	29,6	;volatile
  1706                           
  1707                           ;spi.c: 11: SSSEL = 0;
  1708  036E  129D               	bcf	29,5	;volatile
  1709                           
  1710                           ;spi.c: 13: SMP = 0;
  1711  036F  0024               	movlb	4	; select bank4
  1712  0370  1394               	bcf	20,7	;volatile
  1713                           
  1714                           ;spi.c: 15: CKE = 0;
  1715  0371  1314               	bcf	20,6	;volatile
  1716                           
  1717                           ;spi.c: 17: CKP = 0;
  1718  0372  1215               	bcf	21,4	;volatile
  1719                           
  1720                           ;spi.c: 19: SSPM0 = 0;
  1721  0373  1015               	bcf	21,0	;volatile
  1722                           
  1723                           ;spi.c: 20: SSPM1 = 0;
  1724  0374  1095               	bcf	21,1	;volatile
  1725                           
  1726                           ;spi.c: 21: SSPM2 = 0;
  1727  0375  1115               	bcf	21,2	;volatile
  1728                           
  1729                           ;spi.c: 22: SSPM3 = 0;
  1730  0376  1195               	bcf	21,3	;volatile
  1731                           
  1732                           ;spi.c: 26: SSPEN = 1;
  1733  0377  1695               	bsf	21,5	;volatile
  1734  0378  0008               	return
  1735  0379                     __end_of_SPI_Init:	
  1736                           
  1737                           	psect	text3
  1738  02E7                     __ptext3:	
  1739 ;; *************** function _Radio_StartRX *****************
  1740 ;; Defined at:
  1741 ;;		line 57 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/radio.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;  channel         1    wreg     unsigned char 
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;  channel         1   15[BANK0 ] unsigned char 
  1746 ;; Return value:  Size  Location     Type
  1747 ;;                  1    wreg      void 
  1748 ;; Registers used:
  1749 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1750 ;; Tracked objects:
  1751 ;;		On entry : 0/0
  1752 ;;		On exit  : 0/0
  1753 ;;		Unchanged: 0/0
  1754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1755 ;;      Params:         0       0       0       0
  1756 ;;      Locals:         0       1       0       0
  1757 ;;      Temps:          0       2       0       0
  1758 ;;      Totals:         0       3       0       0
  1759 ;;Total ram usage:        3 bytes
  1760 ;; Hardware stack levels used:    1
  1761 ;; Hardware stack levels required when called:    8
  1762 ;; This function calls:
  1763 ;;		_si4355_get_int_status
  1764 ;;		_si4355_start_rx
  1765 ;; This function is called by:
  1766 ;;		_main
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           
  1771                           ;psect for function _Radio_StartRX
  1772  02E7                     _Radio_StartRX:	
  1773                           
  1774                           ;incstack = 0
  1775                           ; Regs used in _Radio_StartRX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1776                           ;Radio_StartRX@channel stored from wreg
  1777  02E7  0020               	movlb	0	; select bank0
  1778  02E8  00DA               	movwf	Radio_StartRX@channel
  1779                           
  1780                           ;radio.c: 60: si4355_get_int_status( 0u, 0u, 0u );
  1781  02E9  01D2               	clrf	si4355_get_int_status@MODEM_CLR_PEND
  1782  02EA  01D3               	clrf	si4355_get_int_status@CHIP_CLR_PEND
  1783  02EB  3000               	movlw	0
  1784  02EC  3181  219B  3182   	fcall	_si4355_get_int_status
  1785                           
  1786                           ;radio.c: 63: si4355_start_rx( channel, 0u, 0u,
  1787                           ;radio.c: 64: 8,
  1788                           ;radio.c: 65: 1,
  1789                           ;radio.c: 66: 8 );
  1790  02EF  0020               	movlb	0	; select bank0
  1791  02F0  01CD               	clrf	si4355_start_rx@CONDITION
  1792  02F1  3000               	movlw	0
  1793  02F2  00CE               	movwf	si4355_start_rx@RX_LEN
  1794  02F3  00CF               	movwf	si4355_start_rx@RX_LEN+1
  1795  02F4  3008               	movlw	8
  1796  02F5  00D8               	movwf	??_Radio_StartRX
  1797  02F6  0858               	movf	??_Radio_StartRX,w
  1798  02F7  00D0               	movwf	si4355_start_rx@NEXT_STATE1
  1799  02F8  01D1               	clrf	si4355_start_rx@NEXT_STATE2
  1800  02F9  0AD1               	incf	si4355_start_rx@NEXT_STATE2,f
  1801  02FA  3008               	movlw	8
  1802  02FB  00D9               	movwf	??_Radio_StartRX+1
  1803  02FC  0859               	movf	??_Radio_StartRX+1,w
  1804  02FD  00D2               	movwf	si4355_start_rx@NEXT_STATE3
  1805  02FE  085A               	movf	Radio_StartRX@channel,w
  1806  02FF  3182  2217         	fcall	_si4355_start_rx
  1807  0301  0008               	return
  1808  0302                     __end_of_Radio_StartRX:	
  1809                           
  1810                           	psect	text4
  1811  0217                     __ptext4:	
  1812 ;; *************** function _si4355_start_rx *****************
  1813 ;; Defined at:
  1814 ;;		line 261 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/si4355.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;  CHANNEL         1    wreg     unsigned char 
  1817 ;;  CONDITION       1    2[BANK0 ] unsigned char 
  1818 ;;  RX_LEN          2    3[BANK0 ] unsigned int 
  1819 ;;  NEXT_STATE1     1    5[BANK0 ] unsigned char 
  1820 ;;  NEXT_STATE2     1    6[BANK0 ] unsigned char 
  1821 ;;  NEXT_STATE3     1    7[BANK0 ] unsigned char 
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;  CHANNEL         1    9[BANK0 ] unsigned char 
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  1    wreg      void 
  1826 ;; Registers used:
  1827 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1833 ;;      Params:         0       6       0       0
  1834 ;;      Locals:         0       1       0       0
  1835 ;;      Temps:          0       1       0       0
  1836 ;;      Totals:         0       8       0       0
  1837 ;;Total ram usage:        8 bytes
  1838 ;; Hardware stack levels used:    1
  1839 ;; Hardware stack levels required when called:    6
  1840 ;; This function calls:
  1841 ;;		_radio_comm_SendCmd
  1842 ;; This function is called by:
  1843 ;;		_Radio_StartRX
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           
  1848                           ;psect for function _si4355_start_rx
  1849  0217                     _si4355_start_rx:	
  1850                           
  1851                           ;incstack = 0
  1852                           ; Regs used in _si4355_start_rx: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1853                           ;si4355_start_rx@CHANNEL stored from wreg
  1854  0217  0020               	movlb	0	; select bank0
  1855  0218  00D4               	movwf	si4355_start_rx@CHANNEL
  1856                           
  1857                           ;si4355.c: 263: radioCmd[0] = 0x32;
  1858  0219  3032               	movlw	50
  1859  021A  00D3               	movwf	??_si4355_start_rx
  1860  021B  0853               	movf	??_si4355_start_rx,w
  1861  021C  00B4               	movwf	_radioCmd
  1862                           
  1863                           ;si4355.c: 264: radioCmd[1] = CHANNEL;
  1864  021D  0854               	movf	si4355_start_rx@CHANNEL,w
  1865  021E  00D3               	movwf	??_si4355_start_rx
  1866  021F  0853               	movf	??_si4355_start_rx,w
  1867  0220  00B5               	movwf	_radioCmd+1
  1868                           
  1869                           ;si4355.c: 265: radioCmd[2] = CONDITION;
  1870  0221  084D               	movf	si4355_start_rx@CONDITION,w
  1871  0222  00D3               	movwf	??_si4355_start_rx
  1872  0223  0853               	movf	??_si4355_start_rx,w
  1873  0224  00B6               	movwf	_radioCmd+2
  1874                           
  1875                           ;si4355.c: 266: radioCmd[3] = ( U8 )( RX_LEN >> 8 );
  1876  0225  084F               	movf	si4355_start_rx@RX_LEN+1,w
  1877  0226  00D3               	movwf	??_si4355_start_rx
  1878  0227  0853               	movf	??_si4355_start_rx,w
  1879  0228  00B7               	movwf	_radioCmd+3
  1880                           
  1881                           ;si4355.c: 267: radioCmd[4] = ( U8 )( RX_LEN );
  1882  0229  084E               	movf	si4355_start_rx@RX_LEN,w
  1883  022A  00D3               	movwf	??_si4355_start_rx
  1884  022B  0853               	movf	??_si4355_start_rx,w
  1885  022C  00B8               	movwf	_radioCmd+4
  1886                           
  1887                           ;si4355.c: 268: radioCmd[5] = NEXT_STATE1;
  1888  022D  0850               	movf	si4355_start_rx@NEXT_STATE1,w
  1889  022E  00D3               	movwf	??_si4355_start_rx
  1890  022F  0853               	movf	??_si4355_start_rx,w
  1891  0230  00B9               	movwf	_radioCmd+5
  1892                           
  1893                           ;si4355.c: 269: radioCmd[6] = NEXT_STATE2;
  1894  0231  0851               	movf	si4355_start_rx@NEXT_STATE2,w
  1895  0232  00D3               	movwf	??_si4355_start_rx
  1896  0233  0853               	movf	??_si4355_start_rx,w
  1897  0234  00BA               	movwf	_radioCmd+6
  1898                           
  1899                           ;si4355.c: 270: radioCmd[7] = NEXT_STATE3;
  1900  0235  0852               	movf	si4355_start_rx@NEXT_STATE3,w
  1901  0236  00D3               	movwf	??_si4355_start_rx
  1902  0237  0853               	movf	??_si4355_start_rx,w
  1903  0238  00BB               	movwf	_radioCmd+7
  1904                           
  1905                           ;si4355.c: 272: radio_comm_SendCmd( 8, radioCmd );
  1906  0239  3034               	movlw	(low (_radioCmd| 0))& (0+255)
  1907  023A  00D3               	movwf	??_si4355_start_rx
  1908  023B  0853               	movf	??_si4355_start_rx,w
  1909  023C  00FB               	movwf	radio_comm_SendCmd@pData
  1910  023D  3008               	movlw	8
  1911  023E  3182  22CA         	fcall	_radio_comm_SendCmd
  1912  0240  0008               	return
  1913  0241                     __end_of_si4355_start_rx:	
  1914                           
  1915                           	psect	text5
  1916  0302                     __ptext5:	
  1917 ;; *************** function _Radio_Init *****************
  1918 ;; Defined at:
  1919 ;;		line 23 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/radio.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;		None
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;		None
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      void 
  1926 ;; Registers used:
  1927 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1933 ;;      Params:         0       0       0       0
  1934 ;;      Locals:         0       0       0       0
  1935 ;;      Temps:          0       0       0       0
  1936 ;;      Totals:         0       0       0       0
  1937 ;;Total ram usage:        0 bytes
  1938 ;; Hardware stack levels used:    1
  1939 ;; Hardware stack levels required when called:    9
  1940 ;; This function calls:
  1941 ;;		_Radio_PowerUp
  1942 ;;		_si4355_configuration_init
  1943 ;;		_si4355_get_int_status
  1944 ;; This function is called by:
  1945 ;;		_main
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           
  1950                           ;psect for function _Radio_Init
  1951  0302                     _Radio_Init:	
  1952                           
  1953                           ;radio.c: 26: Radio_PowerUp();
  1954                           
  1955                           ;incstack = 0
  1956                           ; Regs used in _Radio_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1957  0302  3182  228C  3183   	fcall	_Radio_PowerUp
  1958                           
  1959                           ;radio.c: 29: while( SUCCESS != si4355_configuration_init( pRadioConfiguration->Radio_Co
      +                          nfigurationArray ) )
  1960  0305  0020               	movlb	0	; select bank0
  1961  0306  085E               	movf	_pRadioConfiguration,w
  1962  0307  0086               	movwf	6
  1963  0308  0187               	clrf	7
  1964  0309  3F40               	moviw [0]fsr1
  1965  030A  00D8               	movwf	si4355_configuration_init@pSetPropCmd
  1966  030B  3F41               	moviw [1]fsr1
  1967  030C  00D9               	movwf	si4355_configuration_init@pSetPropCmd+1
  1968  030D  3181  2145  3183   	fcall	_si4355_configuration_init
  1969  0310  3A00               	xorlw	0
  1970  0311  1D03               	skipz
  1971  0312  2B02               	goto	_Radio_Init
  1972                           
  1973                           ;radio.c: 33: }
  1974                           ;radio.c: 36: si4355_get_int_status(0u, 0u, 0u);
  1975                           
  1976                           ;radio.c: 30: {
  1977                           ;radio.c: 32: Radio_PowerUp();
  1978  0313  0020               	movlb	0	; select bank0
  1979  0314  01D2               	clrf	si4355_get_int_status@MODEM_CLR_PEND
  1980  0315  01D3               	clrf	si4355_get_int_status@CHIP_CLR_PEND
  1981  0316  3000               	movlw	0
  1982  0317  3181  219B         	fcall	_si4355_get_int_status
  1983  0319  0008               	return
  1984  031A                     __end_of_Radio_Init:	
  1985                           
  1986                           	psect	text6
  1987  0145                     __ptext6:	
  1988 ;; *************** function _si4355_configuration_init *****************
  1989 ;; Defined at:
  1990 ;;		line 13 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/si4355.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;  pSetPropCmd     2   13[BANK0 ] PTR unsigned char 
  1993 ;;		 -> Radio_Configuration_Data_Array(274), 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;  numOfBytes      1   17[BANK0 ] unsigned char 
  1996 ;;  col             1   16[BANK0 ] unsigned char 
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  1    wreg      unsigned char 
  1999 ;; Registers used:
  2000 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2006 ;;      Params:         0       2       0       0
  2007 ;;      Locals:         0       2       0       0
  2008 ;;      Temps:          0       1       0       0
  2009 ;;      Totals:         0       5       0       0
  2010 ;;Total ram usage:        5 bytes
  2011 ;; Hardware stack levels used:    1
  2012 ;; Hardware stack levels required when called:    8
  2013 ;; This function calls:
  2014 ;;		_radio_comm_SendCmdGetResp
  2015 ;;		_si4355_get_int_status
  2016 ;; This function is called by:
  2017 ;;		_Radio_Init
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           
  2022                           ;psect for function _si4355_configuration_init
  2023  0145                     _si4355_configuration_init:	
  2024                           
  2025                           ;si4355.c: 15: U8 col = 0;
  2026                           
  2027                           ;incstack = 0
  2028                           ; Regs used in _si4355_configuration_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2029  0145  0020               	movlb	0	; select bank0
  2030  0146  01DB               	clrf	si4355_configuration_init@col
  2031                           
  2032                           ;si4355.c: 16: U8 numOfBytes = 0;
  2033  0147  01DC               	clrf	si4355_configuration_init@numOfBytes
  2034  0148                     l1834:	
  2035                           ;si4355.c: 19: while ( *pSetPropCmd != 0x00 )
  2036                           
  2037  0148  0858               	movf	si4355_configuration_init@pSetPropCmd,w
  2038  0149  0084               	movwf	4
  2039  014A  0859               	movf	si4355_configuration_init@pSetPropCmd+1,w
  2040  014B  0085               	movwf	5
  2041  014C  0012               	moviw fsr0++
  2042  014D  1903               	btfsc	3,2
  2043  014E  2999               	goto	l1836
  2044                           
  2045                           ;si4355.c: 20: {
  2046                           ;si4355.c: 26: numOfBytes = *pSetPropCmd++;
  2047  014F  0858               	movf	si4355_configuration_init@pSetPropCmd,w
  2048  0150  0084               	movwf	4
  2049  0151  0859               	movf	si4355_configuration_init@pSetPropCmd+1,w
  2050  0152  0085               	movwf	5
  2051  0153  0800               	movf	0,w	;code access
  2052  0154  00DA               	movwf	??_si4355_configuration_init
  2053  0155  085A               	movf	??_si4355_configuration_init,w
  2054  0156  00DC               	movwf	si4355_configuration_init@numOfBytes
  2055  0157  3001               	movlw	1
  2056  0158  07D8               	addwf	si4355_configuration_init@pSetPropCmd,f
  2057  0159  3000               	movlw	0
  2058  015A  3DD9               	addwfc	si4355_configuration_init@pSetPropCmd+1,f
  2059                           
  2060                           ;si4355.c: 28: if ( numOfBytes > 16u )
  2061  015B  3011               	movlw	17
  2062  015C  025C               	subwf	si4355_configuration_init@numOfBytes,w
  2063  015D  1C03               	skipc
  2064  015E  2961               	goto	l1810
  2065                           
  2066                           ;si4355.c: 29: {
  2067                           ;si4355.c: 31: return COMMAND_ERROR;
  2068  015F  3004               	movlw	4
  2069  0160  0008               	return
  2070  0161                     l1810:	
  2071                           
  2072                           ;si4355.c: 32: }
  2073                           ;si4355.c: 34: for ( col = 0u; col < numOfBytes; col++ )
  2074  0161  01DB               	clrf	si4355_configuration_init@col
  2075  0162                     l1818:	
  2076  0162  085C               	movf	si4355_configuration_init@numOfBytes,w
  2077  0163  025B               	subwf	si4355_configuration_init@col,w
  2078  0164  1803               	btfsc	3,0
  2079  0165  297B               	goto	l1820
  2080                           
  2081                           ;si4355.c: 35: {
  2082                           ;si4355.c: 36: radioCmd[col] = *pSetPropCmd;
  2083  0166  0858               	movf	si4355_configuration_init@pSetPropCmd,w
  2084  0167  0084               	movwf	4
  2085  0168  0859               	movf	si4355_configuration_init@pSetPropCmd+1,w
  2086  0169  0085               	movwf	5
  2087  016A  0800               	movf	0,w	;code access
  2088  016B  00DA               	movwf	??_si4355_configuration_init
  2089  016C  085B               	movf	si4355_configuration_init@col,w
  2090  016D  3E34               	addlw	(low (_radioCmd| 0))& (0+255)
  2091  016E  0086               	movwf	6
  2092  016F  0187               	clrf	7
  2093  0170  085A               	movf	??_si4355_configuration_init,w
  2094  0171  0081               	movwf	1
  2095                           
  2096                           ;si4355.c: 37: pSetPropCmd++;
  2097  0172  3001               	movlw	1
  2098  0173  07D8               	addwf	si4355_configuration_init@pSetPropCmd,f
  2099  0174  3000               	movlw	0
  2100  0175  3DD9               	addwfc	si4355_configuration_init@pSetPropCmd+1,f
  2101  0176  3001               	movlw	1
  2102  0177  00DA               	movwf	??_si4355_configuration_init
  2103  0178  085A               	movf	??_si4355_configuration_init,w
  2104  0179  07DB               	addwf	si4355_configuration_init@col,f
  2105  017A  2962               	goto	l1818
  2106  017B                     l1820:	
  2107                           
  2108                           ;si4355.c: 38: }
  2109                           ;si4355.c: 40: if ( !radio_comm_SendCmdGetResp( numOfBytes, radioCmd, 0, 0 ) )
  2110  017B  3034               	movlw	(low (_radioCmd| 0))& (0+255)
  2111  017C  00DA               	movwf	??_si4355_configuration_init
  2112  017D  085A               	movf	??_si4355_configuration_init,w
  2113  017E  00CD               	movwf	radio_comm_SendCmdGetResp@pCmdData
  2114  017F  01CE               	clrf	radio_comm_SendCmdGetResp@respByteCount
  2115  0180  01CF               	clrf	radio_comm_SendCmdGetResp@pRespData
  2116  0181  085C               	movf	si4355_configuration_init@numOfBytes,w
  2117  0182  3183  2345  3181   	fcall	_radio_comm_SendCmdGetResp
  2118  0185  3A00               	xorlw	0
  2119  0186  1D03               	skipz
  2120  0187  298A               	goto	l183
  2121                           
  2122                           ;si4355.c: 41: {
  2123                           ;si4355.c: 43: return CTS_TIMEOUT;
  2124  0188  3002               	movlw	2
  2125  0189  0008               	return
  2126  018A                     l183:	
  2127                           
  2128                           ;si4355.c: 44: }
  2129                           ;si4355.c: 46: if( !RA3 )
  2130  018A  0020               	movlb	0	; select bank0
  2131  018B  198C               	btfsc	12,3	;volatile
  2132  018C  2948               	goto	l1834
  2133                           
  2134                           ;si4355.c: 47: {
  2135                           ;si4355.c: 49: si4355_get_int_status( 0u, 0u, 0u );
  2136  018D  01D2               	clrf	si4355_get_int_status@MODEM_CLR_PEND
  2137  018E  01D3               	clrf	si4355_get_int_status@CHIP_CLR_PEND
  2138  018F  3000               	movlw	0
  2139  0190  3181  219B  3181   	fcall	_si4355_get_int_status
  2140                           
  2141                           ;si4355.c: 50: if ( Si4355Cmd.GET_INT_STATUS.CHIP_PEND )
  2142  0193  0020               	movlb	0	; select bank0
  2143  0194  0826               	movf	_Si4355Cmd+6,w
  2144  0195  1903               	btfsc	3,2
  2145  0196  2948               	goto	l1834
  2146                           
  2147                           ;si4355.c: 51: {
  2148                           ;si4355.c: 52: return COMMAND_ERROR;
  2149  0197  3004               	movlw	4
  2150  0198  0008               	return
  2151  0199                     l1836:	
  2152                           
  2153                           ;si4355.c: 53: }
  2154                           ;si4355.c: 54: }
  2155                           ;si4355.c: 55: }
  2156                           ;si4355.c: 56: return SUCCESS;
  2157  0199  3000               	movlw	0
  2158  019A  0008               	return
  2159  019B                     __end_of_si4355_configuration_init:	
  2160                           
  2161                           	psect	text7
  2162  028C                     __ptext7:	
  2163 ;; *************** function _Radio_PowerUp *****************
  2164 ;; Defined at:
  2165 ;;		line 14 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/radio.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;		None
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;  wDelay          2    2[BANK0 ] unsigned int 
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  1    wreg      void 
  2172 ;; Registers used:
  2173 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2179 ;;      Params:         0       0       0       0
  2180 ;;      Locals:         0       2       0       0
  2181 ;;      Temps:          0       2       0       0
  2182 ;;      Totals:         0       4       0       0
  2183 ;;Total ram usage:        4 bytes
  2184 ;; Hardware stack levels used:    1
  2185 ;; Hardware stack levels required when called:    5
  2186 ;; This function calls:
  2187 ;;		_radio_comm_PollCTS
  2188 ;;		_si4355_reset
  2189 ;; This function is called by:
  2190 ;;		_Radio_Init
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194                           
  2195                           ;psect for function _Radio_PowerUp
  2196  028C                     _Radio_PowerUp:	
  2197                           
  2198                           ;radio.c: 16: U16 wDelay = 0u;
  2199                           
  2200                           ;incstack = 0
  2201                           ; Regs used in _Radio_PowerUp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2202  028C  0020               	movlb	0	; select bank0
  2203  028D  01CD               	clrf	Radio_PowerUp@wDelay
  2204  028E  01CE               	clrf	Radio_PowerUp@wDelay+1
  2205                           
  2206                           ;radio.c: 18: si4355_reset();
  2207  028F  3183  23BA  3182   	fcall	_si4355_reset
  2208  0292                     l1794:	
  2209                           ;radio.c: 19: for( ; wDelay < pRadioConfiguration->Radio_Delay_Cnt_After_Reset; wDelay++
      +                           );
  2210                           
  2211  0292  0020               	movlb	0	; select bank0
  2212  0293  085E               	movf	_pRadioConfiguration,w
  2213  0294  3E05               	addlw	5
  2214  0295  0086               	movwf	6
  2215  0296  0187               	clrf	7
  2216  0297  3F40               	moviw [0]fsr1
  2217  0298  00CB               	movwf	??_Radio_PowerUp
  2218  0299  3F41               	moviw [1]fsr1
  2219  029A  00CC               	movwf	??_Radio_PowerUp+1
  2220  029B  084C               	movf	??_Radio_PowerUp+1,w
  2221  029C  024E               	subwf	Radio_PowerUp@wDelay+1,w
  2222  029D  1D03               	skipz
  2223  029E  2AA1               	goto	u745
  2224  029F  084B               	movf	??_Radio_PowerUp,w
  2225  02A0  024D               	subwf	Radio_PowerUp@wDelay,w
  2226  02A1                     u745:	
  2227  02A1  1803               	btfsc	3,0
  2228  02A2  2AA9               	goto	l1796
  2229  02A3  3001               	movlw	1
  2230  02A4  0020               	movlb	0	; select bank0
  2231  02A5  07CD               	addwf	Radio_PowerUp@wDelay,f
  2232  02A6  3000               	movlw	0
  2233  02A7  3DCE               	addwfc	Radio_PowerUp@wDelay+1,f
  2234  02A8  2A92               	goto	l1794
  2235  02A9                     l1796:	
  2236                           
  2237                           ;radio.c: 20: radio_comm_PollCTS();
  2238  02A9  3183  23B5         	fcall	_radio_comm_PollCTS
  2239  02AB  0008               	return
  2240  02AC                     __end_of_Radio_PowerUp:	
  2241                           
  2242                           	psect	text8
  2243  03BA                     __ptext8:	
  2244 ;; *************** function _si4355_reset *****************
  2245 ;; Defined at:
  2246 ;;		line 59 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/si4355.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;		None
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;		None
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1    wreg      void 
  2253 ;; Registers used:
  2254 ;;		None
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2260 ;;      Params:         0       0       0       0
  2261 ;;      Locals:         0       0       0       0
  2262 ;;      Temps:          0       0       0       0
  2263 ;;      Totals:         0       0       0       0
  2264 ;;Total ram usage:        0 bytes
  2265 ;; Hardware stack levels used:    1
  2266 ;; Hardware stack levels required when called:    1
  2267 ;; This function calls:
  2268 ;;		Nothing
  2269 ;; This function is called by:
  2270 ;;		_Radio_PowerUp
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           
  2275                           ;psect for function _si4355_reset
  2276  03BA                     _si4355_reset:	
  2277                           
  2278                           ;incstack = 0
  2279                           ; Regs used in _si4355_reset: []
  2280  03BA  0008               	return
  2281  03BB                     __end_of_si4355_reset:	
  2282                           
  2283                           	psect	text9
  2284  031A                     __ptext9:	
  2285 ;; *************** function _Radio_CheckReceived *****************
  2286 ;; Defined at:
  2287 ;;		line 39 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/radio.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;		None
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;		None
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  1    wreg      unsigned char 
  2294 ;; Registers used:
  2295 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2301 ;;      Params:         0       0       0       0
  2302 ;;      Locals:         0       0       0       0
  2303 ;;      Temps:          0       1       0       0
  2304 ;;      Totals:         0       1       0       0
  2305 ;;Total ram usage:        1 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; Hardware stack levels required when called:    8
  2308 ;; This function calls:
  2309 ;;		_si4355_get_int_status
  2310 ;;		_si4355_read_rx_fifo
  2311 ;; This function is called by:
  2312 ;;		_main
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315                           
  2316                           
  2317                           ;psect for function _Radio_CheckReceived
  2318  031A                     _Radio_CheckReceived:	
  2319                           
  2320                           ;radio.c: 41: if( !RA3 )
  2321                           
  2322                           ;incstack = 0
  2323                           ; Regs used in _Radio_CheckReceived: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2324  031A  0020               	movlb	0	; select bank0
  2325  031B  198C               	btfsc	12,3	;volatile
  2326  031C  2B2F               	goto	l1886
  2327                           
  2328                           ;radio.c: 42: {
  2329                           ;radio.c: 44: si4355_get_int_status(0u, 0u, 0u);
  2330  031D  01D2               	clrf	si4355_get_int_status@MODEM_CLR_PEND
  2331  031E  01D3               	clrf	si4355_get_int_status@CHIP_CLR_PEND
  2332  031F  3000               	movlw	0
  2333  0320  3181  219B  3183   	fcall	_si4355_get_int_status
  2334                           
  2335                           ;radio.c: 47: if (Si4355Cmd.GET_INT_STATUS.PH_PEND & 0x10)
  2336  0323  0020               	movlb	0	; select bank0
  2337  0324  1E22               	btfss	_Si4355Cmd+2,4
  2338  0325  2B2F               	goto	l1886
  2339                           
  2340                           ;radio.c: 48: {
  2341                           ;radio.c: 50: si4355_read_rx_fifo( sizeof( tRadioPacket ), ( U8 * ) &RadioPacket );
  2342  0326  3044               	movlw	(low (_RadioPacket| 0))& (0+255)
  2343  0327  00D8               	movwf	??_Radio_CheckReceived
  2344  0328  0858               	movf	??_Radio_CheckReceived,w
  2345  0329  00CF               	movwf	si4355_read_rx_fifo@pRxData
  2346  032A  3007               	movlw	7
  2347  032B  3183  2379         	fcall	_si4355_read_rx_fifo
  2348                           
  2349                           ;radio.c: 51: return 1;
  2350  032D  3001               	movlw	1
  2351  032E  0008               	return
  2352  032F                     l1886:	
  2353                           
  2354                           ;radio.c: 52: }
  2355                           ;radio.c: 53: }
  2356                           ;radio.c: 54: return 0;
  2357  032F  3000               	movlw	0
  2358  0330  0008               	return
  2359  0331                     __end_of_Radio_CheckReceived:	
  2360                           
  2361                           	psect	text10
  2362  0379                     __ptext10:	
  2363 ;; *************** function _si4355_read_rx_fifo *****************
  2364 ;; Defined at:
  2365 ;;		line 360 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/si4355.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;  numBytes        1    wreg     unsigned char 
  2368 ;;  pRxData         1    4[BANK0 ] PTR unsigned char 
  2369 ;;		 -> RadioPacket(7), 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  numBytes        1    7[BANK0 ] unsigned char 
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  1    wreg      void 
  2374 ;; Registers used:
  2375 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2381 ;;      Params:         0       1       0       0
  2382 ;;      Locals:         0       1       0       0
  2383 ;;      Temps:          0       2       0       0
  2384 ;;      Totals:         0       4       0       0
  2385 ;;Total ram usage:        4 bytes
  2386 ;; Hardware stack levels used:    1
  2387 ;; Hardware stack levels required when called:    6
  2388 ;; This function calls:
  2389 ;;		_radio_comm_ReadData
  2390 ;; This function is called by:
  2391 ;;		_Radio_CheckReceived
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           
  2396                           ;psect for function _si4355_read_rx_fifo
  2397  0379                     _si4355_read_rx_fifo:	
  2398                           
  2399                           ;incstack = 0
  2400                           ; Regs used in _si4355_read_rx_fifo: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2401                           ;si4355_read_rx_fifo@numBytes stored from wreg
  2402  0379  0020               	movlb	0	; select bank0
  2403  037A  00D2               	movwf	si4355_read_rx_fifo@numBytes
  2404                           
  2405                           ;si4355.c: 362: radio_comm_ReadData( 0x77, 0, numBytes, pRxData );
  2406  037B  01CB               	clrf	radio_comm_ReadData@pollCts
  2407  037C  0852               	movf	si4355_read_rx_fifo@numBytes,w
  2408  037D  00D0               	movwf	??_si4355_read_rx_fifo
  2409  037E  0850               	movf	??_si4355_read_rx_fifo,w
  2410  037F  00CC               	movwf	radio_comm_ReadData@byteCount
  2411  0380  084F               	movf	si4355_read_rx_fifo@pRxData,w
  2412  0381  00D1               	movwf	??_si4355_read_rx_fifo+1
  2413  0382  0851               	movf	??_si4355_read_rx_fifo+1,w
  2414  0383  00CD               	movwf	radio_comm_ReadData@pData
  2415  0384  3077               	movlw	119
  2416  0385  3182  22AC         	fcall	_radio_comm_ReadData
  2417  0387  0008               	return
  2418  0388                     __end_of_si4355_read_rx_fifo:	
  2419                           
  2420                           	psect	text11
  2421  02AC                     __ptext11:	
  2422 ;; *************** function _radio_comm_ReadData *****************
  2423 ;; Defined at:
  2424 ;;		line 70 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/comm.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;  cmd             1    wreg     unsigned char 
  2427 ;;  pollCts         1    0[BANK0 ] unsigned char 
  2428 ;;  byteCount       1    1[BANK0 ] unsigned char 
  2429 ;;  pData           1    2[BANK0 ] PTR unsigned char 
  2430 ;;		 -> radioCmd(16), RadioPacket(7), 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  cmd             1    3[BANK0 ] unsigned char 
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  1    wreg      void 
  2435 ;; Registers used:
  2436 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2442 ;;      Params:         0       3       0       0
  2443 ;;      Locals:         0       1       0       0
  2444 ;;      Temps:          1       0       0       0
  2445 ;;      Totals:         1       4       0       0
  2446 ;;Total ram usage:        5 bytes
  2447 ;; Hardware stack levels used:    1
  2448 ;; Hardware stack levels required when called:    5
  2449 ;; This function calls:
  2450 ;;		_SPI_ReadBytes
  2451 ;;		_SPI_WriteByte
  2452 ;;		_radio_comm_PollCTS
  2453 ;; This function is called by:
  2454 ;;		_si4355_read_rx_fifo
  2455 ;;		_si4355_frr_a_read
  2456 ;;		_si4355_frr_b_read
  2457 ;;		_si4355_frr_c_read
  2458 ;;		_si4355_frr_d_read
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           
  2463                           ;psect for function _radio_comm_ReadData
  2464  02AC                     _radio_comm_ReadData:	
  2465                           
  2466                           ;incstack = 0
  2467                           ; Regs used in _radio_comm_ReadData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2468                           ;radio_comm_ReadData@cmd stored from wreg
  2469  02AC  0020               	movlb	0	; select bank0
  2470  02AD  00CE               	movwf	radio_comm_ReadData@cmd
  2471                           
  2472                           ;comm.c: 72: if( pollCts )
  2473  02AE  084B               	movf	radio_comm_ReadData@pollCts,w
  2474  02AF  1D03               	btfss	3,2
  2475  02B0  2AB5               	goto	l1778
  2476  02B1  2AB8               	goto	l289
  2477  02B2                     l1776:	
  2478                           ;comm.c: 73: {
  2479                           ;comm.c: 74: while( !ctsWentHigh )
  2480                           
  2481                           
  2482                           ;comm.c: 75: {
  2483                           ;comm.c: 76: radio_comm_PollCTS();
  2484  02B2  3183  23B5  3182   	fcall	_radio_comm_PollCTS
  2485  02B5                     l1778:	
  2486  02B5  087C               	movf	_ctsWentHigh,w
  2487  02B6  1903               	btfsc	3,2
  2488  02B7  2AB2               	goto	l1776
  2489  02B8                     l289:	
  2490                           
  2491                           ;comm.c: 77: }
  2492                           ;comm.c: 78: }
  2493                           ;comm.c: 79: RA5 = 0;
  2494  02B8  0020               	movlb	0	; select bank0
  2495  02B9  128C               	bcf	12,5	;volatile
  2496                           
  2497                           ;comm.c: 80: SPI_WriteByte( cmd );
  2498  02BA  084E               	movf	radio_comm_ReadData@cmd,w
  2499  02BB  3183  2388  3182   	fcall	_SPI_WriteByte
  2500                           
  2501                           ;comm.c: 81: SPI_ReadBytes( byteCount, pData );
  2502  02BE  0020               	movlb	0	; select bank0
  2503  02BF  084D               	movf	radio_comm_ReadData@pData,w
  2504  02C0  00FB               	movwf	??_radio_comm_ReadData
  2505  02C1  087B               	movf	??_radio_comm_ReadData,w
  2506  02C2  00F3               	movwf	SPI_ReadBytes@data
  2507  02C3  084C               	movf	radio_comm_ReadData@byteCount,w
  2508  02C4  3183  2331         	fcall	_SPI_ReadBytes
  2509                           
  2510                           ;comm.c: 82: RA5 = 1;
  2511  02C6  0020               	movlb	0	; select bank0
  2512  02C7  168C               	bsf	12,5	;volatile
  2513                           
  2514                           ;comm.c: 83: ctsWentHigh = 0;
  2515  02C8  01FC               	clrf	_ctsWentHigh
  2516  02C9  0008               	return
  2517  02CA                     __end_of_radio_comm_ReadData:	
  2518                           
  2519                           	psect	text12
  2520  019B                     __ptext12:	
  2521 ;; *************** function _si4355_get_int_status *****************
  2522 ;; Defined at:
  2523 ;;		line 239 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/si4355.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;  PH_CLR_PEND     1    wreg     unsigned char 
  2526 ;;  MODEM_CLR_PE    1    7[BANK0 ] unsigned char 
  2527 ;;  CHIP_CLR_PEN    1    8[BANK0 ] unsigned char 
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;  PH_CLR_PEND     1   12[BANK0 ] unsigned char 
  2530 ;; Return value:  Size  Location     Type
  2531 ;;                  1    wreg      void 
  2532 ;; Registers used:
  2533 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2539 ;;      Params:         0       2       0       0
  2540 ;;      Locals:         0       1       0       0
  2541 ;;      Temps:          0       3       0       0
  2542 ;;      Totals:         0       6       0       0
  2543 ;;Total ram usage:        6 bytes
  2544 ;; Hardware stack levels used:    1
  2545 ;; Hardware stack levels required when called:    7
  2546 ;; This function calls:
  2547 ;;		_radio_comm_SendCmdGetResp
  2548 ;; This function is called by:
  2549 ;;		_Radio_Init
  2550 ;;		_Radio_CheckReceived
  2551 ;;		_Radio_StartRX
  2552 ;;		_si4355_configuration_init
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           
  2557                           ;psect for function _si4355_get_int_status
  2558  019B                     _si4355_get_int_status:	
  2559                           
  2560                           ;incstack = 0
  2561                           ; Regs used in _si4355_get_int_status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  2562                           ;si4355_get_int_status@PH_CLR_PEND stored from wreg
  2563  019B  0020               	movlb	0	; select bank0
  2564  019C  00D7               	movwf	si4355_get_int_status@PH_CLR_PEND
  2565                           
  2566                           ;si4355.c: 241: radioCmd[0] = 0x20;
  2567  019D  3020               	movlw	32
  2568  019E  00D4               	movwf	??_si4355_get_int_status
  2569  019F  0854               	movf	??_si4355_get_int_status,w
  2570  01A0  00B4               	movwf	_radioCmd
  2571                           
  2572                           ;si4355.c: 242: radioCmd[1] = PH_CLR_PEND;
  2573  01A1  0857               	movf	si4355_get_int_status@PH_CLR_PEND,w
  2574  01A2  00D4               	movwf	??_si4355_get_int_status
  2575  01A3  0854               	movf	??_si4355_get_int_status,w
  2576  01A4  00B5               	movwf	_radioCmd+1
  2577                           
  2578                           ;si4355.c: 243: radioCmd[2] = MODEM_CLR_PEND;
  2579  01A5  0852               	movf	si4355_get_int_status@MODEM_CLR_PEND,w
  2580  01A6  00D4               	movwf	??_si4355_get_int_status
  2581  01A7  0854               	movf	??_si4355_get_int_status,w
  2582  01A8  00B6               	movwf	_radioCmd+2
  2583                           
  2584                           ;si4355.c: 244: radioCmd[3] = CHIP_CLR_PEND;
  2585  01A9  0853               	movf	si4355_get_int_status@CHIP_CLR_PEND,w
  2586  01AA  00D4               	movwf	??_si4355_get_int_status
  2587  01AB  0854               	movf	??_si4355_get_int_status,w
  2588  01AC  00B7               	movwf	_radioCmd+3
  2589                           
  2590                           ;si4355.c: 246: radio_comm_SendCmdGetResp( 4,
  2591                           ;si4355.c: 247: radioCmd,
  2592                           ;si4355.c: 248: 8,
  2593                           ;si4355.c: 249: radioCmd );
  2594  01AD  3034               	movlw	(low (_radioCmd| 0))& (0+255)
  2595  01AE  00D4               	movwf	??_si4355_get_int_status
  2596  01AF  0854               	movf	??_si4355_get_int_status,w
  2597  01B0  00CD               	movwf	radio_comm_SendCmdGetResp@pCmdData
  2598  01B1  3008               	movlw	8
  2599  01B2  00D5               	movwf	??_si4355_get_int_status+1
  2600  01B3  0855               	movf	??_si4355_get_int_status+1,w
  2601  01B4  00CE               	movwf	radio_comm_SendCmdGetResp@respByteCount
  2602  01B5  3034               	movlw	(low (_radioCmd| 0))& (0+255)
  2603  01B6  00D6               	movwf	??_si4355_get_int_status+2
  2604  01B7  0856               	movf	??_si4355_get_int_status+2,w
  2605  01B8  00CF               	movwf	radio_comm_SendCmdGetResp@pRespData
  2606  01B9  3004               	movlw	4
  2607  01BA  3183  2345         	fcall	_radio_comm_SendCmdGetResp
  2608                           
  2609                           ;si4355.c: 251: Si4355Cmd.GET_INT_STATUS.INT_PEND = radioCmd[0];
  2610  01BC  0020               	movlb	0	; select bank0
  2611  01BD  0834               	movf	_radioCmd,w
  2612  01BE  00D4               	movwf	??_si4355_get_int_status
  2613  01BF  0854               	movf	??_si4355_get_int_status,w
  2614  01C0  00A0               	movwf	_Si4355Cmd
  2615                           
  2616                           ;si4355.c: 252: Si4355Cmd.GET_INT_STATUS.INT_STATUS = radioCmd[1];
  2617  01C1  0835               	movf	_radioCmd+1,w
  2618  01C2  00D4               	movwf	??_si4355_get_int_status
  2619  01C3  0854               	movf	??_si4355_get_int_status,w
  2620  01C4  00A1               	movwf	_Si4355Cmd+1
  2621                           
  2622                           ;si4355.c: 253: Si4355Cmd.GET_INT_STATUS.PH_PEND = radioCmd[2];
  2623  01C5  0836               	movf	_radioCmd+2,w
  2624  01C6  00D4               	movwf	??_si4355_get_int_status
  2625  01C7  0854               	movf	??_si4355_get_int_status,w
  2626  01C8  00A2               	movwf	_Si4355Cmd+2
  2627                           
  2628                           ;si4355.c: 254: Si4355Cmd.GET_INT_STATUS.PH_STATUS = radioCmd[3];
  2629  01C9  0837               	movf	_radioCmd+3,w
  2630  01CA  00D4               	movwf	??_si4355_get_int_status
  2631  01CB  0854               	movf	??_si4355_get_int_status,w
  2632  01CC  00A3               	movwf	_Si4355Cmd+3
  2633                           
  2634                           ;si4355.c: 255: Si4355Cmd.GET_INT_STATUS.MODEM_PEND = radioCmd[4];
  2635  01CD  0838               	movf	_radioCmd+4,w
  2636  01CE  00D4               	movwf	??_si4355_get_int_status
  2637  01CF  0854               	movf	??_si4355_get_int_status,w
  2638  01D0  00A4               	movwf	_Si4355Cmd+4
  2639                           
  2640                           ;si4355.c: 256: Si4355Cmd.GET_INT_STATUS.MODEM_STATUS = radioCmd[5];
  2641  01D1  0839               	movf	_radioCmd+5,w
  2642  01D2  00D4               	movwf	??_si4355_get_int_status
  2643  01D3  0854               	movf	??_si4355_get_int_status,w
  2644  01D4  00A5               	movwf	_Si4355Cmd+5
  2645                           
  2646                           ;si4355.c: 257: Si4355Cmd.GET_INT_STATUS.CHIP_PEND = radioCmd[6];
  2647  01D5  083A               	movf	_radioCmd+6,w
  2648  01D6  00D4               	movwf	??_si4355_get_int_status
  2649  01D7  0854               	movf	??_si4355_get_int_status,w
  2650  01D8  00A6               	movwf	_Si4355Cmd+6
  2651                           
  2652                           ;si4355.c: 258: Si4355Cmd.GET_INT_STATUS.CHIP_STATUS = radioCmd[7];
  2653  01D9  083B               	movf	_radioCmd+7,w
  2654  01DA  00D4               	movwf	??_si4355_get_int_status
  2655  01DB  0854               	movf	??_si4355_get_int_status,w
  2656  01DC  00A7               	movwf	_Si4355Cmd+7
  2657  01DD  0008               	return
  2658  01DE                     __end_of_si4355_get_int_status:	
  2659                           
  2660                           	psect	text13
  2661  0345                     __ptext13:	
  2662 ;; *************** function _radio_comm_SendCmdGetResp *****************
  2663 ;; Defined at:
  2664 ;;		line 64 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/comm.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;  cmdByteCount    1    wreg     unsigned char 
  2667 ;;  pCmdData        1    2[BANK0 ] PTR unsigned char 
  2668 ;;		 -> radioCmd(16), 
  2669 ;;  respByteCoun    1    3[BANK0 ] unsigned char 
  2670 ;;  pRespData       1    4[BANK0 ] PTR unsigned char 
  2671 ;;		 -> NULL(0), radioCmd(16), 
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;  cmdByteCount    1    6[BANK0 ] unsigned char 
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      unsigned char 
  2676 ;; Registers used:
  2677 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2683 ;;      Params:         0       3       0       0
  2684 ;;      Locals:         0       1       0       0
  2685 ;;      Temps:          0       1       0       0
  2686 ;;      Totals:         0       5       0       0
  2687 ;;Total ram usage:        5 bytes
  2688 ;; Hardware stack levels used:    1
  2689 ;; Hardware stack levels required when called:    6
  2690 ;; This function calls:
  2691 ;;		_radio_comm_GetResp
  2692 ;;		_radio_comm_SendCmd
  2693 ;; This function is called by:
  2694 ;;		_si4355_configuration_init
  2695 ;;		_si4355_fifo_info
  2696 ;;		_si4355_get_int_status
  2697 ;;		_si4355_part_info
  2698 ;;		_si4355_func_info
  2699 ;;		_si4355_get_property
  2700 ;;		_si4355_gpio_pin_cfg
  2701 ;;		_si4355_request_device_state
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           
  2706                           ;psect for function _radio_comm_SendCmdGetResp
  2707  0345                     _radio_comm_SendCmdGetResp:	
  2708                           
  2709                           ;incstack = 0
  2710                           ; Regs used in _radio_comm_SendCmdGetResp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  2711                           ;radio_comm_SendCmdGetResp@cmdByteCount stored from wreg
  2712  0345  0020               	movlb	0	; select bank0
  2713  0346  00D1               	movwf	radio_comm_SendCmdGetResp@cmdByteCount
  2714                           
  2715                           ;comm.c: 66: radio_comm_SendCmd( cmdByteCount, pCmdData );
  2716  0347  084D               	movf	radio_comm_SendCmdGetResp@pCmdData,w
  2717  0348  00D0               	movwf	??_radio_comm_SendCmdGetResp
  2718  0349  0850               	movf	??_radio_comm_SendCmdGetResp,w
  2719  034A  00FB               	movwf	radio_comm_SendCmd@pData
  2720  034B  0851               	movf	radio_comm_SendCmdGetResp@cmdByteCount,w
  2721  034C  3182  22CA  3183   	fcall	_radio_comm_SendCmd
  2722                           
  2723                           ;comm.c: 67: return radio_comm_GetResp( respByteCount, pRespData );
  2724  034F  0020               	movlb	0	; select bank0
  2725  0350  084F               	movf	radio_comm_SendCmdGetResp@pRespData,w
  2726  0351  00D0               	movwf	??_radio_comm_SendCmdGetResp
  2727  0352  0850               	movf	??_radio_comm_SendCmdGetResp,w
  2728  0353  00F6               	movwf	radio_comm_GetResp@pData
  2729  0354  084E               	movf	radio_comm_SendCmdGetResp@respByteCount,w
  2730  0355  3181  21DE         	fcall	_radio_comm_GetResp
  2731  0357  0008               	return
  2732  0358                     __end_of_radio_comm_SendCmdGetResp:	
  2733                           
  2734                           	psect	text14
  2735  02CA                     __ptext14:	
  2736 ;; *************** function _radio_comm_SendCmd *****************
  2737 ;; Defined at:
  2738 ;;		line 47 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/comm.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  byteCount       1    wreg     unsigned char 
  2741 ;;  pData           1   11[COMMON] PTR unsigned char 
  2742 ;;		 -> radioCmd(16), 
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;  byteCount       1    1[BANK0 ] unsigned char 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  1    wreg      void 
  2747 ;; Registers used:
  2748 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2754 ;;      Params:         1       0       0       0
  2755 ;;      Locals:         0       1       0       0
  2756 ;;      Temps:          0       1       0       0
  2757 ;;      Totals:         1       2       0       0
  2758 ;;Total ram usage:        3 bytes
  2759 ;; Hardware stack levels used:    1
  2760 ;; Hardware stack levels required when called:    5
  2761 ;; This function calls:
  2762 ;;		_SPI_WriteBytes
  2763 ;;		_radio_comm_PollCTS
  2764 ;; This function is called by:
  2765 ;;		_si4355_start_rx
  2766 ;;		_radio_comm_SendCmdGetResp
  2767 ;;		_si4355_nop
  2768 ;;		_si4355_power_up
  2769 ;;		_si4355_set_property
  2770 ;;		_si4355_change_state
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           
  2775                           ;psect for function _radio_comm_SendCmd
  2776  02CA                     _radio_comm_SendCmd:	
  2777                           
  2778                           ;incstack = 0
  2779                           ; Regs used in _radio_comm_SendCmd: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2780                           ;radio_comm_SendCmd@byteCount stored from wreg
  2781  02CA  0020               	movlb	0	; select bank0
  2782  02CB  00CC               	movwf	radio_comm_SendCmd@byteCount
  2783                           
  2784                           ;comm.c: 51: if ( byteCount == 1 )
  2785  02CC  034C               	decf	radio_comm_SendCmd@byteCount,w
  2786  02CD  1D03               	btfss	3,2
  2787  02CE  2AD3               	goto	l1740
  2788                           
  2789                           ;comm.c: 52: byteCount++;
  2790  02CF  3001               	movlw	1
  2791  02D0  00CB               	movwf	??_radio_comm_SendCmd
  2792  02D1  084B               	movf	??_radio_comm_SendCmd,w
  2793  02D2  07CC               	addwf	radio_comm_SendCmd@byteCount,f
  2794  02D3                     l1740:	
  2795                           ;comm.c: 54: while( !ctsWentHigh )
  2796                           
  2797  02D3  087C               	movf	_ctsWentHigh,w
  2798  02D4  1D03               	btfss	3,2
  2799  02D5  2ADA               	goto	l282
  2800                           
  2801                           ;comm.c: 55: {
  2802                           ;comm.c: 56: radio_comm_PollCTS();
  2803  02D6  3183  23B5  3182   	fcall	_radio_comm_PollCTS
  2804  02D9  2AD3               	goto	l1740
  2805  02DA                     l282:	
  2806                           
  2807                           ;comm.c: 57: }
  2808                           ;comm.c: 58: RA5 = 0;
  2809  02DA  0020               	movlb	0	; select bank0
  2810  02DB  128C               	bcf	12,5	;volatile
  2811                           
  2812                           ;comm.c: 59: SPI_WriteBytes( byteCount, pData );
  2813  02DC  087B               	movf	radio_comm_SendCmd@pData,w
  2814  02DD  00CB               	movwf	??_radio_comm_SendCmd
  2815  02DE  084B               	movf	??_radio_comm_SendCmd,w
  2816  02DF  00F3               	movwf	SPI_WriteBytes@data
  2817  02E0  084C               	movf	radio_comm_SendCmd@byteCount,w
  2818  02E1  3183  2358         	fcall	_SPI_WriteBytes
  2819                           
  2820                           ;comm.c: 60: RA5 = 1;
  2821  02E3  0020               	movlb	0	; select bank0
  2822  02E4  168C               	bsf	12,5	;volatile
  2823                           
  2824                           ;comm.c: 61: ctsWentHigh = 0;
  2825  02E5  01FC               	clrf	_ctsWentHigh
  2826  02E6  0008               	return
  2827  02E7                     __end_of_radio_comm_SendCmd:	
  2828                           
  2829                           	psect	text15
  2830  03B5                     __ptext15:	
  2831 ;; *************** function _radio_comm_PollCTS *****************
  2832 ;; Defined at:
  2833 ;;		line 42 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/comm.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;		None
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;		None
  2838 ;; Return value:  Size  Location     Type
  2839 ;;                  1    wreg      unsigned char 
  2840 ;; Registers used:
  2841 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2847 ;;      Params:         0       0       0       0
  2848 ;;      Locals:         0       0       0       0
  2849 ;;      Temps:          0       0       0       0
  2850 ;;      Totals:         0       0       0       0
  2851 ;;Total ram usage:        0 bytes
  2852 ;; Hardware stack levels used:    1
  2853 ;; Hardware stack levels required when called:    4
  2854 ;; This function calls:
  2855 ;;		_radio_comm_GetResp
  2856 ;; This function is called by:
  2857 ;;		_Radio_PowerUp
  2858 ;;		_radio_comm_SendCmd
  2859 ;;		_radio_comm_ReadData
  2860 ;;		_radio_comm_WriteData
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           
  2864                           
  2865                           ;psect for function _radio_comm_PollCTS
  2866  03B5                     _radio_comm_PollCTS:	
  2867                           
  2868                           ;comm.c: 44: return radio_comm_GetResp( 0, 0 );
  2869                           ;	Return value of _radio_comm_PollCTS is never used
  2870                           
  2871                           ;incstack = 0
  2872                           ; Regs used in _radio_comm_PollCTS: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2873  03B5  01F6               	clrf	radio_comm_GetResp@pData
  2874  03B6  3000               	movlw	0
  2875  03B7  3181  21DE         	fcall	_radio_comm_GetResp
  2876  03B9  0008               	return
  2877  03BA                     __end_of_radio_comm_PollCTS:	
  2878                           
  2879                           	psect	text16
  2880  01DE                     __ptext16:	
  2881 ;; *************** function _radio_comm_GetResp *****************
  2882 ;; Defined at:
  2883 ;;		line 8 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/comm.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;  byteCount       1    wreg     unsigned char 
  2886 ;;  pData           1    6[COMMON] PTR unsigned char 
  2887 ;;		 -> NULL(0), radioCmd(16), 
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;  byteCount       1    8[COMMON] unsigned char 
  2890 ;;  errCnt          2    9[COMMON] unsigned int 
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  1    wreg      unsigned char 
  2893 ;; Registers used:
  2894 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2900 ;;      Params:         1       0       0       0
  2901 ;;      Locals:         3       0       0       0
  2902 ;;      Temps:          1       0       0       0
  2903 ;;      Totals:         5       0       0       0
  2904 ;;Total ram usage:        5 bytes
  2905 ;; Hardware stack levels used:    1
  2906 ;; Hardware stack levels required when called:    3
  2907 ;; This function calls:
  2908 ;;		_SPI_ReadByte
  2909 ;;		_SPI_ReadBytes
  2910 ;;		_SPI_WriteByte
  2911 ;; This function is called by:
  2912 ;;		_radio_comm_PollCTS
  2913 ;;		_radio_comm_SendCmdGetResp
  2914 ;;		_si4355_ezconfig_check
  2915 ;; This function uses a non-reentrant model
  2916 ;;
  2917                           
  2918                           
  2919                           ;psect for function _radio_comm_GetResp
  2920  01DE                     _radio_comm_GetResp:	
  2921                           
  2922                           ;incstack = 0
  2923                           ; Regs used in _radio_comm_GetResp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2924                           ;radio_comm_GetResp@byteCount stored from wreg
  2925  01DE  00F8               	movwf	radio_comm_GetResp@byteCount
  2926                           
  2927                           ;comm.c: 10: U16 errCnt = 5000;
  2928  01DF  3088               	movlw	136
  2929  01E0  00F9               	movwf	radio_comm_GetResp@errCnt
  2930  01E1  3013               	movlw	19
  2931  01E2  00FA               	movwf	radio_comm_GetResp@errCnt+1
  2932                           
  2933                           ;comm.c: 11: while( errCnt != 0 )
  2934  01E3  29EA               	goto	l1706
  2935  01E4                     l268:	
  2936                           ;comm.c: 23: break;
  2937                           
  2938                           
  2939                           ;comm.c: 24: }
  2940                           ;comm.c: 25: RA5 = 1;
  2941  01E4  0020               	movlb	0	; select bank0
  2942  01E5  168C               	bsf	12,5	;volatile
  2943                           
  2944                           ;comm.c: 26: errCnt--;
  2945  01E6  3001               	movlw	1
  2946  01E7  02F9               	subwf	radio_comm_GetResp@errCnt,f
  2947  01E8  3000               	movlw	0
  2948  01E9  3BFA               	subwfb	radio_comm_GetResp@errCnt+1,f
  2949  01EA                     l1706:	
  2950  01EA  0879               	movf	radio_comm_GetResp@errCnt,w
  2951  01EB  047A               	iorwf	radio_comm_GetResp@errCnt+1,w
  2952  01EC  1903               	btfsc	3,2
  2953  01ED  2A0A               	goto	l1708
  2954                           
  2955                           ;comm.c: 12: {
  2956                           ;comm.c: 13: RA5 = 0;
  2957  01EE  0020               	movlb	0	; select bank0
  2958  01EF  128C               	bcf	12,5	;volatile
  2959                           
  2960                           ;comm.c: 14: SPI_WriteByte( 0x44 );
  2961  01F0  3044               	movlw	68
  2962  01F1  3183  2388  3181   	fcall	_SPI_WriteByte
  2963                           
  2964                           ;comm.c: 15: ctsWentHigh = SPI_ReadByte();
  2965  01F4  3183  2395  3181   	fcall	_SPI_ReadByte
  2966  01F7  00F7               	movwf	??_radio_comm_GetResp
  2967  01F8  0877               	movf	??_radio_comm_GetResp,w
  2968  01F9  00FC               	movwf	_ctsWentHigh
  2969                           
  2970                           ;comm.c: 16: if( ctsWentHigh )
  2971  01FA  087C               	movf	_ctsWentHigh,w
  2972  01FB  1903               	btfsc	3,2
  2973  01FC  29E4               	goto	l268
  2974                           
  2975                           ;comm.c: 17: {
  2976                           ;comm.c: 18: if( byteCount )
  2977  01FD  0878               	movf	radio_comm_GetResp@byteCount,w
  2978  01FE  1903               	btfsc	3,2
  2979  01FF  2A08               	goto	l1702
  2980                           
  2981                           ;comm.c: 19: {
  2982                           ;comm.c: 20: SPI_ReadBytes( byteCount, pData );
  2983  0200  0876               	movf	radio_comm_GetResp@pData,w
  2984  0201  00F7               	movwf	??_radio_comm_GetResp
  2985  0202  0877               	movf	??_radio_comm_GetResp,w
  2986  0203  00F3               	movwf	SPI_ReadBytes@data
  2987  0204  0878               	movf	radio_comm_GetResp@byteCount,w
  2988  0205  3183  2331  3181   	fcall	_SPI_ReadBytes
  2989  0208                     l1702:	
  2990                           
  2991                           ;comm.c: 21: }
  2992                           ;comm.c: 22: RA5 = 1;
  2993  0208  0020               	movlb	0	; select bank0
  2994  0209  168C               	bsf	12,5	;volatile
  2995  020A                     l1708:	
  2996                           
  2997                           ;comm.c: 27: }
  2998                           ;comm.c: 29: if( errCnt == 0 )
  2999  020A  0879               	movf	radio_comm_GetResp@errCnt,w
  3000  020B  047A               	iorwf	radio_comm_GetResp@errCnt+1,w
  3001  020C  1D03               	btfss	3,2
  3002  020D  2A10               	goto	l1714
  3003                           
  3004                           ;comm.c: 30: {
  3005                           ;comm.c: 31: return 0;
  3006  020E  3000               	movlw	0
  3007  020F  0008               	return
  3008  0210                     l1714:	
  3009                           
  3010                           ;comm.c: 32: }
  3011                           ;comm.c: 34: if ( ctsWentHigh )
  3012  0210  087C               	movf	_ctsWentHigh,w
  3013  0211  1903               	btfsc	3,2
  3014  0212  2A15               	goto	l1718
  3015                           
  3016                           ;comm.c: 35: {
  3017                           ;comm.c: 36: ctsWentHigh = 1;
  3018  0213  01FC               	clrf	_ctsWentHigh
  3019  0214  0AFC               	incf	_ctsWentHigh,f
  3020  0215                     l1718:	
  3021                           
  3022                           ;comm.c: 37: }
  3023                           ;comm.c: 39: return ctsWentHigh;
  3024  0215  087C               	movf	_ctsWentHigh,w
  3025  0216  0008               	return
  3026  0217                     __end_of_radio_comm_GetResp:	
  3027                           
  3028                           	psect	text17
  3029  0331                     __ptext17:	
  3030 ;; *************** function _SPI_ReadBytes *****************
  3031 ;; Defined at:
  3032 ;;		line 44 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/spi.c"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;  len             1    wreg     unsigned char 
  3035 ;;  data            1    3[COMMON] PTR unsigned char 
  3036 ;;		 -> NULL(0), radioCmd(16), RadioPacket(7), 
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;  len             1    5[COMMON] unsigned char 
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  1    wreg      void 
  3041 ;; Registers used:
  3042 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3048 ;;      Params:         1       0       0       0
  3049 ;;      Locals:         1       0       0       0
  3050 ;;      Temps:          1       0       0       0
  3051 ;;      Totals:         3       0       0       0
  3052 ;;Total ram usage:        3 bytes
  3053 ;; Hardware stack levels used:    1
  3054 ;; Hardware stack levels required when called:    2
  3055 ;; This function calls:
  3056 ;;		_SPI_ReadByte
  3057 ;; This function is called by:
  3058 ;;		_radio_comm_GetResp
  3059 ;;		_radio_comm_ReadData
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063                           
  3064                           ;psect for function _SPI_ReadBytes
  3065  0331                     _SPI_ReadBytes:	
  3066                           
  3067                           ;incstack = 0
  3068                           ; Regs used in _SPI_ReadBytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3069                           ;SPI_ReadBytes@len stored from wreg
  3070  0331  00F5               	movwf	SPI_ReadBytes@len
  3071  0332                     l1688:	
  3072                           ;spi.c: 46: while( len-- )
  3073                           
  3074  0332  3001               	movlw	1
  3075  0333  02F5               	subwf	SPI_ReadBytes@len,f
  3076  0334  0A75               	incf	SPI_ReadBytes@len,w
  3077  0335  1903               	btfsc	3,2
  3078  0336  0008               	return
  3079                           
  3080                           ;spi.c: 47: {
  3081                           ;spi.c: 48: *data++ = SPI_ReadByte();
  3082  0337  3183  2395  3183   	fcall	_SPI_ReadByte
  3083  033A  00F4               	movwf	??_SPI_ReadBytes
  3084  033B  0873               	movf	SPI_ReadBytes@data,w
  3085  033C  0086               	movwf	6
  3086  033D  0187               	clrf	7
  3087  033E  0874               	movf	??_SPI_ReadBytes,w
  3088  033F  0081               	movwf	1
  3089  0340  3001               	movlw	1
  3090  0341  00F4               	movwf	??_SPI_ReadBytes
  3091  0342  0874               	movf	??_SPI_ReadBytes,w
  3092  0343  07F3               	addwf	SPI_ReadBytes@data,f
  3093  0344  2B32               	goto	l1688
  3094  0345                     __end_of_SPI_ReadBytes:	
  3095                           
  3096                           	psect	text18
  3097  0395                     __ptext18:	
  3098 ;; *************** function _SPI_ReadByte *****************
  3099 ;; Defined at:
  3100 ;;		line 52 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/spi.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;		None
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;  data            1    2[COMMON] unsigned char 
  3105 ;; Return value:  Size  Location     Type
  3106 ;;                  1    wreg      unsigned char 
  3107 ;; Registers used:
  3108 ;;		wreg, status,2
  3109 ;; Tracked objects:
  3110 ;;		On entry : 0/0
  3111 ;;		On exit  : 0/0
  3112 ;;		Unchanged: 0/0
  3113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3114 ;;      Params:         0       0       0       0
  3115 ;;      Locals:         1       0       0       0
  3116 ;;      Temps:          1       0       0       0
  3117 ;;      Totals:         2       0       0       0
  3118 ;;Total ram usage:        2 bytes
  3119 ;; Hardware stack levels used:    1
  3120 ;; Hardware stack levels required when called:    1
  3121 ;; This function calls:
  3122 ;;		Nothing
  3123 ;; This function is called by:
  3124 ;;		_SPI_ReadBytes
  3125 ;;		_radio_comm_GetResp
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           
  3130                           ;psect for function _SPI_ReadByte
  3131  0395                     _SPI_ReadByte:	
  3132                           
  3133                           ;spi.c: 54: U8 data;
  3134                           ;spi.c: 55: SSPBUF = 0;
  3135                           
  3136                           ;incstack = 0
  3137                           ; Regs used in _SPI_ReadByte: [wreg+status,2]
  3138  0395  0024               	movlb	4	; select bank4
  3139  0396  0191               	clrf	17	;volatile
  3140  0397                     l54:	
  3141                           ;spi.c: 56: while( !SSP1IF );
  3142                           
  3143  0397  0020               	movlb	0	; select bank0
  3144  0398  1D91               	btfss	17,3	;volatile
  3145  0399  2B97               	goto	l54
  3146                           
  3147                           ;spi.c: 57: data = SSPBUF;
  3148  039A  0024               	movlb	4	; select bank4
  3149  039B  0811               	movf	17,w	;volatile
  3150  039C  00F1               	movwf	??_SPI_ReadByte
  3151  039D  0871               	movf	??_SPI_ReadByte,w
  3152  039E  00F2               	movwf	SPI_ReadByte@data
  3153                           
  3154                           ;spi.c: 58: return 1;
  3155  039F  3001               	movlw	1
  3156  03A0  0008               	return
  3157  03A1                     __end_of_SPI_ReadByte:	
  3158                           
  3159                           	psect	text19
  3160  0358                     __ptext19:	
  3161 ;; *************** function _SPI_WriteBytes *****************
  3162 ;; Defined at:
  3163 ;;		line 29 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/spi.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;  len             1    wreg     unsigned char 
  3166 ;;  data            1    3[COMMON] PTR unsigned char 
  3167 ;;		 -> radioCmd(16), 
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;  len             1    5[COMMON] unsigned char 
  3170 ;; Return value:  Size  Location     Type
  3171 ;;                  1    wreg      void 
  3172 ;; Registers used:
  3173 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3179 ;;      Params:         1       0       0       0
  3180 ;;      Locals:         1       0       0       0
  3181 ;;      Temps:          1       0       0       0
  3182 ;;      Totals:         3       0       0       0
  3183 ;;Total ram usage:        3 bytes
  3184 ;; Hardware stack levels used:    1
  3185 ;; Hardware stack levels required when called:    2
  3186 ;; This function calls:
  3187 ;;		_SPI_WriteByte
  3188 ;; This function is called by:
  3189 ;;		_radio_comm_SendCmd
  3190 ;;		_radio_comm_WriteData
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           
  3195                           ;psect for function _SPI_WriteBytes
  3196  0358                     _SPI_WriteBytes:	
  3197                           
  3198                           ;incstack = 0
  3199                           ; Regs used in _SPI_WriteBytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3200                           ;SPI_WriteBytes@len stored from wreg
  3201  0358  00F5               	movwf	SPI_WriteBytes@len
  3202  0359                     l1728:	
  3203                           ;spi.c: 31: while( len-- )
  3204                           
  3205  0359  3001               	movlw	1
  3206  035A  02F5               	subwf	SPI_WriteBytes@len,f
  3207  035B  0A75               	incf	SPI_WriteBytes@len,w
  3208  035C  1903               	btfsc	3,2
  3209  035D  0008               	return
  3210                           
  3211                           ;spi.c: 32: {
  3212                           ;spi.c: 33: SPI_WriteByte( *data++ );
  3213  035E  0873               	movf	SPI_WriteBytes@data,w
  3214  035F  0086               	movwf	6
  3215  0360  0187               	clrf	7
  3216  0361  0801               	movf	1,w
  3217  0362  3183  2388  3183   	fcall	_SPI_WriteByte
  3218  0365  3001               	movlw	1
  3219  0366  00F4               	movwf	??_SPI_WriteBytes
  3220  0367  0874               	movf	??_SPI_WriteBytes,w
  3221  0368  07F3               	addwf	SPI_WriteBytes@data,f
  3222  0369  2B59               	goto	l1728
  3223  036A                     __end_of_SPI_WriteBytes:	
  3224                           
  3225                           	psect	text20
  3226  0388                     __ptext20:	
  3227 ;; *************** function _SPI_WriteByte *****************
  3228 ;; Defined at:
  3229 ;;		line 37 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/spi.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;  data            1    wreg     unsigned char 
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;  data            1    2[COMMON] unsigned char 
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  1    wreg      void 
  3236 ;; Registers used:
  3237 ;;		wreg
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3243 ;;      Params:         0       0       0       0
  3244 ;;      Locals:         1       0       0       0
  3245 ;;      Temps:          1       0       0       0
  3246 ;;      Totals:         2       0       0       0
  3247 ;;Total ram usage:        2 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; Hardware stack levels required when called:    1
  3250 ;; This function calls:
  3251 ;;		Nothing
  3252 ;; This function is called by:
  3253 ;;		_SPI_WriteBytes
  3254 ;;		_radio_comm_GetResp
  3255 ;;		_radio_comm_ReadData
  3256 ;;		_si4355_ezconfig_check
  3257 ;;		_radio_comm_WriteData
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           
  3262                           ;psect for function _SPI_WriteByte
  3263  0388                     _SPI_WriteByte:	
  3264                           
  3265                           ;incstack = 0
  3266                           ; Regs used in _SPI_WriteByte: [wreg]
  3267                           ;SPI_WriteByte@data stored from wreg
  3268  0388  00F2               	movwf	SPI_WriteByte@data
  3269                           
  3270                           ;spi.c: 39: SSPBUF = data;
  3271  0389  0872               	movf	SPI_WriteByte@data,w
  3272  038A  0024               	movlb	4	; select bank4
  3273  038B  0091               	movwf	17	;volatile
  3274  038C                     l42:	
  3275                           ;spi.c: 40: while( !SSP1IF );
  3276                           
  3277  038C  0020               	movlb	0	; select bank0
  3278  038D  1D91               	btfss	17,3	;volatile
  3279  038E  2B8C               	goto	l42
  3280                           
  3281                           ;spi.c: 41: data = SSPBUF;
  3282  038F  0024               	movlb	4	; select bank4
  3283  0390  0811               	movf	17,w	;volatile
  3284  0391  00F1               	movwf	??_SPI_WriteByte
  3285  0392  0871               	movf	??_SPI_WriteByte,w
  3286  0393  00F2               	movwf	SPI_WriteByte@data
  3287  0394  0008               	return
  3288  0395                     __end_of_SPI_WriteByte:	
  3289                           
  3290                           	psect	intentry
  3291  0004                     __pintentry:	
  3292 ;; *************** function _Timer0_ISR *****************
  3293 ;; Defined at:
  3294 ;;		line 38 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/main.c"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;		None
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;		None
  3299 ;; Return value:  Size  Location     Type
  3300 ;;                  1    wreg      void 
  3301 ;; Registers used:
  3302 ;;		wreg
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3308 ;;      Params:         0       0       0       0
  3309 ;;      Locals:         0       0       0       0
  3310 ;;      Temps:          1       0       0       0
  3311 ;;      Totals:         1       0       0       0
  3312 ;;Total ram usage:        1 bytes
  3313 ;; Hardware stack levels used:    1
  3314 ;; This function calls:
  3315 ;;		Nothing
  3316 ;; This function is called by:
  3317 ;;		Interrupt level 1
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321  0004                     _Timer0_ISR:	
  3322                           
  3323                           ;incstack = 0
  3324  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3325                           
  3326                           ; Regs used in _Timer0_ISR: [wreg]
  3327  0005  3180               	pagesel	$
  3328  0006  0020               	movlb	0	; select bank0
  3329  0007  087F               	movf	127,w
  3330  0008  00F0               	movwf	??_Timer0_ISR
  3331                           
  3332                           ;main.c: 40: TMR0IF = 0;
  3333  0009  110B               	bcf	11,2	;volatile
  3334                           
  3335                           ;main.c: 41: counter++;
  3336  000A  3001               	movlw	1
  3337  000B  07B0               	addwf	_counter,f
  3338  000C  3000               	movlw	0
  3339  000D  3DB1               	addwfc	_counter+1,f
  3340                           
  3341                           ;main.c: 42: RA0 = counter & 1;
  3342  000E  1C30               	btfss	_counter,0
  3343  000F  2813               	goto	u54_20
  3344  0010  0020               	movlb	0	; select bank0
  3345  0011  140C               	bsf	12,0	;volatile
  3346  0012  2815               	goto	i1l102
  3347  0013                     u54_20:	
  3348  0013  0020               	movlb	0	; select bank0
  3349  0014  100C               	bcf	12,0	;volatile
  3350  0015                     i1l102:	
  3351  0015  0870               	movf	??_Timer0_ISR,w
  3352  0016  00FF               	movwf	127
  3353  0017  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3354  0018  0009               	retfie
  3355  0019                     __end_of_Timer0_ISR:	
  3356  007E                     btemp	set	126	;btemp
  3357  007E                     int$flags	set	126
  3358  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    274
    Data        8
    BSS         44
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     19      70
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    radio_comm_ReadData@pData	PTR unsigned char  size(1) Largest target is 16
		 -> radioCmd(BANK0[16]), RadioPacket(BANK0[7]), 

    radio_comm_SendCmdGetResp@pRespData	PTR unsigned char  size(1) Largest target is 16
		 -> NULL(NULL[0]), radioCmd(BANK0[16]), 

    radio_comm_SendCmdGetResp@pCmdData	PTR unsigned char  size(1) Largest target is 16
		 -> radioCmd(BANK0[16]), 

    radio_comm_SendCmd@pData	PTR unsigned char  size(1) Largest target is 16
		 -> radioCmd(BANK0[16]), 

    radio_comm_GetResp@pData	PTR unsigned char  size(1) Largest target is 16
		 -> NULL(NULL[0]), radioCmd(BANK0[16]), 

    si4355_read_rx_fifo@pRxData	PTR unsigned char  size(1) Largest target is 7
		 -> RadioPacket(BANK0[7]), 

    si4355_configuration_init@pSetPropCmd	PTR unsigned char  size(2) Largest target is 274
		 -> Radio_Configuration_Data_Array(CODE[274]), 

    pRadioConfiguration.Radio_ConfigurationArray	PTR unsigned char  size(2) Largest target is 274
		 -> Radio_Configuration_Data_Array(CODE[274]), 

    pRadioConfiguration	PTR struct . size(1) Largest target is 7
		 -> RadioConfiguration(BANK0[7]), 

    S90$Radio_ConfigurationArray	PTR unsigned char  size(2) Largest target is 274
		 -> Radio_Configuration_Data_Array(CODE[274]), 

    RadioConfiguration.Radio_ConfigurationArray	PTR unsigned char  size(2) Largest target is 274
		 -> Radio_Configuration_Data_Array(CODE[274]), 

    SPI_ReadBytes@data	PTR unsigned char  size(1) Largest target is 16
		 -> NULL(NULL[0]), radioCmd(BANK0[16]), RadioPacket(BANK0[7]), 

    SPI_WriteBytes@data	PTR unsigned char  size(1) Largest target is 16
		 -> radioCmd(BANK0[16]), 


Critical Paths under _main in COMMON

    _si4355_start_rx->_radio_comm_SendCmd
    _si4355_read_rx_fifo->_radio_comm_ReadData
    _radio_comm_SendCmdGetResp->_radio_comm_SendCmd
    _radio_comm_PollCTS->_radio_comm_GetResp
    _radio_comm_GetResp->_SPI_ReadBytes
    _SPI_ReadBytes->_SPI_ReadByte
    _SPI_WriteBytes->_SPI_WriteByte

Critical Paths under _Timer0_ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _si4355_fifo_info->_radio_comm_SendCmdGetResp
    _Radio_StartRX->_si4355_get_int_status
    _si4355_start_rx->_radio_comm_SendCmd
    _Radio_Init->_si4355_configuration_init
    _si4355_configuration_init->_si4355_get_int_status
    _Radio_CheckReceived->_si4355_get_int_status
    _si4355_read_rx_fifo->_radio_comm_ReadData
    _si4355_get_int_status->_radio_comm_SendCmdGetResp
    _radio_comm_SendCmdGetResp->_radio_comm_SendCmd

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   32831
                                             18 BANK0      1     1      0
                _Radio_CheckReceived
                         _Radio_Init
                      _Radio_StartRX
                           _SPI_Init
                   _si4355_fifo_info
 ---------------------------------------------------------------------------------
 (1) _si4355_fifo_info                                     4     4      0    4116
                                              7 BANK0      4     4      0
          _radio_comm_SendCmdGetResp
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Radio_StartRX                                        3     3      0    6889
                                             13 BANK0      3     3      0
              _si4355_get_int_status
                    _si4355_start_rx
 ---------------------------------------------------------------------------------
 (2) _si4355_start_rx                                      8     2      6    2064
                                              2 BANK0      8     2      6
                 _radio_comm_SendCmd
 ---------------------------------------------------------------------------------
 (1) _Radio_Init                                           0     0      0   14707
                      _Radio_PowerUp
          _si4355_configuration_init
              _si4355_get_int_status
 ---------------------------------------------------------------------------------
 (2) _si4355_configuration_init                            5     3      2    9225
                                             13 BANK0      5     3      2
          _radio_comm_SendCmdGetResp
              _si4355_get_int_status
 ---------------------------------------------------------------------------------
 (2) _Radio_PowerUp                                        4     4      0     688
                                              0 BANK0      4     4      0
                 _radio_comm_PollCTS
                       _si4355_reset
 ---------------------------------------------------------------------------------
 (3) _si4355_reset                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Radio_CheckReceived                                  1     1      0    7119
                                             13 BANK0      1     1      0
              _si4355_get_int_status
                _si4355_read_rx_fifo
 ---------------------------------------------------------------------------------
 (2) _si4355_read_rx_fifo                                  4     3      1    2325
                                              4 BANK0      4     3      1
                _radio_comm_ReadData
 ---------------------------------------------------------------------------------
 (3) _radio_comm_ReadData                                  5     2      3    2186
                                             11 COMMON     1     1      0
                                              0 BANK0      4     1      3
                      _SPI_ReadBytes
                      _SPI_WriteByte
                 _radio_comm_PollCTS
 ---------------------------------------------------------------------------------
 (2) _si4355_get_int_status                                6     4      2    4794
                                              7 BANK0      6     4      2
          _radio_comm_SendCmdGetResp
 ---------------------------------------------------------------------------------
 (2) _radio_comm_SendCmdGetResp                            5     2      3    4085
                                              2 BANK0      5     2      3
                 _radio_comm_GetResp
                 _radio_comm_SendCmd
 ---------------------------------------------------------------------------------
 (3) _radio_comm_SendCmd                                   3     2      1    1462
                                             11 COMMON     1     0      1
                                              0 BANK0      2     2      0
                     _SPI_WriteBytes
                 _radio_comm_PollCTS
 ---------------------------------------------------------------------------------
 (4) _radio_comm_PollCTS                                   0     0      0     651
                 _radio_comm_GetResp
 ---------------------------------------------------------------------------------
 (5) _radio_comm_GetResp                                   5     4      1     651
                                              6 COMMON     5     4      1
                       _SPI_ReadByte
                      _SPI_ReadBytes
                      _SPI_WriteByte
 ---------------------------------------------------------------------------------
 (6) _SPI_ReadBytes                                        3     2      1     222
                                              3 COMMON     3     2      1
                       _SPI_ReadByte
 ---------------------------------------------------------------------------------
 (7) _SPI_ReadByte                                         2     2      0       3
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _SPI_WriteBytes                                       3     2      1     253
                                              3 COMMON     3     2      1
                      _SPI_WriteByte
 ---------------------------------------------------------------------------------
 (6) _SPI_WriteByte                                        2     2      0      34
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _Timer0_ISR                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Radio_CheckReceived
     _si4355_get_int_status
       _radio_comm_SendCmdGetResp
         _radio_comm_GetResp
           _SPI_ReadByte
           _SPI_ReadBytes
             _SPI_ReadByte
           _SPI_WriteByte
         _radio_comm_SendCmd
           _SPI_WriteBytes
             _SPI_WriteByte
           _radio_comm_PollCTS
             _radio_comm_GetResp
               _SPI_ReadByte
               _SPI_ReadBytes
                 _SPI_ReadByte
               _SPI_WriteByte
     _si4355_read_rx_fifo
       _radio_comm_ReadData
         _SPI_ReadBytes
           _SPI_ReadByte
         _SPI_WriteByte
         _radio_comm_PollCTS
           _radio_comm_GetResp
             _SPI_ReadByte
             _SPI_ReadBytes
               _SPI_ReadByte
             _SPI_WriteByte
   _Radio_Init
     _Radio_PowerUp
       _radio_comm_PollCTS
         _radio_comm_GetResp
           _SPI_ReadByte
           _SPI_ReadBytes
             _SPI_ReadByte
           _SPI_WriteByte
       _si4355_reset
     _si4355_configuration_init
       _radio_comm_SendCmdGetResp
         _radio_comm_GetResp
           _SPI_ReadByte
           _SPI_ReadBytes
             _SPI_ReadByte
           _SPI_WriteByte
         _radio_comm_SendCmd
           _SPI_WriteBytes
             _SPI_WriteByte
           _radio_comm_PollCTS
             _radio_comm_GetResp
               _SPI_ReadByte
               _SPI_ReadBytes
                 _SPI_ReadByte
               _SPI_WriteByte
       _si4355_get_int_status
         _radio_comm_SendCmdGetResp
           _radio_comm_GetResp
             _SPI_ReadByte
             _SPI_ReadBytes
               _SPI_ReadByte
             _SPI_WriteByte
           _radio_comm_SendCmd
             _SPI_WriteBytes
               _SPI_WriteByte
             _radio_comm_PollCTS
               _radio_comm_GetResp
                 _SPI_ReadByte
                 _SPI_ReadBytes
                   _SPI_ReadByte
                 _SPI_WriteByte
     _si4355_get_int_status
       _radio_comm_SendCmdGetResp
         _radio_comm_GetResp
           _SPI_ReadByte
           _SPI_ReadBytes
             _SPI_ReadByte
           _SPI_WriteByte
         _radio_comm_SendCmd
           _SPI_WriteBytes
             _SPI_WriteByte
           _radio_comm_PollCTS
             _radio_comm_GetResp
               _SPI_ReadByte
               _SPI_ReadBytes
                 _SPI_ReadByte
               _SPI_WriteByte
   _Radio_StartRX
     _si4355_get_int_status
       _radio_comm_SendCmdGetResp
         _radio_comm_GetResp
           _SPI_ReadByte
           _SPI_ReadBytes
             _SPI_ReadByte
           _SPI_WriteByte
         _radio_comm_SendCmd
           _SPI_WriteBytes
             _SPI_WriteByte
           _radio_comm_PollCTS
             _radio_comm_GetResp
               _SPI_ReadByte
               _SPI_ReadBytes
                 _SPI_ReadByte
               _SPI_WriteByte
     _si4355_start_rx
       _radio_comm_SendCmd
         _SPI_WriteBytes
           _SPI_WriteByte
         _radio_comm_PollCTS
           _radio_comm_GetResp
             _SPI_ReadByte
             _SPI_ReadBytes
               _SPI_ReadByte
             _SPI_WriteByte
   _SPI_Init
   _si4355_fifo_info
     _radio_comm_SendCmdGetResp
       _radio_comm_GetResp
         _SPI_ReadByte
         _SPI_ReadBytes
           _SPI_ReadByte
         _SPI_WriteByte
       _radio_comm_SendCmd
         _SPI_WriteBytes
           _SPI_WriteByte
         _radio_comm_PollCTS
           _radio_comm_GetResp
             _SPI_ReadByte
             _SPI_ReadBytes
               _SPI_ReadByte
             _SPI_WriteByte

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      53       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     13      46       6       87.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      53      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Feb 07 19:33:51 2017

                           __CFG_CP$OFF 0000                                      l42 038C  
                                    l54 0397                                      l96 025A  
     radio_comm_SendCmdGetResp@pCmdData 004D                       ?_si4355_fifo_info 0070  
                           __CFG_LVP$ON 0000                                     l183 018A  
                                   l282 02DA                                     l268 01E4  
                                   l289 02B8                                     _CKE 10A6  
                                   _CKP 10AC                                     _GIE 005F  
                                   _RA0 0060                                     _RA3 0063  
                                   _RA5 0065                     _pRadioConfiguration 005E  
                          __CFG_CPD$OFF 0000                                     u745 02A1  
                                   _SMP 10A7      __size_of_radio_comm_SendCmdGetResp 0013  
                    ??_si4355_fifo_info 0052                            __CFG_BORV$LO 0000  
                                   wreg 0009                            __CFG_IESO$ON 0000  
                          _si4355_reset 03BA                                    l1702 0208  
                                  l1714 0210                                    l1706 01EA  
                                  l1810 0161                                    l1708 020A  
                                  l1740 02D3                                    l1820 017B  
                                  l1900 0256                                    l1718 0215  
                                  l1902 025C                                    l1728 0359  
                                  l1818 0162                                    l1834 0148  
                                  l1836 0199                                    l1688 0332  
                                  l1776 02B2                                    l1778 02B5  
                                  l1794 0292                                    l1796 02A9  
                                  l1892 0245                                    l1886 032F  
                                  l1894 0248                                    _TMR0 0015  
                          __CFG_WRT$OFF 0000                           __CFG_FCMEN$ON 0000  
                                  _main 0241                       ??_si4355_start_rx 0053  
                                  fsr0h 0005                                    fsr1h 0007  
                                  indf0 0000                                    fsr0l 0004  
                                  indf1 0001                                    fsr1l 0006  
                                  btemp 007E                  __size_of_Radio_PowerUp 0020  
                         __CFG_BOREN$ON 0000                    si4355_fifo_info@FIFO 0055  
                __size_of_Radio_StartRX 001B                                    start 0019  
                        ?_SPI_ReadBytes 0073                           _SPI_WriteByte 0388  
                         __CFG_MCLRE$ON 0000                 ??_si4355_get_int_status 0054  
                         __CFG_PLLEN$ON 0000             si4355_read_rx_fifo@numBytes 0052  
                                 ?_main 0070             ??_si4355_configuration_init 005A  
                         __CFG_WDTE$OFF 0000                                   i1l102 0015  
 radio_comm_SendCmdGetResp@cmdByteCount 0051                                   u54_20 0013  
                                 _STATE 0032                                   _SSPM0 10A8  
                                 _SSPM1 10A9                                   _SSPM2 10AA  
                                 _SSPM3 10AB                                   _SSPEN 10AD  
                                 _SSSEL 08ED       __end_of_radio_comm_SendCmdGetResp 0358  
                      SPI_ReadByte@data 0072                                   _dummy 0033  
                      __end_of_SPI_Init 0379             __end_of_radio_comm_ReadData 02CA  
                      SPI_ReadBytes@len 0075                                   status 0003  
                                 wtemp0 007E             radio_comm_GetResp@byteCount 0078  
                        ?_SPI_WriteByte 0070                          _SPI_WriteBytes 0358  
                       __initialization 001B                            __end_of_main 0269  
                   Radio_PowerUp@wDelay 004D                              _Radio_Init 0302  
                                ??_main 005D            __size_of_si4355_read_rx_fifo 000F  
                         _Radio_PowerUp 028C                           _Radio_StartRX 02E7  
               radio_comm_SendCmd@pData 007B                   si4355_start_rx@RX_LEN 004E  
                                _SDOSEL 08EE               _si4355_configuration_init 0145  
                                _TMR0IE 005D                                  _TMR0IF 005A  
                                _SSP1IF 008B                         ??_SPI_ReadBytes 0074  
                                _SSPBUF 0211                  __end_of_SPI_WriteBytes 036A  
                        __CFG_PWRTE$OFF 0000                              _Timer0_ISR 0004  
                        __CFG_STVREN$ON 0000                          ?_Radio_PowerUp 0070  
                        ?_Radio_StartRX 0070             __size_of_radio_comm_GetResp 0039  
           radio_comm_SendCmd@byteCount 004C            __size_of_Radio_CheckReceived 0017  
                     SPI_ReadBytes@data 0073             __size_of_radio_comm_SendCmd 001D  
           __size_of_radio_comm_PollCTS 0005                 __end_of__initialization 002F  
                       ??_SPI_WriteByte 0071                         ?_SPI_WriteBytes 0073  
                        __pcstackCOMMON 0070                            __pidataBANK0 03A1  
                           ?_Radio_Init 0070                             _RadioPacket 0044  
                             ?_SPI_Init 0070      si4355_get_int_status@CHIP_CLR_PEND 0053  
                       _si4355_start_rx 0217  __end_of_Radio_Configuration_Data_Array 0145  
        _Radio_Configuration_Data_Array 0033                              __pbssBANK0 0020  
             __size_of_si4355_fifo_info 0023                             ?_Timer0_ISR 0070  
                si4355_start_rx@CHANNEL 0054                              __pmaintext 0241  
                            __pintentry 0004                         ??_Radio_PowerUp 004B  
                       ??_Radio_StartRX 0058          __size_of_si4355_get_int_status 0043  
         __end_of_si4355_get_int_status 01DE                si4355_start_rx@CONDITION 004D  
                            ??_SPI_Init 0071              si4355_start_rx@NEXT_STATE1 0050  
            si4355_start_rx@NEXT_STATE2 0051              si4355_start_rx@NEXT_STATE3 0052  
                   __size_of_Radio_Init 0018                     _si4355_read_rx_fifo 0379  
    __size_of_si4355_configuration_init 0056                       SPI_WriteByte@data 0072  
               __end_of_si4355_start_rx 0241                       SPI_WriteBytes@len 0075  
                               __ptext1 0269                                 __ptext2 036A  
                               __ptext3 02E7                                 __ptext4 0217  
                               __ptext5 0302                                 __ptext6 0145  
                               __ptext7 028C                                 __ptext8 03BA  
                               __ptext9 031A                    ?_si4355_read_rx_fifo 004F  
                               _counter 0030                     __size_of_Timer0_ISR 0015  
            ?_radio_comm_SendCmdGetResp 004D                  radio_comm_ReadData@cmd 004E  
                               clrloop0 03B0                    end_of_initialization 002F  
                               init_ram 03A9                                 initloop 03AA  
                   _Radio_CheckReceived 031A            __size_of_radio_comm_ReadData 001E  
               radio_comm_GetResp@pData 0076                            __pstringtext 0033  
     __end_of_si4355_configuration_init 019B                   ??_si4355_read_rx_fifo 0050  
                             _Si4355Cmd 0020                    ?_Radio_CheckReceived 0070  
                      __CFG_FOSC$INTOSC 0000                        ??_SPI_WriteBytes 0074  
                      _si4355_fifo_info 0269                   __end_of_SPI_ReadBytes 0345  
            si4355_read_rx_fifo@pRxData 004F                           ?_SPI_ReadByte 0070  
                          ??_Radio_Init 007C                        ?_si4355_start_rx 004D  
            __end_of_radio_comm_GetResp 0217                   ??_Radio_CheckReceived 0058  
                     __size_of_SPI_Init 000F              __end_of_radio_comm_SendCmd 02E7  
            __end_of_radio_comm_PollCTS 03BA                     start_initialization 001B  
                         ?_si4355_reset 0070                      __end_of_Radio_Init 031A  
          si4355_configuration_init@col 005B     si4355_get_int_status@MODEM_CLR_PEND 0052  
                        ??_SPI_ReadByte 0071                   __end_of_SPI_WriteByte 0395  
                          ??_Timer0_ISR 0070                             __pdataBANK0 005E  
                  Radio_StartRX@channel 005A                             __pbssCOMMON 007C  
                        ??_si4355_reset 0071                               ___latbits 0001  
                         __pcstackBANK0 004B                      __end_of_Timer0_ISR 0019  
    radio_comm_SendCmdGetResp@pRespData 004F                   __end_of_Radio_PowerUp 02AC  
                 __end_of_Radio_StartRX 0302                   _si4355_get_int_status 019B  
                   _radio_comm_ReadData 02AC             ??_radio_comm_SendCmdGetResp 0050  
                             clear_ram0 03AF     si4355_configuration_init@numOfBytes 005C  
                  ?_radio_comm_ReadData 004B                __end_of_si4355_fifo_info 028C  
                              _SPI_Init 036A                radio_comm_ReadData@pData 004D  
                  __end_of_SPI_ReadByte 03A1                             _ctsWentHigh 007C  
                 ??_radio_comm_ReadData 007B                    __end_of_si4355_reset 03BB  
           __end_of_si4355_read_rx_fifo 0388               _radio_comm_SendCmdGetResp 0345  
            ?_si4355_configuration_init 0058                  ?_si4355_get_int_status 0052  
  si4355_configuration_init@pSetPropCmd 0058                      SPI_WriteBytes@data 0073  
            radio_comm_ReadData@pollCts 004B                                __ptext10 0379  
                              __ptext11 02AC                                __ptext20 0388  
                              __ptext12 019B                                __ptext13 0345  
                              __ptext14 02CA                                __ptext15 03B5  
                              __ptext16 01DE                                __ptext17 0331  
                              __ptext18 0395                                __ptext19 0358  
                    _radio_comm_GetResp 01DE                                _radioCmd 0034  
                    _radio_comm_SendCmd 02CA                           __size_of_main 0028  
                    _radio_comm_PollCTS 03B5                     ?_radio_comm_GetResp 0076  
                   ?_radio_comm_SendCmd 007B                     ?_radio_comm_PollCTS 0070  
                              int$flags 007E             __end_of_Radio_CheckReceived 0331  
                  ??_radio_comm_GetResp 0077                  __size_of_SPI_ReadBytes 0014  
                  ??_radio_comm_SendCmd 004B                __size_of_si4355_start_rx 002A  
                  ??_radio_comm_PollCTS 007B            radio_comm_ReadData@byteCount 004C  
      si4355_get_int_status@PH_CLR_PEND 0057                                intlevel1 0000  
                     __CFG_CLKOUTEN$OFF 0000                 __size_of_SPI_WriteBytes 0012  
              radio_comm_GetResp@errCnt 0079                   __size_of_SPI_ReadByte 000C  
                            _OPTION_REG 0095  radio_comm_SendCmdGetResp@respByteCount 004E  
                __size_of_SPI_WriteByte 000D                   __size_of_si4355_reset 0001  
                    _RadioConfiguration 005F                           _SPI_ReadBytes 0331  
                          _SPI_ReadByte 0395  
