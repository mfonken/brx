

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Feb 15 01:27:01 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	12LF1840
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 1.41
    42                           ; Generated 25/01/2017 GMT
    43                           ; 
    44                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC12LF1840 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  008C                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  010C                     	;# 
   116  0111                     	;# 
   117  0112                     	;# 
   118  0115                     	;# 
   119  0116                     	;# 
   120  0117                     	;# 
   121  0118                     	;# 
   122  0119                     	;# 
   123  011A                     	;# 
   124  011B                     	;# 
   125  011D                     	;# 
   126  011D                     	;# 
   127  018C                     	;# 
   128  0191                     	;# 
   129  0191                     	;# 
   130  0192                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0193                     	;# 
   134  0194                     	;# 
   135  0195                     	;# 
   136  0196                     	;# 
   137  0199                     	;# 
   138  019A                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019C                     	;# 
   144  019C                     	;# 
   145  019D                     	;# 
   146  019E                     	;# 
   147  019F                     	;# 
   148  020C                     	;# 
   149  0211                     	;# 
   150  0211                     	;# 
   151  0212                     	;# 
   152  0212                     	;# 
   153  0213                     	;# 
   154  0213                     	;# 
   155  0214                     	;# 
   156  0214                     	;# 
   157  0215                     	;# 
   158  0215                     	;# 
   159  0215                     	;# 
   160  0216                     	;# 
   161  0216                     	;# 
   162  0217                     	;# 
   163  0217                     	;# 
   164  0291                     	;# 
   165  0291                     	;# 
   166  0292                     	;# 
   167  0293                     	;# 
   168  0294                     	;# 
   169  0295                     	;# 
   170  0295                     	;# 
   171  0296                     	;# 
   172  0391                     	;# 
   173  0392                     	;# 
   174  0393                     	;# 
   175  039A                     	;# 
   176  039C                     	;# 
   177  039D                     	;# 
   178  039E                     	;# 
   179  039F                     	;# 
   180  0FE4                     	;# 
   181  0FE5                     	;# 
   182  0FE6                     	;# 
   183  0FE7                     	;# 
   184  0FE8                     	;# 
   185  0FE9                     	;# 
   186  0FEA                     	;# 
   187  0FEB                     	;# 
   188  0FED                     	;# 
   189  0FEE                     	;# 
   190  0FEF                     	;# 
   191  0000                     	;# 
   192  0001                     	;# 
   193  0002                     	;# 
   194  0003                     	;# 
   195  0004                     	;# 
   196  0005                     	;# 
   197  0006                     	;# 
   198  0007                     	;# 
   199  0008                     	;# 
   200  0009                     	;# 
   201  000A                     	;# 
   202  000B                     	;# 
   203  000C                     	;# 
   204  0011                     	;# 
   205  0012                     	;# 
   206  0015                     	;# 
   207  0016                     	;# 
   208  0016                     	;# 
   209  0017                     	;# 
   210  0018                     	;# 
   211  0019                     	;# 
   212  001A                     	;# 
   213  001B                     	;# 
   214  001C                     	;# 
   215  001E                     	;# 
   216  001F                     	;# 
   217  008C                     	;# 
   218  0091                     	;# 
   219  0092                     	;# 
   220  0095                     	;# 
   221  0096                     	;# 
   222  0097                     	;# 
   223  0098                     	;# 
   224  0099                     	;# 
   225  009A                     	;# 
   226  009B                     	;# 
   227  009B                     	;# 
   228  009C                     	;# 
   229  009D                     	;# 
   230  009E                     	;# 
   231  010C                     	;# 
   232  0111                     	;# 
   233  0112                     	;# 
   234  0115                     	;# 
   235  0116                     	;# 
   236  0117                     	;# 
   237  0118                     	;# 
   238  0119                     	;# 
   239  011A                     	;# 
   240  011B                     	;# 
   241  011D                     	;# 
   242  011D                     	;# 
   243  018C                     	;# 
   244  0191                     	;# 
   245  0191                     	;# 
   246  0192                     	;# 
   247  0193                     	;# 
   248  0193                     	;# 
   249  0193                     	;# 
   250  0194                     	;# 
   251  0195                     	;# 
   252  0196                     	;# 
   253  0199                     	;# 
   254  019A                     	;# 
   255  019B                     	;# 
   256  019B                     	;# 
   257  019B                     	;# 
   258  019B                     	;# 
   259  019C                     	;# 
   260  019C                     	;# 
   261  019D                     	;# 
   262  019E                     	;# 
   263  019F                     	;# 
   264  020C                     	;# 
   265  0211                     	;# 
   266  0211                     	;# 
   267  0212                     	;# 
   268  0212                     	;# 
   269  0213                     	;# 
   270  0213                     	;# 
   271  0214                     	;# 
   272  0214                     	;# 
   273  0215                     	;# 
   274  0215                     	;# 
   275  0215                     	;# 
   276  0216                     	;# 
   277  0216                     	;# 
   278  0217                     	;# 
   279  0217                     	;# 
   280  0291                     	;# 
   281  0291                     	;# 
   282  0292                     	;# 
   283  0293                     	;# 
   284  0294                     	;# 
   285  0295                     	;# 
   286  0295                     	;# 
   287  0296                     	;# 
   288  0391                     	;# 
   289  0392                     	;# 
   290  0393                     	;# 
   291  039A                     	;# 
   292  039C                     	;# 
   293  039D                     	;# 
   294  039E                     	;# 
   295  039F                     	;# 
   296  0FE4                     	;# 
   297  0FE5                     	;# 
   298  0FE6                     	;# 
   299  0FE7                     	;# 
   300  0FE8                     	;# 
   301  0FE9                     	;# 
   302  0FEA                     	;# 
   303  0FEB                     	;# 
   304  0FED                     	;# 
   305  0FEE                     	;# 
   306  0FEF                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  0011                     	;# 
   321  0012                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  008C                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0095                     	;# 
   337  0096                     	;# 
   338  0097                     	;# 
   339  0098                     	;# 
   340  0099                     	;# 
   341  009A                     	;# 
   342  009B                     	;# 
   343  009B                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  010C                     	;# 
   348  0111                     	;# 
   349  0112                     	;# 
   350  0115                     	;# 
   351  0116                     	;# 
   352  0117                     	;# 
   353  0118                     	;# 
   354  0119                     	;# 
   355  011A                     	;# 
   356  011B                     	;# 
   357  011D                     	;# 
   358  011D                     	;# 
   359  018C                     	;# 
   360  0191                     	;# 
   361  0191                     	;# 
   362  0192                     	;# 
   363  0193                     	;# 
   364  0193                     	;# 
   365  0193                     	;# 
   366  0194                     	;# 
   367  0195                     	;# 
   368  0196                     	;# 
   369  0199                     	;# 
   370  019A                     	;# 
   371  019B                     	;# 
   372  019B                     	;# 
   373  019B                     	;# 
   374  019B                     	;# 
   375  019C                     	;# 
   376  019C                     	;# 
   377  019D                     	;# 
   378  019E                     	;# 
   379  019F                     	;# 
   380  020C                     	;# 
   381  0211                     	;# 
   382  0211                     	;# 
   383  0212                     	;# 
   384  0212                     	;# 
   385  0213                     	;# 
   386  0213                     	;# 
   387  0214                     	;# 
   388  0214                     	;# 
   389  0215                     	;# 
   390  0215                     	;# 
   391  0215                     	;# 
   392  0216                     	;# 
   393  0216                     	;# 
   394  0217                     	;# 
   395  0217                     	;# 
   396  0291                     	;# 
   397  0291                     	;# 
   398  0292                     	;# 
   399  0293                     	;# 
   400  0294                     	;# 
   401  0295                     	;# 
   402  0295                     	;# 
   403  0296                     	;# 
   404  0391                     	;# 
   405  0392                     	;# 
   406  0393                     	;# 
   407  039A                     	;# 
   408  039C                     	;# 
   409  039D                     	;# 
   410  039E                     	;# 
   411  039F                     	;# 
   412  0FE4                     	;# 
   413  0FE5                     	;# 
   414  0FE6                     	;# 
   415  0FE7                     	;# 
   416  0FE8                     	;# 
   417  0FE9                     	;# 
   418  0FEA                     	;# 
   419  0FEB                     	;# 
   420  0FED                     	;# 
   421  0FEE                     	;# 
   422  0FEF                     	;# 
   423  0000                     	;# 
   424  0001                     	;# 
   425  0002                     	;# 
   426  0003                     	;# 
   427  0004                     	;# 
   428  0005                     	;# 
   429  0006                     	;# 
   430  0007                     	;# 
   431  0008                     	;# 
   432  0009                     	;# 
   433  000A                     	;# 
   434  000B                     	;# 
   435  000C                     	;# 
   436  0011                     	;# 
   437  0012                     	;# 
   438  0015                     	;# 
   439  0016                     	;# 
   440  0016                     	;# 
   441  0017                     	;# 
   442  0018                     	;# 
   443  0019                     	;# 
   444  001A                     	;# 
   445  001B                     	;# 
   446  001C                     	;# 
   447  001E                     	;# 
   448  001F                     	;# 
   449  008C                     	;# 
   450  0091                     	;# 
   451  0092                     	;# 
   452  0095                     	;# 
   453  0096                     	;# 
   454  0097                     	;# 
   455  0098                     	;# 
   456  0099                     	;# 
   457  009A                     	;# 
   458  009B                     	;# 
   459  009B                     	;# 
   460  009C                     	;# 
   461  009D                     	;# 
   462  009E                     	;# 
   463  010C                     	;# 
   464  0111                     	;# 
   465  0112                     	;# 
   466  0115                     	;# 
   467  0116                     	;# 
   468  0117                     	;# 
   469  0118                     	;# 
   470  0119                     	;# 
   471  011A                     	;# 
   472  011B                     	;# 
   473  011D                     	;# 
   474  011D                     	;# 
   475  018C                     	;# 
   476  0191                     	;# 
   477  0191                     	;# 
   478  0192                     	;# 
   479  0193                     	;# 
   480  0193                     	;# 
   481  0193                     	;# 
   482  0194                     	;# 
   483  0195                     	;# 
   484  0196                     	;# 
   485  0199                     	;# 
   486  019A                     	;# 
   487  019B                     	;# 
   488  019B                     	;# 
   489  019B                     	;# 
   490  019B                     	;# 
   491  019C                     	;# 
   492  019C                     	;# 
   493  019D                     	;# 
   494  019E                     	;# 
   495  019F                     	;# 
   496  020C                     	;# 
   497  0211                     	;# 
   498  0211                     	;# 
   499  0212                     	;# 
   500  0212                     	;# 
   501  0213                     	;# 
   502  0213                     	;# 
   503  0214                     	;# 
   504  0214                     	;# 
   505  0215                     	;# 
   506  0215                     	;# 
   507  0215                     	;# 
   508  0216                     	;# 
   509  0216                     	;# 
   510  0217                     	;# 
   511  0217                     	;# 
   512  0291                     	;# 
   513  0291                     	;# 
   514  0292                     	;# 
   515  0293                     	;# 
   516  0294                     	;# 
   517  0295                     	;# 
   518  0295                     	;# 
   519  0296                     	;# 
   520  0391                     	;# 
   521  0392                     	;# 
   522  0393                     	;# 
   523  039A                     	;# 
   524  039C                     	;# 
   525  039D                     	;# 
   526  039E                     	;# 
   527  039F                     	;# 
   528  0FE4                     	;# 
   529  0FE5                     	;# 
   530  0FE6                     	;# 
   531  0FE7                     	;# 
   532  0FE8                     	;# 
   533  0FE9                     	;# 
   534  0FEA                     	;# 
   535  0FEB                     	;# 
   536  0FED                     	;# 
   537  0FEE                     	;# 
   538  0FEF                     	;# 
   539  0000                     	;# 
   540  0001                     	;# 
   541  0002                     	;# 
   542  0003                     	;# 
   543  0004                     	;# 
   544  0005                     	;# 
   545  0006                     	;# 
   546  0007                     	;# 
   547  0008                     	;# 
   548  0009                     	;# 
   549  000A                     	;# 
   550  000B                     	;# 
   551  000C                     	;# 
   552  0011                     	;# 
   553  0012                     	;# 
   554  0015                     	;# 
   555  0016                     	;# 
   556  0016                     	;# 
   557  0017                     	;# 
   558  0018                     	;# 
   559  0019                     	;# 
   560  001A                     	;# 
   561  001B                     	;# 
   562  001C                     	;# 
   563  001E                     	;# 
   564  001F                     	;# 
   565  008C                     	;# 
   566  0091                     	;# 
   567  0092                     	;# 
   568  0095                     	;# 
   569  0096                     	;# 
   570  0097                     	;# 
   571  0098                     	;# 
   572  0099                     	;# 
   573  009A                     	;# 
   574  009B                     	;# 
   575  009B                     	;# 
   576  009C                     	;# 
   577  009D                     	;# 
   578  009E                     	;# 
   579  010C                     	;# 
   580  0111                     	;# 
   581  0112                     	;# 
   582  0115                     	;# 
   583  0116                     	;# 
   584  0117                     	;# 
   585  0118                     	;# 
   586  0119                     	;# 
   587  011A                     	;# 
   588  011B                     	;# 
   589  011D                     	;# 
   590  011D                     	;# 
   591  018C                     	;# 
   592  0191                     	;# 
   593  0191                     	;# 
   594  0192                     	;# 
   595  0193                     	;# 
   596  0193                     	;# 
   597  0193                     	;# 
   598  0194                     	;# 
   599  0195                     	;# 
   600  0196                     	;# 
   601  0199                     	;# 
   602  019A                     	;# 
   603  019B                     	;# 
   604  019B                     	;# 
   605  019B                     	;# 
   606  019B                     	;# 
   607  019C                     	;# 
   608  019C                     	;# 
   609  019D                     	;# 
   610  019E                     	;# 
   611  019F                     	;# 
   612  020C                     	;# 
   613  0211                     	;# 
   614  0211                     	;# 
   615  0212                     	;# 
   616  0212                     	;# 
   617  0213                     	;# 
   618  0213                     	;# 
   619  0214                     	;# 
   620  0214                     	;# 
   621  0215                     	;# 
   622  0215                     	;# 
   623  0215                     	;# 
   624  0216                     	;# 
   625  0216                     	;# 
   626  0217                     	;# 
   627  0217                     	;# 
   628  0291                     	;# 
   629  0291                     	;# 
   630  0292                     	;# 
   631  0293                     	;# 
   632  0294                     	;# 
   633  0295                     	;# 
   634  0295                     	;# 
   635  0296                     	;# 
   636  0391                     	;# 
   637  0392                     	;# 
   638  0393                     	;# 
   639  039A                     	;# 
   640  039C                     	;# 
   641  039D                     	;# 
   642  039E                     	;# 
   643  039F                     	;# 
   644  0FE4                     	;# 
   645  0FE5                     	;# 
   646  0FE6                     	;# 
   647  0FE7                     	;# 
   648  0FE8                     	;# 
   649  0FE9                     	;# 
   650  0FEA                     	;# 
   651  0FEB                     	;# 
   652  0FED                     	;# 
   653  0FEE                     	;# 
   654  0FEF                     	;# 
   655  0000                     	;# 
   656  0001                     	;# 
   657  0002                     	;# 
   658  0003                     	;# 
   659  0004                     	;# 
   660  0005                     	;# 
   661  0006                     	;# 
   662  0007                     	;# 
   663  0008                     	;# 
   664  0009                     	;# 
   665  000A                     	;# 
   666  000B                     	;# 
   667  000C                     	;# 
   668  0011                     	;# 
   669  0012                     	;# 
   670  0015                     	;# 
   671  0016                     	;# 
   672  0016                     	;# 
   673  0017                     	;# 
   674  0018                     	;# 
   675  0019                     	;# 
   676  001A                     	;# 
   677  001B                     	;# 
   678  001C                     	;# 
   679  001E                     	;# 
   680  001F                     	;# 
   681  008C                     	;# 
   682  0091                     	;# 
   683  0092                     	;# 
   684  0095                     	;# 
   685  0096                     	;# 
   686  0097                     	;# 
   687  0098                     	;# 
   688  0099                     	;# 
   689  009A                     	;# 
   690  009B                     	;# 
   691  009B                     	;# 
   692  009C                     	;# 
   693  009D                     	;# 
   694  009E                     	;# 
   695  010C                     	;# 
   696  0111                     	;# 
   697  0112                     	;# 
   698  0115                     	;# 
   699  0116                     	;# 
   700  0117                     	;# 
   701  0118                     	;# 
   702  0119                     	;# 
   703  011A                     	;# 
   704  011B                     	;# 
   705  011D                     	;# 
   706  011D                     	;# 
   707  018C                     	;# 
   708  0191                     	;# 
   709  0191                     	;# 
   710  0192                     	;# 
   711  0193                     	;# 
   712  0193                     	;# 
   713  0193                     	;# 
   714  0194                     	;# 
   715  0195                     	;# 
   716  0196                     	;# 
   717  0199                     	;# 
   718  019A                     	;# 
   719  019B                     	;# 
   720  019B                     	;# 
   721  019B                     	;# 
   722  019B                     	;# 
   723  019C                     	;# 
   724  019C                     	;# 
   725  019D                     	;# 
   726  019E                     	;# 
   727  019F                     	;# 
   728  020C                     	;# 
   729  0211                     	;# 
   730  0211                     	;# 
   731  0212                     	;# 
   732  0212                     	;# 
   733  0213                     	;# 
   734  0213                     	;# 
   735  0214                     	;# 
   736  0214                     	;# 
   737  0215                     	;# 
   738  0215                     	;# 
   739  0215                     	;# 
   740  0216                     	;# 
   741  0216                     	;# 
   742  0217                     	;# 
   743  0217                     	;# 
   744  0291                     	;# 
   745  0291                     	;# 
   746  0292                     	;# 
   747  0293                     	;# 
   748  0294                     	;# 
   749  0295                     	;# 
   750  0295                     	;# 
   751  0296                     	;# 
   752  0391                     	;# 
   753  0392                     	;# 
   754  0393                     	;# 
   755  039A                     	;# 
   756  039C                     	;# 
   757  039D                     	;# 
   758  039E                     	;# 
   759  039F                     	;# 
   760  0FE4                     	;# 
   761  0FE5                     	;# 
   762  0FE6                     	;# 
   763  0FE7                     	;# 
   764  0FE8                     	;# 
   765  0FE9                     	;# 
   766  0FEA                     	;# 
   767  0FEB                     	;# 
   768  0FED                     	;# 
   769  0FEE                     	;# 
   770  0FEF                     	;# 
   771  0000                     	;# 
   772  0001                     	;# 
   773  0002                     	;# 
   774  0003                     	;# 
   775  0004                     	;# 
   776  0005                     	;# 
   777  0006                     	;# 
   778  0007                     	;# 
   779  0008                     	;# 
   780  0009                     	;# 
   781  000A                     	;# 
   782  000B                     	;# 
   783  000C                     	;# 
   784  0011                     	;# 
   785  0012                     	;# 
   786  0015                     	;# 
   787  0016                     	;# 
   788  0016                     	;# 
   789  0017                     	;# 
   790  0018                     	;# 
   791  0019                     	;# 
   792  001A                     	;# 
   793  001B                     	;# 
   794  001C                     	;# 
   795  001E                     	;# 
   796  001F                     	;# 
   797  008C                     	;# 
   798  0091                     	;# 
   799  0092                     	;# 
   800  0095                     	;# 
   801  0096                     	;# 
   802  0097                     	;# 
   803  0098                     	;# 
   804  0099                     	;# 
   805  009A                     	;# 
   806  009B                     	;# 
   807  009B                     	;# 
   808  009C                     	;# 
   809  009D                     	;# 
   810  009E                     	;# 
   811  010C                     	;# 
   812  0111                     	;# 
   813  0112                     	;# 
   814  0115                     	;# 
   815  0116                     	;# 
   816  0117                     	;# 
   817  0118                     	;# 
   818  0119                     	;# 
   819  011A                     	;# 
   820  011B                     	;# 
   821  011D                     	;# 
   822  011D                     	;# 
   823  018C                     	;# 
   824  0191                     	;# 
   825  0191                     	;# 
   826  0192                     	;# 
   827  0193                     	;# 
   828  0193                     	;# 
   829  0193                     	;# 
   830  0194                     	;# 
   831  0195                     	;# 
   832  0196                     	;# 
   833  0199                     	;# 
   834  019A                     	;# 
   835  019B                     	;# 
   836  019B                     	;# 
   837  019B                     	;# 
   838  019B                     	;# 
   839  019C                     	;# 
   840  019C                     	;# 
   841  019D                     	;# 
   842  019E                     	;# 
   843  019F                     	;# 
   844  020C                     	;# 
   845  0211                     	;# 
   846  0211                     	;# 
   847  0212                     	;# 
   848  0212                     	;# 
   849  0213                     	;# 
   850  0213                     	;# 
   851  0214                     	;# 
   852  0214                     	;# 
   853  0215                     	;# 
   854  0215                     	;# 
   855  0215                     	;# 
   856  0216                     	;# 
   857  0216                     	;# 
   858  0217                     	;# 
   859  0217                     	;# 
   860  0291                     	;# 
   861  0291                     	;# 
   862  0292                     	;# 
   863  0293                     	;# 
   864  0294                     	;# 
   865  0295                     	;# 
   866  0295                     	;# 
   867  0296                     	;# 
   868  0391                     	;# 
   869  0392                     	;# 
   870  0393                     	;# 
   871  039A                     	;# 
   872  039C                     	;# 
   873  039D                     	;# 
   874  039E                     	;# 
   875  039F                     	;# 
   876  0FE4                     	;# 
   877  0FE5                     	;# 
   878  0FE6                     	;# 
   879  0FE7                     	;# 
   880  0FE8                     	;# 
   881  0FE9                     	;# 
   882  0FEA                     	;# 
   883  0FEB                     	;# 
   884  0FED                     	;# 
   885  0FEE                     	;# 
   886  0FEF                     	;# 
   887                           
   888                           	psect	idataBANK2
   889  0442                     __pidataBANK2:	
   890                           
   891                           ;initializer for _pRadioConfiguration
   892  0442  343D               	retlw	low (_RadioConfiguration| (0+256))
   893                           
   894                           ;initializer for _RadioConfiguration
   895  0443  343C               	retlw	low (_Radio_Configuration_Data_Array| (0+32768))
   896  0444  3480               	retlw	high (_Radio_Configuration_Data_Array| (0+32768))
   897  0445  3400               	retlw	0
   898  0446  3407               	retlw	7
   899  0447  3403               	retlw	3
   900  0448  3400               	retlw	0
   901  0449  34F0               	retlw	240
   902                           
   903                           	psect	stringtext
   904  003C                     __pstringtext:	
   905  003C                     _Radio_Configuration_Data_Array:	
   906  003C  3407               	retlw	7
   907  003D  3402               	retlw	2
   908  003E  3401               	retlw	1
   909  003F  3400               	retlw	0
   910  0040  3401               	retlw	1
   911  0041  34C9               	retlw	201
   912  0042  34C3               	retlw	195
   913  0043  3480               	retlw	128
   914  0044  3405               	retlw	5
   915  0045  3411               	retlw	17
   916  0046  3401               	retlw	1
   917  0047  3401               	retlw	1
   918  0048  3400               	retlw	0
   919  0049  3400               	retlw	0
   920  004A  3408               	retlw	8
   921  004B  3411               	retlw	17
   922  004C  3402               	retlw	2
   923  004D  3404               	retlw	4
   924  004E  3400               	retlw	0
   925  004F  3408               	retlw	8
   926  0050  3406               	retlw	6
   927  0051  3404               	retlw	4
   928  0052  340A               	retlw	10
   929  0053  3405               	retlw	5
   930  0054  3411               	retlw	17
   931  0055  3424               	retlw	36
   932  0056  3401               	retlw	1
   933  0057  3403               	retlw	3
   934  0058  3452               	retlw	82
   935  0059  3472               	retlw	114
   936  005A  3466               	retlw	102
   937  005B  34A7               	retlw	167
   938  005C  34D5               	retlw	213
   939  005D  3471               	retlw	113
   940  005E  3444               	retlw	68
   941  005F  3434               	retlw	52
   942  0060  341A               	retlw	26
   943  0061  34EB               	retlw	235
   944  0062  3426               	retlw	38
   945  0063  3455               	retlw	85
   946  0064  342E               	retlw	46
   947  0065  3435               	retlw	53
   948  0066  3444               	retlw	68
   949  0067  34F5               	retlw	245
   950  0068  3410               	retlw	16
   951  0069  3486               	retlw	134
   952  006A  34D6               	retlw	214
   953  006B  3417               	retlw	23
   954  006C  3480               	retlw	128
   955  006D  3456               	retlw	86
   956  006E  3414               	retlw	20
   957  006F  34BD               	retlw	189
   958  0070  343D               	retlw	61
   959  0071  346E               	retlw	110
   960  0072  3485               	retlw	133
   961  0073  34BE               	retlw	190
   962  0074  3418               	retlw	24
   963  0075  34FB               	retlw	251
   964  0076  34E9               	retlw	233
   965  0077  3498               	retlw	152
   966  0078  340F               	retlw	15
   967  0079  3457               	retlw	87
   968  007A  34FC               	retlw	252
   969  007B  340C               	retlw	12
   970  007C  3421               	retlw	33
   971  007D  3419               	retlw	25
   972  007E  3435               	retlw	53
   973  007F  344E               	retlw	78
   974  0080  3404               	retlw	4
   975  0081  34F7               	retlw	247
   976  0082  34E0               	retlw	224
   977  0083  348E               	retlw	142
   978  0084  347E               	retlw	126
   979  0085  341F               	retlw	31
   980  0086  34F7               	retlw	247
   981  0087  3456               	retlw	86
   982  0088  34CF               	retlw	207
   983  0089  34BC               	retlw	188
   984  008A  3488               	retlw	136
   985  008B  3409               	retlw	9
   986  008C  3401               	retlw	1
   987  008D  349A               	retlw	154
   988  008E  34C5               	retlw	197
   989  008F  34AD               	retlw	173
   990  0090  34C1               	retlw	193
   991  0091  341F               	retlw	31
   992  0092  34E7               	retlw	231
   993  0093  34F7               	retlw	247
   994  0094  347C               	retlw	124
   995  0095  349B               	retlw	155
   996  0096  3419               	retlw	25
   997  0097  34F7               	retlw	247
   998  0098  3420               	retlw	32
   999  0099  34C8               	retlw	200
  1000  009A  3437               	retlw	55
  1001  009B  347B               	retlw	123
  1002  009C  34FE               	retlw	254
  1003  009D  3466               	retlw	102
  1004  009E  3406               	retlw	6
  1005  009F  3444               	retlw	68
  1006  00A0  3489               	retlw	137
  1007  00A1  34A6               	retlw	166
  1008  00A2  344B               	retlw	75
  1009  00A3  34C4               	retlw	196
  1010  00A4  3405               	retlw	5
  1011  00A5  34A0               	retlw	160
  1012  00A6  34F0               	retlw	240
  1013  00A7  34E6               	retlw	230
  1014  00A8  346B               	retlw	107
  1015  00A9  3413               	retlw	19
  1016  00AA  3453               	retlw	83
  1017  00AB  3482               	retlw	130
  1018  00AC  34EE               	retlw	238
  1019  00AD  3445               	retlw	69
  1020  00AE  3474               	retlw	116
  1021  00AF  3417               	retlw	23
  1022  00B0  3441               	retlw	65
  1023  00B1  3459               	retlw	89
  1024  00B2  34F6               	retlw	246
  1025  00B3  3415               	retlw	21
  1026  00B4  3463               	retlw	99
  1027  00B5  34EF               	retlw	239
  1028  00B6  34C1               	retlw	193
  1029  00B7  341D               	retlw	29
  1030  00B8  340B               	retlw	11
  1031  00B9  34BE               	retlw	190
  1032  00BA  345D               	retlw	93
  1033  00BB  34DA               	retlw	218
  1034  00BC  3410               	retlw	16
  1035  00BD  343A               	retlw	58
  1036  00BE  3445               	retlw	69
  1037  00BF  34AF               	retlw	175
  1038  00C0  343E               	retlw	62
  1039  00C1  3496               	retlw	150
  1040  00C2  34A4               	retlw	164
  1041  00C3  3446               	retlw	70
  1042  00C4  34B3               	retlw	179
  1043  00C5  3468               	retlw	104
  1044  00C6  3477               	retlw	119
  1045  00C7  3443               	retlw	67
  1046  00C8  3428               	retlw	40
  1047  00C9  3455               	retlw	85
  1048  00CA  3465               	retlw	101
  1049  00CB  34BF               	retlw	191
  1050  00CC  3401               	retlw	1
  1051  00CD  3400               	retlw	0
  1052  00CE  3470               	retlw	112
  1053  00CF  3466               	retlw	102
  1054  00D0  3498               	retlw	152
  1055  00D1  3491               	retlw	145
  1056  00D2  3496               	retlw	150
  1057  00D3  344B               	retlw	75
  1058  00D4  34DC               	retlw	220
  1059  00D5  3405               	retlw	5
  1060  00D6  3435               	retlw	53
  1061  00D7  348C               	retlw	140
  1062  00D8  3466               	retlw	102
  1063  00D9  344A               	retlw	74
  1064  00DA  34BF               	retlw	191
  1065  00DB  34BB               	retlw	187
  1066  00DC  3411               	retlw	17
  1067  00DD  34D0               	retlw	208
  1068  00DE  347D               	retlw	125
  1069  00DF  342C               	retlw	44
  1070  00E0  34F9               	retlw	249
  1071  00E1  345F               	retlw	95
  1072  00E2  3415               	retlw	21
  1073  00E3  3441               	retlw	65
  1074  00E4  3419               	retlw	25
  1075  00E5  34F0               	retlw	240
  1076  00E6  3435               	retlw	53
  1077  00E7  344F               	retlw	79
  1078  00E8  342D               	retlw	45
  1079  00E9  340A               	retlw	10
  1080  00EA  345A               	retlw	90
  1081  00EB  3438               	retlw	56
  1082  00EC  345C               	retlw	92
  1083  00ED  3467               	retlw	103
  1084  00EE  3414               	retlw	20
  1085  00EF  3482               	retlw	130
  1086  00F0  3450               	retlw	80
  1087  00F1  34E8               	retlw	232
  1088  00F2  347A               	retlw	122
  1089  00F3  340B               	retlw	11
  1090  00F4  3460               	retlw	96
  1091  00F5  345E               	retlw	94
  1092  00F6  3431               	retlw	49
  1093  00F7  3466               	retlw	102
  1094  00F8  343A               	retlw	58
  1095  00F9  34E7               	retlw	231
  1096  00FA  34E2               	retlw	226
  1097  00FB  34E9               	retlw	233
  1098  00FC  343D               	retlw	61
  1099  00FD  34DA               	retlw	218
  1100  00FE  34F8               	retlw	248
  1101  00FF  340E               	retlw	14
  1102  0100  340F               	retlw	15
  1103  0101  3488               	retlw	136
  1104  0102  3410               	retlw	16
  1105  0103  34A7               	retlw	167
  1106  0104  34AB               	retlw	171
  1107  0105  340A               	retlw	10
  1108  0106  3460               	retlw	96
  1109  0107  348B               	retlw	139
  1110  0108  3477               	retlw	119
  1111  0109  342F               	retlw	47
  1112  010A  347A               	retlw	122
  1113  010B  340C               	retlw	12
  1114  010C  3439               	retlw	57
  1115  010D  3499               	retlw	153
  1116  010E  3466               	retlw	102
  1117  010F  34FF               	retlw	255
  1118  0110  3451               	retlw	81
  1119  0111  34C5               	retlw	197
  1120  0112  34D7               	retlw	215
  1121  0113  3492               	retlw	146
  1122  0114  349C               	retlw	156
  1123  0115  3403               	retlw	3
  1124  0116  34E9               	retlw	233
  1125  0117  3482               	retlw	130
  1126  0118  346C               	retlw	108
  1127  0119  3440               	retlw	64
  1128  011A  344B               	retlw	75
  1129  011B  34C7               	retlw	199
  1130  011C  3429               	retlw	41
  1131  011D  3446               	retlw	70
  1132  011E  34C8               	retlw	200
  1133  011F  34DC               	retlw	220
  1134  0120  3479               	retlw	121
  1135  0121  34FC               	retlw	252
  1136  0122  34B2               	retlw	178
  1137  0123  3453               	retlw	83
  1138  0124  344B               	retlw	75
  1139  0125  3477               	retlw	119
  1140  0126  342E               	retlw	46
  1141  0127  3421               	retlw	33
  1142  0128  342F               	retlw	47
  1143  0129  340F               	retlw	15
  1144  012A  347D               	retlw	125
  1145  012B  34B9               	retlw	185
  1146  012C  34CF               	retlw	207
  1147  012D  345F               	retlw	95
  1148  012E  34C7               	retlw	199
  1149  012F  34CE               	retlw	206
  1150  0130  3432               	retlw	50
  1151  0131  3469               	retlw	105
  1152  0132  347F               	retlw	127
  1153  0133  3486               	retlw	134
  1154  0134  3417               	retlw	23
  1155  0135  3448               	retlw	72
  1156  0136  346D               	retlw	109
  1157  0137  3426               	retlw	38
  1158  0138  34BB               	retlw	187
  1159  0139  346A               	retlw	106
  1160  013A  3449               	retlw	73
  1161  013B  3438               	retlw	56
  1162  013C  3427               	retlw	39
  1163  013D  3466               	retlw	102
  1164  013E  3423               	retlw	35
  1165  013F  3403               	retlw	3
  1166  0140  3419               	retlw	25
  1167  0141  3420               	retlw	32
  1168  0142  34D3               	retlw	211
  1169  0143  3408               	retlw	8
  1170  0144  3413               	retlw	19
  1171  0145  3400               	retlw	0
  1172  0146  3400               	retlw	0
  1173  0147  3400               	retlw	0
  1174  0148  3400               	retlw	0
  1175  0149  3400               	retlw	0
  1176  014A  3400               	retlw	0
  1177  014B  3400               	retlw	0
  1178  014C  3400               	retlw	0
  1179  014D                     __end_of_Radio_Configuration_Data_Array:	
  1180  000C                     _PORTA	set	12
  1181  0015                     _TMR0	set	21
  1182  0061                     _RA1	set	97
  1183  0063                     _RA3	set	99
  1184  0060                     _RA0	set	96
  1185  005A                     _TMR0IF	set	90
  1186  0065                     _RA5	set	101
  1187  005F                     _GIE	set	95
  1188  005D                     _TMR0IE	set	93
  1189  008B                     _SSP1IF	set	139
  1190  008C                     _TRISA	set	140
  1191  0095                     _OPTION_REG	set	149
  1192  048B                     _SSP1IE	set	1163
  1193  08ED                     _SSSEL	set	2285
  1194  08EE                     _SDOSEL	set	2286
  1195  018C                     _ANSELA	set	396
  1196  0211                     _SSPBUF	set	529
  1197  10A0                     _BF	set	4256
  1198  10AB                     _SSPM3	set	4267
  1199  10AA                     _SSPM2	set	4266
  1200  10A9                     _SSPM1	set	4265
  1201  10A8                     _SSPM0	set	4264
  1202  10AC                     _CKP	set	4268
  1203  10A6                     _CKE	set	4262
  1204  10A7                     _SMP	set	4263
  1205  10AD                     _SSPEN	set	4269
  1206                           
  1207                           ; #config settings
  1208  0000                     
  1209                           	psect	cinit
  1210  001C                     start_initialization:	
  1211  001C                     __initialization:	
  1212                           
  1213                           ; Initialize objects allocated to BANK2
  1214  001C  3042               	movlw	low __pidataBANK2
  1215  001D  0084               	movwf	4
  1216  001E  3084               	movlw	(high __pidataBANK2)| (0+128)
  1217  001F  0085               	movwf	5
  1218  0020  303C               	movlw	low __pdataBANK2
  1219  0021  0086               	movwf	6
  1220  0022  3001               	movlw	high __pdataBANK2
  1221  0023  0087               	movwf	7
  1222  0024  3008               	movlw	8
  1223  0025  3184  244A  3180   	fcall	init_ram
  1224                           
  1225                           ; Clear objects allocated to COMMON
  1226  0028  01FC               	clrf	__pbssCOMMON& (0+127)
  1227                           
  1228                           ; Clear objects allocated to BANK0
  1229  0029  3060               	movlw	low __pbssBANK0
  1230  002A  0084               	movwf	4
  1231  002B  3000               	movlw	high __pbssBANK0
  1232  002C  0085               	movwf	5
  1233  002D  3010               	movlw	16
  1234  002E  3184  2450  3180   	fcall	clear_ram0
  1235                           
  1236                           ; Clear objects allocated to BANK2
  1237  0031  3020               	movlw	low __pbssBANK2
  1238  0032  0084               	movwf	4
  1239  0033  3001               	movlw	high __pbssBANK2
  1240  0034  0085               	movwf	5
  1241  0035  301C               	movlw	28
  1242  0036  3184  2450         	fcall	clear_ram0
  1243  0038                     end_of_initialization:	
  1244                           ;End of C runtime variable initialization code
  1245                           
  1246  0038                     __end_of__initialization:	
  1247  0038  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1248  0039  0020               	movlb	0
  1249  003A  3182  2A84         	ljmp	_main	;jump to C main() function
  1250                           
  1251                           	psect	bssCOMMON
  1252  007C                     __pbssCOMMON:	
  1253  007C                     _ctsWentHigh:	
  1254  007C                     	ds	1
  1255                           
  1256                           	psect	bssBANK0
  1257  0060                     __pbssBANK0:	
  1258  0060                     _radioCmd:	
  1259  0060                     	ds	16
  1260                           
  1261                           	psect	bssBANK2
  1262  0120                     __pbssBANK2:	
  1263  0120                     _Si4355Cmd:	
  1264  0120                     	ds	16
  1265  0130                     _counter:	
  1266  0130                     	ds	2
  1267  0132                     _STATE:	
  1268  0132                     	ds	1
  1269  0133                     _dummy:	
  1270  0133                     	ds	1
  1271  0134                     _wait:	
  1272  0134                     	ds	1
  1273  0135                     _RadioPacket:	
  1274  0135                     	ds	7
  1275                           
  1276                           	psect	dataBANK2
  1277  013C                     __pdataBANK2:	
  1278  013C                     _pRadioConfiguration:	
  1279  013C                     	ds	1
  1280  013D                     _RadioConfiguration:	
  1281  013D                     	ds	7
  1282                           
  1283                           	psect	inittext
  1284  044A                     init_ram:	
  1285  044A  00FE               	movwf	126
  1286  044B                     initloop:	
  1287  044B  0012               	moviw fsr0++
  1288  044C  001E               	movwi fsr1++
  1289  044D  0BFE               	decfsz	126,f
  1290  044E  2C4B               	goto	initloop
  1291  044F  3400               	retlw	0
  1292                           
  1293                           	psect	clrtext
  1294  0450                     clear_ram0:	
  1295                           ;	Called with FSR0 containing the base address, and
  1296                           ;	WREG with the size to clear
  1297                           
  1298  0450  0064               	clrwdt	;clear the watchdog before getting into this loop
  1299  0451                     clrloop0:	
  1300  0451  0180               	clrf	0	;clear RAM location pointed to by FSR
  1301  0452  3101               	addfsr 0,1
  1302  0453  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1303  0454  2C51               	goto	clrloop0	;have we reached the end yet?
  1304  0455  3400               	retlw	0	;all done for this memory range, return
  1305                           
  1306                           	psect	cstackBANK2
  1307  0144                     __pcstackBANK2:	
  1308  0144                     ??_main:	
  1309                           
  1310                           ; 1 bytes @ 0x0
  1311  0144                     	ds	2
  1312                           
  1313                           	psect	cstackBANK1
  1314  00A0                     __pcstackBANK1:	
  1315  00A0                     si4355_configuration_init@radioCmd:	
  1316                           
  1317                           ; 80 bytes @ 0x0
  1318  00A0                     	ds	80
  1319                           
  1320                           	psect	cstackCOMMON
  1321  0070                     __pcstackCOMMON:	
  1322  0070                     ?_SPI_WriteByte:	
  1323  0070                     ?_SPI_ReadByte:	
  1324                           ; 1 bytes @ 0x0
  1325                           
  1326  0070                     ?_HW_Config:	
  1327                           ; 1 bytes @ 0x0
  1328                           
  1329  0070                     ?_Radio_Init:	
  1330                           ; 1 bytes @ 0x0
  1331                           
  1332  0070                     ?_Radio_StartRX:	
  1333                           ; 1 bytes @ 0x0
  1334                           
  1335  0070                     ?_si4355_fifo_info:	
  1336                           ; 1 bytes @ 0x0
  1337                           
  1338  0070                     ?_Radio_CheckReceived:	
  1339                           ; 1 bytes @ 0x0
  1340                           
  1341  0070                     ?_radio_comm_PollCTS:	
  1342                           ; 1 bytes @ 0x0
  1343                           
  1344  0070                     ?_SPI_Init:	
  1345                           ; 1 bytes @ 0x0
  1346                           
  1347  0070                     ?_main:	
  1348                           ; 1 bytes @ 0x0
  1349                           
  1350  0070                     ?_Timer0_ISR:	
  1351                           ; 1 bytes @ 0x0
  1352                           
  1353  0070                     ??_Timer0_ISR:	
  1354                           ; 1 bytes @ 0x0
  1355                           
  1356  0070                     ?_Radio_PowerUp:	
  1357                           ; 1 bytes @ 0x0
  1358                           
  1359                           
  1360                           ; 1 bytes @ 0x0
  1361  0070                     	ds	1
  1362  0071                     ??_SPI_WriteByte:	
  1363  0071                     ??_SPI_ReadByte:	
  1364                           ; 1 bytes @ 0x1
  1365                           
  1366  0071                     ??_HW_Config:	
  1367                           ; 1 bytes @ 0x1
  1368                           
  1369  0071                     ??_SPI_Init:	
  1370                           ; 1 bytes @ 0x1
  1371                           
  1372                           
  1373                           ; 1 bytes @ 0x1
  1374  0071                     	ds	1
  1375  0072                     SPI_WriteByte@data:	
  1376  0072                     SPI_ReadByte@data:	
  1377                           ; 1 bytes @ 0x2
  1378                           
  1379                           
  1380                           ; 1 bytes @ 0x2
  1381  0072                     	ds	1
  1382  0073                     ?_SPI_WriteBytes:	
  1383  0073                     ?_SPI_ReadBytes:	
  1384                           ; 1 bytes @ 0x3
  1385                           
  1386  0073                     SPI_WriteBytes@data:	
  1387                           ; 1 bytes @ 0x3
  1388                           
  1389  0073                     SPI_ReadBytes@data:	
  1390                           ; 1 bytes @ 0x3
  1391                           
  1392                           
  1393                           ; 2 bytes @ 0x3
  1394  0073                     	ds	1
  1395  0074                     ??_SPI_WriteBytes:	
  1396                           
  1397                           ; 1 bytes @ 0x4
  1398  0074                     	ds	1
  1399  0075                     ??_SPI_ReadBytes:	
  1400  0075                     SPI_WriteBytes@len:	
  1401                           ; 1 bytes @ 0x5
  1402                           
  1403                           
  1404                           ; 1 bytes @ 0x5
  1405  0075                     	ds	1
  1406  0076                     SPI_ReadBytes@len:	
  1407                           
  1408                           ; 1 bytes @ 0x6
  1409  0076                     	ds	1
  1410  0077                     ?_radio_comm_GetResp:	
  1411  0077                     radio_comm_GetResp@pData:	
  1412                           ; 1 bytes @ 0x7
  1413                           
  1414                           
  1415                           ; 1 bytes @ 0x7
  1416  0077                     	ds	1
  1417  0078                     ??_radio_comm_GetResp:	
  1418                           
  1419                           ; 1 bytes @ 0x8
  1420  0078                     	ds	1
  1421  0079                     radio_comm_GetResp@byteCount:	
  1422                           
  1423                           ; 1 bytes @ 0x9
  1424  0079                     	ds	1
  1425  007A                     radio_comm_GetResp@errCnt:	
  1426                           
  1427                           ; 2 bytes @ 0xA
  1428  007A                     	ds	2
  1429  007C                     ??_radio_comm_PollCTS:	
  1430  007C                     ??_radio_comm_ReadData:	
  1431                           ; 1 bytes @ 0xC
  1432                           
  1433  007C                     ??_Radio_PowerUp:	
  1434                           ; 1 bytes @ 0xC
  1435                           
  1436                           
  1437                           	psect	cstackBANK0
  1438  0020                     __pcstackBANK0:	
  1439                           ; 1 bytes @ 0xC
  1440                           
  1441  0020                     ?_radio_comm_SendCmd:	
  1442  0020                     ?_radio_comm_ReadData:	
  1443                           ; 1 bytes @ 0x0
  1444                           
  1445  0020                     radio_comm_SendCmd@pData:	
  1446                           ; 1 bytes @ 0x0
  1447                           
  1448  0020                     radio_comm_ReadData@pollCts:	
  1449                           ; 1 bytes @ 0x0
  1450                           
  1451  0020                     Radio_PowerUp@wDelay:	
  1452                           ; 1 bytes @ 0x0
  1453                           
  1454                           
  1455                           ; 2 bytes @ 0x0
  1456  0020                     	ds	1
  1457  0021                     ??_radio_comm_SendCmd:	
  1458  0021                     radio_comm_ReadData@byteCount:	
  1459                           ; 1 bytes @ 0x1
  1460                           
  1461                           
  1462                           ; 1 bytes @ 0x1
  1463  0021                     	ds	1
  1464  0022                     radio_comm_SendCmd@byteCount:	
  1465  0022                     radio_comm_ReadData@pData:	
  1466                           ; 1 bytes @ 0x2
  1467                           
  1468                           
  1469                           ; 2 bytes @ 0x2
  1470  0022                     	ds	1
  1471  0023                     ?_si4355_start_rx:	
  1472  0023                     ?_radio_comm_SendCmdGetResp:	
  1473                           ; 1 bytes @ 0x3
  1474                           
  1475  0023                     si4355_start_rx@CONDITION:	
  1476                           ; 1 bytes @ 0x3
  1477                           
  1478  0023                     radio_comm_SendCmdGetResp@pCmdData:	
  1479                           ; 1 bytes @ 0x3
  1480                           
  1481                           
  1482                           ; 1 bytes @ 0x3
  1483  0023                     	ds	1
  1484  0024                     radio_comm_SendCmdGetResp@respByteCount:	
  1485  0024                     radio_comm_ReadData@cmd:	
  1486                           ; 1 bytes @ 0x4
  1487                           
  1488  0024                     si4355_start_rx@RX_LEN:	
  1489                           ; 1 bytes @ 0x4
  1490                           
  1491                           
  1492                           ; 2 bytes @ 0x4
  1493  0024                     	ds	1
  1494  0025                     ?_si4355_read_rx_fifo:	
  1495  0025                     si4355_read_rx_fifo@pRxData:	
  1496                           ; 1 bytes @ 0x5
  1497                           
  1498  0025                     radio_comm_SendCmdGetResp@pRespData:	
  1499                           ; 1 bytes @ 0x5
  1500                           
  1501                           
  1502                           ; 1 bytes @ 0x5
  1503  0025                     	ds	1
  1504  0026                     ??_si4355_read_rx_fifo:	
  1505  0026                     ??_radio_comm_SendCmdGetResp:	
  1506                           ; 1 bytes @ 0x6
  1507                           
  1508  0026                     si4355_start_rx@NEXT_STATE1:	
  1509                           ; 1 bytes @ 0x6
  1510                           
  1511                           
  1512                           ; 1 bytes @ 0x6
  1513  0026                     	ds	1
  1514  0027                     si4355_start_rx@NEXT_STATE2:	
  1515  0027                     si4355_read_rx_fifo@numBytes:	
  1516                           ; 1 bytes @ 0x7
  1517                           
  1518  0027                     radio_comm_SendCmdGetResp@cmdByteCount:	
  1519                           ; 1 bytes @ 0x7
  1520                           
  1521                           
  1522                           ; 1 bytes @ 0x7
  1523  0027                     	ds	1
  1524  0028                     ??_si4355_fifo_info:	
  1525  0028                     ?_si4355_get_int_status:	
  1526                           ; 1 bytes @ 0x8
  1527                           
  1528  0028                     si4355_get_int_status@MODEM_CLR_PEND:	
  1529                           ; 1 bytes @ 0x8
  1530                           
  1531  0028                     si4355_start_rx@NEXT_STATE3:	
  1532                           ; 1 bytes @ 0x8
  1533                           
  1534                           
  1535                           ; 1 bytes @ 0x8
  1536  0028                     	ds	1
  1537  0029                     ??_si4355_start_rx:	
  1538  0029                     si4355_get_int_status@CHIP_CLR_PEND:	
  1539                           ; 1 bytes @ 0x9
  1540                           
  1541                           
  1542                           ; 1 bytes @ 0x9
  1543  0029                     	ds	1
  1544  002A                     ??_si4355_get_int_status:	
  1545  002A                     si4355_start_rx@CHANNEL:	
  1546                           ; 1 bytes @ 0xA
  1547                           
  1548                           
  1549                           ; 1 bytes @ 0xA
  1550  002A                     	ds	1
  1551  002B                     si4355_fifo_info@FIFO:	
  1552                           
  1553                           ; 1 bytes @ 0xB
  1554  002B                     	ds	2
  1555  002D                     si4355_get_int_status@PH_CLR_PEND:	
  1556                           
  1557                           ; 1 bytes @ 0xD
  1558  002D                     	ds	1
  1559  002E                     ??_Radio_StartRX:	
  1560  002E                     ??_Radio_CheckReceived:	
  1561                           ; 1 bytes @ 0xE
  1562                           
  1563  002E                     ?_si4355_configuration_init:	
  1564                           ; 1 bytes @ 0xE
  1565                           
  1566  002E                     si4355_configuration_init@pSetPropCmd:	
  1567                           ; 1 bytes @ 0xE
  1568                           
  1569                           
  1570                           ; 2 bytes @ 0xE
  1571  002E                     	ds	2
  1572  0030                     ??_si4355_configuration_init:	
  1573  0030                     Radio_StartRX@channel:	
  1574                           ; 1 bytes @ 0x10
  1575                           
  1576                           
  1577                           ; 1 bytes @ 0x10
  1578  0030                     	ds	1
  1579  0031                     si4355_configuration_init@radioCmd2:	
  1580                           
  1581                           ; 40 bytes @ 0x11
  1582  0031                     	ds	40
  1583  0059                     si4355_configuration_init@numOfBytes_2:	
  1584                           
  1585                           ; 1 bytes @ 0x39
  1586  0059                     	ds	1
  1587  005A                     si4355_configuration_init@second_cmd_buffer:	
  1588                           
  1589                           ; 1 bytes @ 0x3A
  1590  005A                     	ds	1
  1591  005B                     si4355_configuration_init@ctsWentHigh:	
  1592                           
  1593                           ; 1 bytes @ 0x3B
  1594  005B                     	ds	1
  1595  005C                     si4355_configuration_init@numOfBytes:	
  1596                           
  1597                           ; 1 bytes @ 0x3C
  1598  005C                     	ds	1
  1599  005D                     si4355_configuration_init@col:	
  1600                           
  1601                           ; 1 bytes @ 0x3D
  1602  005D                     	ds	1
  1603  005E                     ??_Radio_Init:	
  1604                           
  1605                           ; 1 bytes @ 0x3E
  1606  005E                     	ds	1
  1607  005F                     main@wait:	
  1608                           
  1609                           ; 1 bytes @ 0x3F
  1610  005F                     	ds	1
  1611                           
  1612                           	psect	maintext
  1613  0284                     __pmaintext:	
  1614 ;;
  1615 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1616 ;;
  1617 ;; *************** function _main *****************
  1618 ;; Defined at:
  1619 ;;		line 18 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/main.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;		None
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;  wait            1   63[BANK0 ] unsigned char 
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      void 
  1626 ;; Registers used:
  1627 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1628 ;; Tracked objects:
  1629 ;;		On entry : B1F/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1633 ;;      Params:         0       0       0       0
  1634 ;;      Locals:         0       1       0       0
  1635 ;;      Temps:          0       0       0       2
  1636 ;;      Totals:         0       1       0       2
  1637 ;;Total ram usage:        3 bytes
  1638 ;; Hardware stack levels required when called:   10
  1639 ;; This function calls:
  1640 ;;		_HW_Config
  1641 ;;		_Radio_CheckReceived
  1642 ;;		_Radio_Init
  1643 ;;		_Radio_StartRX
  1644 ;;		_SPI_Init
  1645 ;;		_si4355_fifo_info
  1646 ;; This function is called by:
  1647 ;;		Startup code after reset
  1648 ;; This function uses a non-reentrant model
  1649 ;;
  1650                           
  1651                           
  1652                           ;psect for function _main
  1653  0284                     _main:	
  1654                           
  1655                           ;main.c: 20: HW_Config();
  1656                           
  1657                           ;incstack = 0
  1658                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1659  0284  3184  2436  3182   	fcall	_HW_Config
  1660                           
  1661                           ;main.c: 21: SPI_Init();
  1662  0287  3183  23F1  3182   	fcall	_SPI_Init
  1663                           
  1664                           ;main.c: 22: U8 wait = 1;
  1665  028A  0020               	movlb	0	; select bank0
  1666  028B  01DF               	clrf	main@wait
  1667  028C  0ADF               	incf	main@wait,f
  1668                           
  1669                           ;main.c: 24: _delay((unsigned long)((1000)*(1000000/4000.0)));
  1670  028D  3002               	movlw	2
  1671  028E  0022               	movlb	2	; select bank2
  1672  028F  00C5               	movwf	(??_main^(0+256)+1)
  1673  0290  3045               	movlw	69
  1674  0291  00C4               	movwf	??_main^(0+256)
  1675  0292  30A9               	movlw	169
  1676  0293                     u957:	
  1677  0293  0B89               	decfsz	9,f
  1678  0294  2A93               	goto	u957
  1679  0295  0BC4               	decfsz	??_main^(0+256),f
  1680  0296  2A93               	goto	u957
  1681  0297  0BC5               	decfsz	(??_main^(0+256)+1),f
  1682  0298  2A93               	goto	u957
  1683  0299  3200               	nop2
  1684                           
  1685                           ;main.c: 26: RA5 = 1;
  1686  029A  0020               	movlb	0	; select bank0
  1687  029B  168C               	bsf	12,5	;volatile
  1688                           
  1689                           ;main.c: 36: {
  1690                           ;main.c: 37: switch( STATE )
  1691                           
  1692                           ;main.c: 35: while(1)
  1693  029C  2AB4               	goto	l2063
  1694  029D                     l2053:	
  1695                           ;main.c: 38: {
  1696                           ;main.c: 39: case STARTUP:
  1697                           
  1698                           
  1699                           ;main.c: 40: Radio_Init();
  1700  029D  3182  2237  3182   	fcall	_Radio_Init
  1701  02A0                     l2055:	
  1702                           ;main.c: 41: case ARMED:
  1703                           
  1704                           
  1705                           ;main.c: 42: Radio_StartRX( 0u );
  1706  02A0  3000               	movlw	0
  1707  02A1  3183  2382  3182   	fcall	_Radio_StartRX
  1708                           
  1709                           ;main.c: 44: si4355_fifo_info( 0x02 );
  1710  02A4  3002               	movlw	2
  1711  02A5  3183  2321  3182   	fcall	_si4355_fifo_info
  1712                           
  1713                           ;main.c: 45: STATE = RECEIVING;
  1714  02A8  3002               	movlw	2
  1715  02A9  0022               	movlb	2	; select bank2
  1716  02AA  00C4               	movwf	??_main^(0+256)
  1717  02AB  0844               	movf	??_main^(0+256),w
  1718  02AC  00B2               	movwf	_STATE^(0+256)
  1719                           
  1720                           ;main.c: 46: break;
  1721  02AD  2AB4               	goto	l2063
  1722  02AE                     l2061:	
  1723                           ;main.c: 47: case RECEIVING:
  1724                           
  1725                           
  1726                           ;main.c: 48: if( Radio_CheckReceived() );
  1727  02AE  3183  239D  3182   	fcall	_Radio_CheckReceived
  1728                           
  1729                           ;main.c: 49: STATE = ARMED;
  1730  02B1  0022               	movlb	2	; select bank2
  1731  02B2                     l114:	
  1732                           ;main.c: 51: default:
  1733                           
  1734                           ;main.c: 50: break;
  1735                           
  1736                           
  1737                           ;main.c: 52: STATE = ARMED;
  1738  02B2  01B2               	clrf	_STATE^(0+256)
  1739  02B3  0AB2               	incf	_STATE^(0+256),f
  1740  02B4                     l2063:	
  1741                           ;main.c: 53: }
  1742                           
  1743  02B4  0022               	movlb	2	; select bank2
  1744  02B5  0832               	movf	_STATE^(0+256),w
  1745                           
  1746                           ; Switch size 1, requested type "space"
  1747                           ; Number of cases is 3, Range of values is 0 to 2
  1748                           ; switch strategies available:
  1749                           ; Name         Instructions Cycles
  1750                           ; simple_byte           10     6 (average)
  1751                           ; direct_byte           12     6 (fixed)
  1752                           ; jumptable            260     6 (fixed)
  1753                           ;	Chosen strategy is simple_byte
  1754  02B6  3A00               	xorlw	0	; case 0
  1755  02B7  1903               	skipnz
  1756  02B8  2A9D               	goto	l2053
  1757  02B9  3A01               	xorlw	1	; case 1
  1758  02BA  1903               	skipnz
  1759  02BB  2AA0               	goto	l2055
  1760  02BC  3A03               	xorlw	3	; case 2
  1761  02BD  1903               	skipnz
  1762  02BE  2AAE               	goto	l2061
  1763  02BF  2AB2               	goto	l114
  1764  02C0  2AB4               	goto	l2063
  1765  02C1                     __end_of_main:	
  1766                           ;main.c: 54: }
  1767                           ;main.c: 55: return;
  1768                           
  1769                           
  1770                           	psect	text1
  1771  0321                     __ptext1:	
  1772 ;; *************** function _si4355_fifo_info *****************
  1773 ;; Defined at:
  1774 ;;		line 227 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/si4355.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;  FIFO            1    wreg     unsigned char 
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;  FIFO            1   11[BANK0 ] unsigned char 
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  1    wreg      void 
  1781 ;; Registers used:
  1782 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1788 ;;      Params:         0       0       0       0
  1789 ;;      Locals:         0       1       0       0
  1790 ;;      Temps:          0       3       0       0
  1791 ;;      Totals:         0       4       0       0
  1792 ;;Total ram usage:        4 bytes
  1793 ;; Hardware stack levels used:    1
  1794 ;; Hardware stack levels required when called:    7
  1795 ;; This function calls:
  1796 ;;		_radio_comm_SendCmdGetResp
  1797 ;; This function is called by:
  1798 ;;		_main
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           
  1803                           ;psect for function _si4355_fifo_info
  1804  0321                     _si4355_fifo_info:	
  1805                           
  1806                           ;incstack = 0
  1807                           ; Regs used in _si4355_fifo_info: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1808                           ;si4355_fifo_info@FIFO stored from wreg
  1809  0321  0020               	movlb	0	; select bank0
  1810  0322  00AB               	movwf	si4355_fifo_info@FIFO
  1811                           
  1812                           ;si4355.c: 229: radioCmd[0] = 0x15;
  1813  0323  3015               	movlw	21
  1814  0324  00A8               	movwf	??_si4355_fifo_info
  1815  0325  0828               	movf	??_si4355_fifo_info,w
  1816  0326  00E0               	movwf	_radioCmd
  1817                           
  1818                           ;si4355.c: 230: radioCmd[1] = FIFO;
  1819  0327  082B               	movf	si4355_fifo_info@FIFO,w
  1820  0328  00A8               	movwf	??_si4355_fifo_info
  1821  0329  0828               	movf	??_si4355_fifo_info,w
  1822  032A  00E1               	movwf	_radioCmd+1
  1823                           
  1824                           ;si4355.c: 232: radio_comm_SendCmdGetResp( 2,
  1825                           ;si4355.c: 233: radioCmd,
  1826                           ;si4355.c: 234: 2,
  1827                           ;si4355.c: 235: radioCmd );
  1828  032B  3060               	movlw	(low (_radioCmd| 0))& (0+255)
  1829  032C  00A8               	movwf	??_si4355_fifo_info
  1830  032D  0828               	movf	??_si4355_fifo_info,w
  1831  032E  00A3               	movwf	radio_comm_SendCmdGetResp@pCmdData
  1832  032F  3002               	movlw	2
  1833  0330  00A9               	movwf	??_si4355_fifo_info+1
  1834  0331  0829               	movf	??_si4355_fifo_info+1,w
  1835  0332  00A4               	movwf	radio_comm_SendCmdGetResp@respByteCount
  1836  0333  3060               	movlw	(low (_radioCmd| 0))& (0+255)
  1837  0334  00AA               	movwf	??_si4355_fifo_info+2
  1838  0335  082A               	movf	??_si4355_fifo_info+2,w
  1839  0336  00A5               	movwf	radio_comm_SendCmdGetResp@pRespData
  1840  0337  3002               	movlw	2
  1841  0338  3183  23DE         	fcall	_radio_comm_SendCmdGetResp
  1842                           
  1843                           ;si4355.c: 237: Si4355Cmd.FIFO_INFO.RX_FIFO_COUNT = radioCmd[0];
  1844  033A  0020               	movlb	0	; select bank0
  1845  033B  0860               	movf	_radioCmd,w
  1846  033C  00A8               	movwf	??_si4355_fifo_info
  1847  033D  0828               	movf	??_si4355_fifo_info,w
  1848  033E  0022               	movlb	2	; select bank2
  1849  033F  00A0               	movwf	_Si4355Cmd^(0+256)
  1850                           
  1851                           ;si4355.c: 238: Si4355Cmd.FIFO_INFO.TX_FIFO_SPACE = radioCmd[1];
  1852  0340  0020               	movlb	0	; select bank0
  1853  0341  0861               	movf	_radioCmd+1,w
  1854  0342  00A8               	movwf	??_si4355_fifo_info
  1855  0343  0828               	movf	??_si4355_fifo_info,w
  1856  0344  0022               	movlb	2	; select bank2
  1857  0345  00A1               	movwf	(_Si4355Cmd^(0+256)+1)
  1858  0346  0008               	return
  1859  0347                     __end_of_si4355_fifo_info:	
  1860                           
  1861                           	psect	text2
  1862  03F1                     __ptext2:	
  1863 ;; *************** function _SPI_Init *****************
  1864 ;; Defined at:
  1865 ;;		line 7 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/spi.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;		None
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;		None
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		None
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1879 ;;      Params:         0       0       0       0
  1880 ;;      Locals:         0       0       0       0
  1881 ;;      Temps:          0       0       0       0
  1882 ;;      Totals:         0       0       0       0
  1883 ;;Total ram usage:        0 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; Hardware stack levels required when called:    1
  1886 ;; This function calls:
  1887 ;;		Nothing
  1888 ;; This function is called by:
  1889 ;;		_main
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893                           
  1894                           ;psect for function _SPI_Init
  1895  03F1                     _SPI_Init:	
  1896                           
  1897                           ;spi.c: 10: SSPEN = 0;
  1898                           
  1899                           ;incstack = 0
  1900                           ; Regs used in _SPI_Init: []
  1901  03F1  0024               	movlb	4	; select bank4
  1902  03F2  1295               	bcf	21,5	;volatile
  1903                           
  1904                           ;spi.c: 12: SDOSEL = 1;
  1905  03F3  0022               	movlb	2	; select bank2
  1906  03F4  171D               	bsf	29,6	;volatile
  1907                           
  1908                           ;spi.c: 13: SSSEL = 0;
  1909  03F5  129D               	bcf	29,5	;volatile
  1910                           
  1911                           ;spi.c: 15: SMP = 0;
  1912  03F6  0024               	movlb	4	; select bank4
  1913  03F7  1394               	bcf	20,7	;volatile
  1914                           
  1915                           ;spi.c: 17: CKE = 0;
  1916  03F8  1314               	bcf	20,6	;volatile
  1917                           
  1918                           ;spi.c: 19: CKP = 0;
  1919  03F9  1215               	bcf	21,4	;volatile
  1920                           
  1921                           ;spi.c: 21: SSPM0 = 1;
  1922  03FA  1415               	bsf	21,0	;volatile
  1923                           
  1924                           ;spi.c: 22: SSPM1 = 0;
  1925  03FB  1095               	bcf	21,1	;volatile
  1926                           
  1927                           ;spi.c: 23: SSPM2 = 0;
  1928  03FC  1115               	bcf	21,2	;volatile
  1929                           
  1930                           ;spi.c: 24: SSPM3 = 0;
  1931  03FD  1195               	bcf	21,3	;volatile
  1932                           
  1933                           ;spi.c: 26: SSP1IE = 1;
  1934  03FE  0021               	movlb	1	; select bank1
  1935  03FF  1591               	bsf	17,3	;volatile
  1936                           
  1937                           ;spi.c: 28: SSPEN = 1;
  1938  0400  0024               	movlb	4	; select bank4
  1939  0401  1695               	bsf	21,5	;volatile
  1940  0402  0008               	return
  1941  0403                     __end_of_SPI_Init:	
  1942                           
  1943                           	psect	text3
  1944  0382                     __ptext3:	
  1945 ;; *************** function _Radio_StartRX *****************
  1946 ;; Defined at:
  1947 ;;		line 69 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/radio.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;  channel         1    wreg     unsigned char 
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;  channel         1   16[BANK0 ] unsigned char 
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  1    wreg      void 
  1954 ;; Registers used:
  1955 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1961 ;;      Params:         0       0       0       0
  1962 ;;      Locals:         0       1       0       0
  1963 ;;      Temps:          0       2       0       0
  1964 ;;      Totals:         0       3       0       0
  1965 ;;Total ram usage:        3 bytes
  1966 ;; Hardware stack levels used:    1
  1967 ;; Hardware stack levels required when called:    8
  1968 ;; This function calls:
  1969 ;;		_si4355_get_int_status
  1970 ;;		_si4355_start_rx
  1971 ;; This function is called by:
  1972 ;;		_main
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           
  1976                           
  1977                           ;psect for function _Radio_StartRX
  1978  0382                     _Radio_StartRX:	
  1979                           
  1980                           ;incstack = 0
  1981                           ; Regs used in _Radio_StartRX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1982                           ;Radio_StartRX@channel stored from wreg
  1983  0382  0020               	movlb	0	; select bank0
  1984  0383  00B0               	movwf	Radio_StartRX@channel
  1985                           
  1986                           ;radio.c: 72: si4355_get_int_status( 0u, 0u, 0u );
  1987  0384  01A8               	clrf	si4355_get_int_status@MODEM_CLR_PEND
  1988  0385  01A9               	clrf	si4355_get_int_status@CHIP_CLR_PEND
  1989  0386  3000               	movlw	0
  1990  0387  3181  21E4  3183   	fcall	_si4355_get_int_status
  1991                           
  1992                           ;radio.c: 75: si4355_start_rx( channel, 0u, 0u,
  1993                           ;radio.c: 76: 8,
  1994                           ;radio.c: 77: 1,
  1995                           ;radio.c: 78: 8 );
  1996  038A  0020               	movlb	0	; select bank0
  1997  038B  01A3               	clrf	si4355_start_rx@CONDITION
  1998  038C  3000               	movlw	0
  1999  038D  00A4               	movwf	si4355_start_rx@RX_LEN
  2000  038E  00A5               	movwf	si4355_start_rx@RX_LEN+1
  2001  038F  3008               	movlw	8
  2002  0390  00AE               	movwf	??_Radio_StartRX
  2003  0391  082E               	movf	??_Radio_StartRX,w
  2004  0392  00A6               	movwf	si4355_start_rx@NEXT_STATE1
  2005  0393  01A7               	clrf	si4355_start_rx@NEXT_STATE2
  2006  0394  0AA7               	incf	si4355_start_rx@NEXT_STATE2,f
  2007  0395  3008               	movlw	8
  2008  0396  00AF               	movwf	??_Radio_StartRX+1
  2009  0397  082F               	movf	??_Radio_StartRX+1,w
  2010  0398  00A8               	movwf	si4355_start_rx@NEXT_STATE3
  2011  0399  0830               	movf	Radio_StartRX@channel,w
  2012  039A  3182  22F7         	fcall	_si4355_start_rx
  2013  039C  0008               	return
  2014  039D                     __end_of_Radio_StartRX:	
  2015                           
  2016                           	psect	text4
  2017  02F7                     __ptext4:	
  2018 ;; *************** function _si4355_start_rx *****************
  2019 ;; Defined at:
  2020 ;;		line 288 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/si4355.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  CHANNEL         1    wreg     unsigned char 
  2023 ;;  CONDITION       1    3[BANK0 ] unsigned char 
  2024 ;;  RX_LEN          2    4[BANK0 ] unsigned int 
  2025 ;;  NEXT_STATE1     1    6[BANK0 ] unsigned char 
  2026 ;;  NEXT_STATE2     1    7[BANK0 ] unsigned char 
  2027 ;;  NEXT_STATE3     1    8[BANK0 ] unsigned char 
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;  CHANNEL         1   10[BANK0 ] unsigned char 
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      void 
  2032 ;; Registers used:
  2033 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2039 ;;      Params:         0       6       0       0
  2040 ;;      Locals:         0       1       0       0
  2041 ;;      Temps:          0       1       0       0
  2042 ;;      Totals:         0       8       0       0
  2043 ;;Total ram usage:        8 bytes
  2044 ;; Hardware stack levels used:    1
  2045 ;; Hardware stack levels required when called:    6
  2046 ;; This function calls:
  2047 ;;		_radio_comm_SendCmd
  2048 ;; This function is called by:
  2049 ;;		_Radio_StartRX
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053                           
  2054                           ;psect for function _si4355_start_rx
  2055  02F7                     _si4355_start_rx:	
  2056                           
  2057                           ;incstack = 0
  2058                           ; Regs used in _si4355_start_rx: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2059                           ;si4355_start_rx@CHANNEL stored from wreg
  2060  02F7  0020               	movlb	0	; select bank0
  2061  02F8  00AA               	movwf	si4355_start_rx@CHANNEL
  2062                           
  2063                           ;si4355.c: 290: radioCmd[0] = 0x32;
  2064  02F9  3032               	movlw	50
  2065  02FA  00A9               	movwf	??_si4355_start_rx
  2066  02FB  0829               	movf	??_si4355_start_rx,w
  2067  02FC  00E0               	movwf	_radioCmd
  2068                           
  2069                           ;si4355.c: 291: radioCmd[1] = CHANNEL;
  2070  02FD  082A               	movf	si4355_start_rx@CHANNEL,w
  2071  02FE  00A9               	movwf	??_si4355_start_rx
  2072  02FF  0829               	movf	??_si4355_start_rx,w
  2073  0300  00E1               	movwf	_radioCmd+1
  2074                           
  2075                           ;si4355.c: 292: radioCmd[2] = CONDITION;
  2076  0301  0823               	movf	si4355_start_rx@CONDITION,w
  2077  0302  00A9               	movwf	??_si4355_start_rx
  2078  0303  0829               	movf	??_si4355_start_rx,w
  2079  0304  00E2               	movwf	_radioCmd+2
  2080                           
  2081                           ;si4355.c: 293: radioCmd[3] = ( U8 )( RX_LEN >> 8 );
  2082  0305  0825               	movf	si4355_start_rx@RX_LEN+1,w
  2083  0306  00A9               	movwf	??_si4355_start_rx
  2084  0307  0829               	movf	??_si4355_start_rx,w
  2085  0308  00E3               	movwf	_radioCmd+3
  2086                           
  2087                           ;si4355.c: 294: radioCmd[4] = ( U8 )( RX_LEN );
  2088  0309  0824               	movf	si4355_start_rx@RX_LEN,w
  2089  030A  00A9               	movwf	??_si4355_start_rx
  2090  030B  0829               	movf	??_si4355_start_rx,w
  2091  030C  00E4               	movwf	_radioCmd+4
  2092                           
  2093                           ;si4355.c: 295: radioCmd[5] = NEXT_STATE1;
  2094  030D  0826               	movf	si4355_start_rx@NEXT_STATE1,w
  2095  030E  00A9               	movwf	??_si4355_start_rx
  2096  030F  0829               	movf	??_si4355_start_rx,w
  2097  0310  00E5               	movwf	_radioCmd+5
  2098                           
  2099                           ;si4355.c: 296: radioCmd[6] = NEXT_STATE2;
  2100  0311  0827               	movf	si4355_start_rx@NEXT_STATE2,w
  2101  0312  00A9               	movwf	??_si4355_start_rx
  2102  0313  0829               	movf	??_si4355_start_rx,w
  2103  0314  00E6               	movwf	_radioCmd+6
  2104                           
  2105                           ;si4355.c: 297: radioCmd[7] = NEXT_STATE3;
  2106  0315  0828               	movf	si4355_start_rx@NEXT_STATE3,w
  2107  0316  00A9               	movwf	??_si4355_start_rx
  2108  0317  0829               	movf	??_si4355_start_rx,w
  2109  0318  00E7               	movwf	_radioCmd+7
  2110                           
  2111                           ;si4355.c: 299: radio_comm_SendCmd( 8, radioCmd );
  2112  0319  3060               	movlw	(low (_radioCmd| 0))& (0+255)
  2113  031A  00A9               	movwf	??_si4355_start_rx
  2114  031B  0829               	movf	??_si4355_start_rx,w
  2115  031C  00A0               	movwf	radio_comm_SendCmd@pData
  2116  031D  3008               	movlw	8
  2117  031E  3183  2365         	fcall	_radio_comm_SendCmd
  2118  0320  0008               	return
  2119  0321                     __end_of_si4355_start_rx:	
  2120                           
  2121                           	psect	text5
  2122  0237                     __ptext5:	
  2123 ;; *************** function _Radio_Init *****************
  2124 ;; Defined at:
  2125 ;;		line 24 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/radio.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;		None
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;		None
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2139 ;;      Params:         0       0       0       0
  2140 ;;      Locals:         0       0       0       0
  2141 ;;      Temps:          0       1       0       0
  2142 ;;      Totals:         0       1       0       0
  2143 ;;Total ram usage:        1 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:    9
  2146 ;; This function calls:
  2147 ;;		_Radio_PowerUp
  2148 ;;		_si4355_configuration_init
  2149 ;;		_si4355_get_int_status
  2150 ;; This function is called by:
  2151 ;;		_main
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           
  2156                           ;psect for function _Radio_Init
  2157  0237                     _Radio_Init:	
  2158                           
  2159                           ;radio.c: 27: Radio_PowerUp();
  2160                           
  2161                           ;incstack = 0
  2162                           ; Regs used in _Radio_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2163  0237  3184  2456  3182   	fcall	_Radio_PowerUp
  2164                           
  2165                           ;radio.c: 30: while( SUCCESS != si4355_configuration_init( pRadioConfiguration->Radio_Co
      +                          nfigurationArray ) )
  2166  023A  0022               	movlb	2	; select bank2
  2167  023B  083C               	movf	_pRadioConfiguration^(0+256),w
  2168  023C  0086               	movwf	6
  2169  023D  3001               	movlw	1	; select bank2/3
  2170  023E  0087               	movwf	7
  2171  023F  3F40               	moviw [0]fsr1
  2172  0240  0020               	movlb	0	; select bank0
  2173  0241  00AE               	movwf	si4355_configuration_init@pSetPropCmd
  2174  0242  3F41               	moviw [1]fsr1
  2175  0243  00AF               	movwf	si4355_configuration_init@pSetPropCmd+1
  2176  0244  3181  214D  3182   	fcall	_si4355_configuration_init
  2177  0247  3A00               	xorlw	0
  2178  0248  1D03               	skipz
  2179  0249  2A37               	goto	_Radio_Init
  2180                           
  2181                           ;radio.c: 34: }
  2182                           ;radio.c: 35: RA5 = 0;
  2183                           
  2184                           ;radio.c: 31: {
  2185                           ;radio.c: 33: Radio_PowerUp();
  2186  024A  0020               	movlb	0	; select bank0
  2187  024B  128C               	bcf	12,5	;volatile
  2188                           
  2189                           ;radio.c: 36: _delay((unsigned long)((50)*(1000000/4000.0)));
  2190  024C  3011               	movlw	17
  2191  024D  0020               	movlb	0	; select bank0
  2192  024E  00DE               	movwf	??_Radio_Init
  2193  024F  303A               	movlw	58
  2194  0250                     u967:	
  2195  0250  0B89               	decfsz	9,f
  2196  0251  2A50               	goto	u967
  2197  0252  0BDE               	decfsz	??_Radio_Init,f
  2198  0253  2A50               	goto	u967
  2199  0254  0000               	nop
  2200                           
  2201                           ;radio.c: 37: RA5 = 1;
  2202  0255  0020               	movlb	0	; select bank0
  2203  0256  168C               	bsf	12,5	;volatile
  2204                           
  2205                           ;radio.c: 38: _delay((unsigned long)((50)*(1000000/4000.0)));
  2206  0257  3011               	movlw	17
  2207  0258  0020               	movlb	0	; select bank0
  2208  0259  00DE               	movwf	??_Radio_Init
  2209  025A  303A               	movlw	58
  2210  025B                     u977:	
  2211  025B  0B89               	decfsz	9,f
  2212  025C  2A5B               	goto	u977
  2213  025D  0BDE               	decfsz	??_Radio_Init,f
  2214  025E  2A5B               	goto	u977
  2215  025F  0000               	nop
  2216                           
  2217                           ;radio.c: 39: RA5 = 0;
  2218  0260  0020               	movlb	0	; select bank0
  2219  0261  128C               	bcf	12,5	;volatile
  2220                           
  2221                           ;radio.c: 40: _delay((unsigned long)((50)*(1000000/4000.0)));
  2222  0262  3011               	movlw	17
  2223  0263  0020               	movlb	0	; select bank0
  2224  0264  00DE               	movwf	??_Radio_Init
  2225  0265  303A               	movlw	58
  2226  0266                     u987:	
  2227  0266  0B89               	decfsz	9,f
  2228  0267  2A66               	goto	u987
  2229  0268  0BDE               	decfsz	??_Radio_Init,f
  2230  0269  2A66               	goto	u987
  2231  026A  0000               	nop
  2232                           
  2233                           ;radio.c: 41: RA5 = 1;
  2234  026B  0020               	movlb	0	; select bank0
  2235  026C  168C               	bsf	12,5	;volatile
  2236                           
  2237                           ;radio.c: 42: _delay((unsigned long)((50)*(1000000/4000.0)));
  2238  026D  3011               	movlw	17
  2239  026E  0020               	movlb	0	; select bank0
  2240  026F  00DE               	movwf	??_Radio_Init
  2241  0270  303A               	movlw	58
  2242  0271                     u997:	
  2243  0271  0B89               	decfsz	9,f
  2244  0272  2A71               	goto	u997
  2245  0273  0BDE               	decfsz	??_Radio_Init,f
  2246  0274  2A71               	goto	u997
  2247  0275  0000               	nop
  2248                           
  2249                           ;radio.c: 43: RA5 = 0;
  2250  0276  0020               	movlb	0	; select bank0
  2251  0277  128C               	bcf	12,5	;volatile
  2252                           
  2253                           ;radio.c: 44: _delay((unsigned long)((50)*(1000000/4000.0)));
  2254  0278  3011               	movlw	17
  2255  0279  0020               	movlb	0	; select bank0
  2256  027A  00DE               	movwf	??_Radio_Init
  2257  027B  303A               	movlw	58
  2258  027C                     u1007:	
  2259  027C  0B89               	decfsz	9,f
  2260  027D  2A7C               	goto	u1007
  2261  027E  0BDE               	decfsz	??_Radio_Init,f
  2262  027F  2A7C               	goto	u1007
  2263  0280  0000               	nop
  2264                           
  2265                           ;radio.c: 45: RA5 = 1;
  2266  0281  0020               	movlb	0	; select bank0
  2267  0282  168C               	bsf	12,5	;volatile
  2268  0283                     l159:	
  2269                           ;radio.c: 46: while(1);
  2270                           
  2271  0283  2A83               	goto	l159
  2272  0284                     __end_of_Radio_Init:	
  2273                           ;radio.c: 48: si4355_get_int_status(0u, 0u, 0u);
  2274                           
  2275                           
  2276                           	psect	text6
  2277  014D                     __ptext6:	
  2278 ;; *************** function _si4355_configuration_init *****************
  2279 ;; Defined at:
  2280 ;;		line 13 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/si4355.c"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;  pSetPropCmd     2   14[BANK0 ] PTR unsigned char 
  2283 ;;		 -> Radio_Configuration_Data_Array(273), 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;  ctsWentHigh     1   59[BANK0 ] unsigned char 
  2286 ;;  radioCmd       80    0[BANK1 ] unsigned char [80]
  2287 ;;  radioCmd2      40   17[BANK0 ] unsigned char [40]
  2288 ;;  col             1   61[BANK0 ] unsigned char 
  2289 ;;  numOfBytes      1   60[BANK0 ] unsigned char 
  2290 ;;  second_cmd_b    1   58[BANK0 ] unsigned char 
  2291 ;;  numOfBytes_2    1   57[BANK0 ] unsigned char 
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  1    wreg      unsigned char 
  2294 ;; Registers used:
  2295 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2301 ;;      Params:         0       2       0       0
  2302 ;;      Locals:         0      45      80       0
  2303 ;;      Temps:          0       1       0       0
  2304 ;;      Totals:         0      48      80       0
  2305 ;;Total ram usage:      128 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; Hardware stack levels required when called:    8
  2308 ;; This function calls:
  2309 ;;		_SPI_ReadByte
  2310 ;;		_SPI_WriteByte
  2311 ;;		_SPI_WriteBytes
  2312 ;;		_radio_comm_SendCmdGetResp
  2313 ;;		_si4355_get_int_status
  2314 ;; This function is called by:
  2315 ;;		_Radio_Init
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           
  2320                           ;psect for function _si4355_configuration_init
  2321  014D                     _si4355_configuration_init:	
  2322                           
  2323                           ;si4355.c: 15: U8 col = 0;
  2324                           
  2325                           ;incstack = 0
  2326                           ; Regs used in _si4355_configuration_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2327  014D  0020               	movlb	0	; select bank0
  2328  014E  01DD               	clrf	si4355_configuration_init@col
  2329                           
  2330                           ;si4355.c: 16: U8 numOfBytes = 0, numOfBytes_2 = 0;
  2331  014F  01DC               	clrf	si4355_configuration_init@numOfBytes
  2332  0150  01D9               	clrf	si4355_configuration_init@numOfBytes_2
  2333                           
  2334                           ;si4355.c: 17: U8 radioCmd[80];
  2335                           ;si4355.c: 18: U8 radioCmd2[40];
  2336                           ;si4355.c: 19: bool second_cmd_buffer = 0;
  2337  0151  01DA               	clrf	si4355_configuration_init@second_cmd_buffer
  2338  0152                     l1977:	
  2339                           ;si4355.c: 21: while ( *pSetPropCmd != 0x00 )
  2340                           
  2341  0152  0020               	movlb	0	; select bank0
  2342  0153  082E               	movf	si4355_configuration_init@pSetPropCmd,w
  2343  0154  0084               	movwf	4
  2344  0155  082F               	movf	si4355_configuration_init@pSetPropCmd+1,w
  2345  0156  0085               	movwf	5
  2346  0157  0012               	moviw fsr0++
  2347  0158  1903               	btfsc	3,2
  2348  0159  29E2               	goto	l1979
  2349                           
  2350                           ;si4355.c: 22: {
  2351                           ;si4355.c: 28: numOfBytes = *pSetPropCmd++;
  2352  015A  082E               	movf	si4355_configuration_init@pSetPropCmd,w
  2353  015B  0084               	movwf	4
  2354  015C  082F               	movf	si4355_configuration_init@pSetPropCmd+1,w
  2355  015D  0085               	movwf	5
  2356  015E  0800               	movf	0,w	;code access
  2357  015F  00B0               	movwf	??_si4355_configuration_init
  2358  0160  0830               	movf	??_si4355_configuration_init,w
  2359  0161  00DC               	movwf	si4355_configuration_init@numOfBytes
  2360  0162  3001               	movlw	1
  2361  0163  07AE               	addwf	si4355_configuration_init@pSetPropCmd,f
  2362  0164  3000               	movlw	0
  2363  0165  3DAF               	addwfc	si4355_configuration_init@pSetPropCmd+1,f
  2364                           
  2365                           ;si4355.c: 30: if ( numOfBytes > 80u )
  2366  0166  3051               	movlw	81
  2367  0167  025C               	subwf	si4355_configuration_init@numOfBytes,w
  2368  0168  1C03               	skipc
  2369  0169  296C               	goto	l1937
  2370                           
  2371                           ;si4355.c: 31: {
  2372                           ;si4355.c: 32: second_cmd_buffer = 1;
  2373  016A  01DA               	clrf	si4355_configuration_init@second_cmd_buffer
  2374  016B  0ADA               	incf	si4355_configuration_init@second_cmd_buffer,f
  2375  016C                     l1937:	
  2376                           
  2377                           ;si4355.c: 35: }
  2378                           ;si4355.c: 38: for ( col = 0u; col < numOfBytes && col < 80u; col++ )
  2379  016C  01DD               	clrf	si4355_configuration_init@col
  2380  016D  2982               	goto	l1945
  2381  016E                     l1939:	
  2382                           
  2383                           ;si4355.c: 39: {
  2384                           ;si4355.c: 40: radioCmd[col] = *pSetPropCmd;
  2385  016E  082E               	movf	si4355_configuration_init@pSetPropCmd,w
  2386  016F  0084               	movwf	4
  2387  0170  082F               	movf	si4355_configuration_init@pSetPropCmd+1,w
  2388  0171  0085               	movwf	5
  2389  0172  0800               	movf	0,w	;code access
  2390  0173  00B0               	movwf	??_si4355_configuration_init
  2391  0174  085D               	movf	si4355_configuration_init@col,w
  2392  0175  3EA0               	addlw	(low (si4355_configuration_init@radioCmd| 0))& (0+255)
  2393  0176  0086               	movwf	6
  2394  0177  0187               	clrf	7
  2395  0178  0830               	movf	??_si4355_configuration_init,w
  2396  0179  0081               	movwf	1
  2397                           
  2398                           ;si4355.c: 41: pSetPropCmd++;
  2399  017A  3001               	movlw	1
  2400  017B  07AE               	addwf	si4355_configuration_init@pSetPropCmd,f
  2401  017C  3000               	movlw	0
  2402  017D  3DAF               	addwfc	si4355_configuration_init@pSetPropCmd+1,f
  2403  017E  3001               	movlw	1
  2404  017F  00B0               	movwf	??_si4355_configuration_init
  2405  0180  0830               	movf	??_si4355_configuration_init,w
  2406  0181  07DD               	addwf	si4355_configuration_init@col,f
  2407  0182                     l1945:	
  2408  0182  085C               	movf	si4355_configuration_init@numOfBytes,w
  2409  0183  025D               	subwf	si4355_configuration_init@col,w
  2410  0184  1803               	skipnc
  2411  0185  298A               	goto	l1949
  2412  0186  3050               	movlw	80
  2413  0187  025D               	subwf	si4355_configuration_init@col,w
  2414  0188  1C03               	skipc
  2415  0189  296E               	goto	l1939
  2416  018A                     l1949:	
  2417                           
  2418                           ;si4355.c: 42: }
  2419                           ;si4355.c: 43: if(second_cmd_buffer)
  2420  018A  085A               	movf	si4355_configuration_init@second_cmd_buffer,w
  2421  018B  1903               	btfsc	3,2
  2422  018C  29CE               	goto	l1973
  2423                           
  2424                           ;si4355.c: 44: {
  2425                           ;si4355.c: 45: numOfBytes -= 80u;
  2426  018D  3050               	movlw	80
  2427  018E  02DC               	subwf	si4355_configuration_init@numOfBytes,f
  2428                           
  2429                           ;si4355.c: 46: for ( col = 0u; col < numOfBytes; col++ )
  2430  018F  01DD               	clrf	si4355_configuration_init@col
  2431  0190                     l1961:	
  2432  0190  085C               	movf	si4355_configuration_init@numOfBytes,w
  2433  0191  025D               	subwf	si4355_configuration_init@col,w
  2434  0192  1803               	btfsc	3,0
  2435  0193  29A9               	goto	l211
  2436                           
  2437                           ;si4355.c: 47: {
  2438                           ;si4355.c: 48: radioCmd2[col] = *pSetPropCmd;
  2439  0194  082E               	movf	si4355_configuration_init@pSetPropCmd,w
  2440  0195  0084               	movwf	4
  2441  0196  082F               	movf	si4355_configuration_init@pSetPropCmd+1,w
  2442  0197  0085               	movwf	5
  2443  0198  0800               	movf	0,w	;code access
  2444  0199  00B0               	movwf	??_si4355_configuration_init
  2445  019A  085D               	movf	si4355_configuration_init@col,w
  2446  019B  3E31               	addlw	(low (si4355_configuration_init@radioCmd2| 0))& (0+255)
  2447  019C  0086               	movwf	6
  2448  019D  0187               	clrf	7
  2449  019E  0830               	movf	??_si4355_configuration_init,w
  2450  019F  0081               	movwf	1
  2451                           
  2452                           ;si4355.c: 49: pSetPropCmd++;
  2453  01A0  3001               	movlw	1
  2454  01A1  07AE               	addwf	si4355_configuration_init@pSetPropCmd,f
  2455  01A2  3000               	movlw	0
  2456  01A3  3DAF               	addwfc	si4355_configuration_init@pSetPropCmd+1,f
  2457  01A4  3001               	movlw	1
  2458  01A5  00B0               	movwf	??_si4355_configuration_init
  2459  01A6  0830               	movf	??_si4355_configuration_init,w
  2460  01A7  07DD               	addwf	si4355_configuration_init@col,f
  2461  01A8  2990               	goto	l1961
  2462  01A9                     l211:	
  2463                           
  2464                           ;si4355.c: 50: }
  2465                           ;si4355.c: 52: RA5 = 0;
  2466  01A9  128C               	bcf	12,5	;volatile
  2467                           
  2468                           ;si4355.c: 53: U8 ctsWentHigh = 0;
  2469  01AA  01DB               	clrf	si4355_configuration_init@ctsWentHigh
  2470  01AB                     l1967:	
  2471                           ;si4355.c: 54: while( !ctsWentHigh )
  2472                           
  2473  01AB  085B               	movf	si4355_configuration_init@ctsWentHigh,w
  2474  01AC  1D03               	btfss	3,2
  2475  01AD  29BA               	goto	l1969
  2476                           
  2477                           ;si4355.c: 55: {
  2478                           ;si4355.c: 56: SPI_WriteByte( 0x44 );
  2479  01AE  3044               	movlw	68
  2480  01AF  3183  23CA  3181   	fcall	_SPI_WriteByte
  2481                           
  2482                           ;si4355.c: 57: ctsWentHigh = SPI_ReadByte();
  2483  01B2  3184  2403  3181   	fcall	_SPI_ReadByte
  2484  01B5  0020               	movlb	0	; select bank0
  2485  01B6  00B0               	movwf	??_si4355_configuration_init
  2486  01B7  0830               	movf	??_si4355_configuration_init,w
  2487  01B8  00DB               	movwf	si4355_configuration_init@ctsWentHigh
  2488  01B9  29AB               	goto	l1967
  2489  01BA                     l1969:	
  2490                           
  2491                           ;si4355.c: 58: }
  2492                           ;si4355.c: 59: SPI_WriteBytes( 80u, radioCmd );
  2493  01BA  30A0               	movlw	(low (si4355_configuration_init@radioCmd| 0))& (0+255)
  2494  01BB  00B0               	movwf	??_si4355_configuration_init
  2495  01BC  0830               	movf	??_si4355_configuration_init,w
  2496  01BD  00F3               	movwf	SPI_WriteBytes@data
  2497  01BE  3050               	movlw	80
  2498  01BF  3184  2415  3181   	fcall	_SPI_WriteBytes
  2499                           
  2500                           ;si4355.c: 60: SPI_WriteBytes( numOfBytes, radioCmd2 );
  2501  01C2  3031               	movlw	(low (si4355_configuration_init@radioCmd2| 0))& (0+255)
  2502  01C3  0020               	movlb	0	; select bank0
  2503  01C4  00B0               	movwf	??_si4355_configuration_init
  2504  01C5  0830               	movf	??_si4355_configuration_init,w
  2505  01C6  00F3               	movwf	SPI_WriteBytes@data
  2506  01C7  085C               	movf	si4355_configuration_init@numOfBytes,w
  2507  01C8  3184  2415  3181   	fcall	_SPI_WriteBytes
  2508                           
  2509                           ;si4355.c: 66: RA5 = 1;
  2510  01CB  0020               	movlb	0	; select bank0
  2511  01CC  168C               	bsf	12,5	;volatile
  2512                           
  2513                           ;si4355.c: 67: }
  2514  01CD  29D8               	goto	l215
  2515  01CE                     l1973:	
  2516                           
  2517                           ;si4355.c: 68: else
  2518                           ;si4355.c: 69: {
  2519                           ;si4355.c: 70: if ( !radio_comm_SendCmdGetResp( numOfBytes, radioCmd, 0, 0 ) )
  2520  01CE  30A0               	movlw	(low (si4355_configuration_init@radioCmd| 0))& (0+255)
  2521  01CF  00B0               	movwf	??_si4355_configuration_init
  2522  01D0  0830               	movf	??_si4355_configuration_init,w
  2523  01D1  00A3               	movwf	radio_comm_SendCmdGetResp@pCmdData
  2524  01D2  01A4               	clrf	radio_comm_SendCmdGetResp@respByteCount
  2525  01D3  01A5               	clrf	radio_comm_SendCmdGetResp@pRespData
  2526  01D4  085C               	movf	si4355_configuration_init@numOfBytes,w
  2527  01D5  3183  23DE  3181   	fcall	_radio_comm_SendCmdGetResp
  2528  01D8                     l215:	
  2529                           ;si4355.c: 71: {
  2530                           
  2531                           
  2532                           ;si4355.c: 74: }
  2533                           ;si4355.c: 75: }
  2534                           ;si4355.c: 77: if( !RA3 )
  2535  01D8  0020               	movlb	0	; select bank0
  2536  01D9  198C               	btfsc	12,3	;volatile
  2537  01DA  2952               	goto	l1977
  2538                           
  2539                           ;si4355.c: 78: {
  2540                           ;si4355.c: 80: si4355_get_int_status( 0u, 0u, 0u );
  2541  01DB  01A8               	clrf	si4355_get_int_status@MODEM_CLR_PEND
  2542  01DC  01A9               	clrf	si4355_get_int_status@CHIP_CLR_PEND
  2543  01DD  3000               	movlw	0
  2544  01DE  3181  21E4  3181   	fcall	_si4355_get_int_status
  2545  01E1  2952               	goto	l1977
  2546  01E2                     l1979:	
  2547                           
  2548                           ;si4355.c: 81: }
  2549                           ;si4355.c: 82: }
  2550                           ;si4355.c: 83: return SUCCESS;
  2551  01E2  3000               	movlw	0
  2552  01E3  0008               	return
  2553  01E4                     __end_of_si4355_configuration_init:	
  2554                           
  2555                           	psect	text7
  2556  0456                     __ptext7:	
  2557 ;; *************** function _Radio_PowerUp *****************
  2558 ;; Defined at:
  2559 ;;		line 15 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/radio.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;		None
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;  wDelay          2    0[BANK0 ] unsigned int 
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  1    wreg      void 
  2566 ;; Registers used:
  2567 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2573 ;;      Params:         0       0       0       0
  2574 ;;      Locals:         0       2       0       0
  2575 ;;      Temps:          0       0       0       0
  2576 ;;      Totals:         0       2       0       0
  2577 ;;Total ram usage:        2 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; Hardware stack levels required when called:    5
  2580 ;; This function calls:
  2581 ;;		_radio_comm_PollCTS
  2582 ;; This function is called by:
  2583 ;;		_Radio_Init
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           
  2588                           ;psect for function _Radio_PowerUp
  2589  0456                     _Radio_PowerUp:	
  2590                           
  2591                           ;radio.c: 17: U16 wDelay = 0u;
  2592                           
  2593                           ;incstack = 0
  2594                           ; Regs used in _Radio_PowerUp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2595  0456  0020               	movlb	0	; select bank0
  2596  0457  01A0               	clrf	Radio_PowerUp@wDelay
  2597  0458  01A1               	clrf	Radio_PowerUp@wDelay+1
  2598                           
  2599                           ;radio.c: 21: radio_comm_PollCTS();
  2600  0459  3184  245C         	fcall	_radio_comm_PollCTS
  2601  045B  0008               	return
  2602  045C                     __end_of_Radio_PowerUp:	
  2603                           
  2604                           	psect	text8
  2605  039D                     __ptext8:	
  2606 ;; *************** function _Radio_CheckReceived *****************
  2607 ;; Defined at:
  2608 ;;		line 51 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/radio.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;		None
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;		None
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  1    wreg      unsigned char 
  2615 ;; Registers used:
  2616 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2622 ;;      Params:         0       0       0       0
  2623 ;;      Locals:         0       0       0       0
  2624 ;;      Temps:          0       1       0       0
  2625 ;;      Totals:         0       1       0       0
  2626 ;;Total ram usage:        1 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; Hardware stack levels required when called:    8
  2629 ;; This function calls:
  2630 ;;		_si4355_get_int_status
  2631 ;;		_si4355_read_rx_fifo
  2632 ;; This function is called by:
  2633 ;;		_main
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           
  2638                           ;psect for function _Radio_CheckReceived
  2639  039D                     _Radio_CheckReceived:	
  2640                           
  2641                           ;radio.c: 53: if( !RA3 )
  2642                           
  2643                           ;incstack = 0
  2644                           ; Regs used in _Radio_CheckReceived: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2645  039D  0020               	movlb	0	; select bank0
  2646  039E  198C               	btfsc	12,3	;volatile
  2647  039F  2BB3               	goto	l2041
  2648                           
  2649                           ;radio.c: 54: {
  2650                           ;radio.c: 56: si4355_get_int_status(0u, 0u, 0u);
  2651  03A0  01A8               	clrf	si4355_get_int_status@MODEM_CLR_PEND
  2652  03A1  01A9               	clrf	si4355_get_int_status@CHIP_CLR_PEND
  2653  03A2  3000               	movlw	0
  2654  03A3  3181  21E4  3183   	fcall	_si4355_get_int_status
  2655                           
  2656                           ;radio.c: 59: if (Si4355Cmd.GET_INT_STATUS.PH_PEND & 0x10)
  2657  03A6  0022               	movlb	2	; select bank2
  2658  03A7  1E22               	btfss	(_Si4355Cmd^(0+256)+2),4
  2659  03A8  2BB3               	goto	l2041
  2660                           
  2661                           ;radio.c: 60: {
  2662                           ;radio.c: 62: si4355_read_rx_fifo( sizeof( tRadioPacket ), ( U8 * ) &RadioPacket );
  2663  03A9  3035               	movlw	(low (_RadioPacket| (0+256)))& (0+255)
  2664  03AA  0020               	movlb	0	; select bank0
  2665  03AB  00AE               	movwf	??_Radio_CheckReceived
  2666  03AC  082E               	movf	??_Radio_CheckReceived,w
  2667  03AD  00A5               	movwf	si4355_read_rx_fifo@pRxData
  2668  03AE  3007               	movlw	7
  2669  03AF  3184  2427         	fcall	_si4355_read_rx_fifo
  2670                           
  2671                           ;radio.c: 63: return 1;
  2672  03B1  3001               	movlw	1
  2673  03B2  0008               	return
  2674  03B3                     l2041:	
  2675                           
  2676                           ;radio.c: 64: }
  2677                           ;radio.c: 65: }
  2678                           ;radio.c: 66: return 0;
  2679  03B3  3000               	movlw	0
  2680  03B4  0008               	return
  2681  03B5                     __end_of_Radio_CheckReceived:	
  2682                           
  2683                           	psect	text9
  2684  0427                     __ptext9:	
  2685 ;; *************** function _si4355_read_rx_fifo *****************
  2686 ;; Defined at:
  2687 ;;		line 387 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/si4355.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;  numBytes        1    wreg     unsigned char 
  2690 ;;  pRxData         1    5[BANK0 ] PTR unsigned char 
  2691 ;;		 -> RadioPacket(7), 
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;  numBytes        1    7[BANK0 ] unsigned char 
  2694 ;; Return value:  Size  Location     Type
  2695 ;;                  1    wreg      void 
  2696 ;; Registers used:
  2697 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2698 ;; Tracked objects:
  2699 ;;		On entry : 0/0
  2700 ;;		On exit  : 0/0
  2701 ;;		Unchanged: 0/0
  2702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2703 ;;      Params:         0       1       0       0
  2704 ;;      Locals:         0       1       0       0
  2705 ;;      Temps:          0       1       0       0
  2706 ;;      Totals:         0       3       0       0
  2707 ;;Total ram usage:        3 bytes
  2708 ;; Hardware stack levels used:    1
  2709 ;; Hardware stack levels required when called:    6
  2710 ;; This function calls:
  2711 ;;		_radio_comm_ReadData
  2712 ;; This function is called by:
  2713 ;;		_Radio_CheckReceived
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           
  2718                           ;psect for function _si4355_read_rx_fifo
  2719  0427                     _si4355_read_rx_fifo:	
  2720                           
  2721                           ;incstack = 0
  2722                           ; Regs used in _si4355_read_rx_fifo: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2723                           ;si4355_read_rx_fifo@numBytes stored from wreg
  2724  0427  0020               	movlb	0	; select bank0
  2725  0428  00A7               	movwf	si4355_read_rx_fifo@numBytes
  2726                           
  2727                           ;si4355.c: 389: radio_comm_ReadData( 0x77, 0, numBytes, pRxData );
  2728  0429  01A0               	clrf	radio_comm_ReadData@pollCts
  2729  042A  0827               	movf	si4355_read_rx_fifo@numBytes,w
  2730  042B  00A6               	movwf	??_si4355_read_rx_fifo
  2731  042C  0826               	movf	??_si4355_read_rx_fifo,w
  2732  042D  00A1               	movwf	radio_comm_ReadData@byteCount
  2733  042E  0825               	movf	si4355_read_rx_fifo@pRxData,w
  2734  042F  00A2               	movwf	radio_comm_ReadData@pData
  2735  0430  3001               	movlw	1
  2736  0431  00A3               	movwf	radio_comm_ReadData@pData+1
  2737  0432  3077               	movlw	119
  2738  0433  3183  2347         	fcall	_radio_comm_ReadData
  2739  0435  0008               	return
  2740  0436                     __end_of_si4355_read_rx_fifo:	
  2741                           
  2742                           	psect	text10
  2743  0347                     __ptext10:	
  2744 ;; *************** function _radio_comm_ReadData *****************
  2745 ;; Defined at:
  2746 ;;		line 64 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/comm.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;  cmd             1    wreg     unsigned char 
  2749 ;;  pollCts         1    0[BANK0 ] unsigned char 
  2750 ;;  byteCount       1    1[BANK0 ] unsigned char 
  2751 ;;  pData           2    2[BANK0 ] PTR unsigned char 
  2752 ;;		 -> radioCmd(16), RadioPacket(7), 
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;  cmd             1    4[BANK0 ] unsigned char 
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      void 
  2757 ;; Registers used:
  2758 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2764 ;;      Params:         0       4       0       0
  2765 ;;      Locals:         0       1       0       0
  2766 ;;      Temps:          0       0       0       0
  2767 ;;      Totals:         0       5       0       0
  2768 ;;Total ram usage:        5 bytes
  2769 ;; Hardware stack levels used:    1
  2770 ;; Hardware stack levels required when called:    5
  2771 ;; This function calls:
  2772 ;;		_SPI_ReadBytes
  2773 ;;		_SPI_WriteByte
  2774 ;;		_radio_comm_PollCTS
  2775 ;; This function is called by:
  2776 ;;		_si4355_read_rx_fifo
  2777 ;;		_si4355_frr_a_read
  2778 ;;		_si4355_frr_b_read
  2779 ;;		_si4355_frr_c_read
  2780 ;;		_si4355_frr_d_read
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784                           
  2785                           ;psect for function _radio_comm_ReadData
  2786  0347                     _radio_comm_ReadData:	
  2787                           
  2788                           ;incstack = 0
  2789                           ; Regs used in _radio_comm_ReadData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2790                           ;radio_comm_ReadData@cmd stored from wreg
  2791  0347  0020               	movlb	0	; select bank0
  2792  0348  00A4               	movwf	radio_comm_ReadData@cmd
  2793                           
  2794                           ;comm.c: 66: if( pollCts )
  2795  0349  0820               	movf	radio_comm_ReadData@pollCts,w
  2796  034A  1D03               	btfss	3,2
  2797  034B  2B50               	goto	l1913
  2798  034C  2B53               	goto	l321
  2799  034D                     l1911:	
  2800                           ;comm.c: 67: {
  2801                           ;comm.c: 68: while( !ctsWentHigh )
  2802                           
  2803                           
  2804                           ;comm.c: 69: {
  2805                           ;comm.c: 70: radio_comm_PollCTS();
  2806  034D  3184  245C  3183   	fcall	_radio_comm_PollCTS
  2807  0350                     l1913:	
  2808  0350  087C               	movf	_ctsWentHigh,w
  2809  0351  1903               	btfsc	3,2
  2810  0352  2B4D               	goto	l1911
  2811  0353                     l321:	
  2812                           
  2813                           ;comm.c: 71: }
  2814                           ;comm.c: 72: }
  2815                           ;comm.c: 73: RA5 = 0;
  2816  0353  0020               	movlb	0	; select bank0
  2817  0354  128C               	bcf	12,5	;volatile
  2818                           
  2819                           ;comm.c: 74: SPI_WriteByte( cmd );
  2820  0355  0824               	movf	radio_comm_ReadData@cmd,w
  2821  0356  3183  23CA  3183   	fcall	_SPI_WriteByte
  2822                           
  2823                           ;comm.c: 75: SPI_ReadBytes( byteCount, pData );
  2824  0359  0020               	movlb	0	; select bank0
  2825  035A  0823               	movf	radio_comm_ReadData@pData+1,w
  2826  035B  00F4               	movwf	SPI_ReadBytes@data+1
  2827  035C  0822               	movf	radio_comm_ReadData@pData,w
  2828  035D  00F3               	movwf	SPI_ReadBytes@data
  2829  035E  0821               	movf	radio_comm_ReadData@byteCount,w
  2830  035F  3183  23B5         	fcall	_SPI_ReadBytes
  2831                           
  2832                           ;comm.c: 76: RA5 = 1;
  2833  0361  0020               	movlb	0	; select bank0
  2834  0362  168C               	bsf	12,5	;volatile
  2835                           
  2836                           ;comm.c: 77: ctsWentHigh = 0;
  2837  0363  01FC               	clrf	_ctsWentHigh
  2838  0364  0008               	return
  2839  0365                     __end_of_radio_comm_ReadData:	
  2840                           
  2841                           	psect	text11
  2842  01E4                     __ptext11:	
  2843 ;; *************** function _si4355_get_int_status *****************
  2844 ;; Defined at:
  2845 ;;		line 266 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/si4355.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;  PH_CLR_PEND     1    wreg     unsigned char 
  2848 ;;  MODEM_CLR_PE    1    8[BANK0 ] unsigned char 
  2849 ;;  CHIP_CLR_PEN    1    9[BANK0 ] unsigned char 
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;  PH_CLR_PEND     1   13[BANK0 ] unsigned char 
  2852 ;; Return value:  Size  Location     Type
  2853 ;;                  1    wreg      void 
  2854 ;; Registers used:
  2855 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2861 ;;      Params:         0       2       0       0
  2862 ;;      Locals:         0       1       0       0
  2863 ;;      Temps:          0       3       0       0
  2864 ;;      Totals:         0       6       0       0
  2865 ;;Total ram usage:        6 bytes
  2866 ;; Hardware stack levels used:    1
  2867 ;; Hardware stack levels required when called:    7
  2868 ;; This function calls:
  2869 ;;		_radio_comm_SendCmdGetResp
  2870 ;; This function is called by:
  2871 ;;		_Radio_Init
  2872 ;;		_Radio_CheckReceived
  2873 ;;		_Radio_StartRX
  2874 ;;		_si4355_configuration_init
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           
  2879                           ;psect for function _si4355_get_int_status
  2880  01E4                     _si4355_get_int_status:	
  2881                           
  2882                           ;incstack = 0
  2883                           ; Regs used in _si4355_get_int_status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  2884                           ;si4355_get_int_status@PH_CLR_PEND stored from wreg
  2885  01E4  0020               	movlb	0	; select bank0
  2886  01E5  00AD               	movwf	si4355_get_int_status@PH_CLR_PEND
  2887                           
  2888                           ;si4355.c: 268: radioCmd[0] = 0x20;
  2889  01E6  3020               	movlw	32
  2890  01E7  00AA               	movwf	??_si4355_get_int_status
  2891  01E8  082A               	movf	??_si4355_get_int_status,w
  2892  01E9  00E0               	movwf	_radioCmd
  2893                           
  2894                           ;si4355.c: 269: radioCmd[1] = PH_CLR_PEND;
  2895  01EA  082D               	movf	si4355_get_int_status@PH_CLR_PEND,w
  2896  01EB  00AA               	movwf	??_si4355_get_int_status
  2897  01EC  082A               	movf	??_si4355_get_int_status,w
  2898  01ED  00E1               	movwf	_radioCmd+1
  2899                           
  2900                           ;si4355.c: 270: radioCmd[2] = MODEM_CLR_PEND;
  2901  01EE  0828               	movf	si4355_get_int_status@MODEM_CLR_PEND,w
  2902  01EF  00AA               	movwf	??_si4355_get_int_status
  2903  01F0  082A               	movf	??_si4355_get_int_status,w
  2904  01F1  00E2               	movwf	_radioCmd+2
  2905                           
  2906                           ;si4355.c: 271: radioCmd[3] = CHIP_CLR_PEND;
  2907  01F2  0829               	movf	si4355_get_int_status@CHIP_CLR_PEND,w
  2908  01F3  00AA               	movwf	??_si4355_get_int_status
  2909  01F4  082A               	movf	??_si4355_get_int_status,w
  2910  01F5  00E3               	movwf	_radioCmd+3
  2911                           
  2912                           ;si4355.c: 273: radio_comm_SendCmdGetResp( 4,
  2913                           ;si4355.c: 274: radioCmd,
  2914                           ;si4355.c: 275: 8,
  2915                           ;si4355.c: 276: radioCmd );
  2916  01F6  3060               	movlw	(low (_radioCmd| 0))& (0+255)
  2917  01F7  00AA               	movwf	??_si4355_get_int_status
  2918  01F8  082A               	movf	??_si4355_get_int_status,w
  2919  01F9  00A3               	movwf	radio_comm_SendCmdGetResp@pCmdData
  2920  01FA  3008               	movlw	8
  2921  01FB  00AB               	movwf	??_si4355_get_int_status+1
  2922  01FC  082B               	movf	??_si4355_get_int_status+1,w
  2923  01FD  00A4               	movwf	radio_comm_SendCmdGetResp@respByteCount
  2924  01FE  3060               	movlw	(low (_radioCmd| 0))& (0+255)
  2925  01FF  00AC               	movwf	??_si4355_get_int_status+2
  2926  0200  082C               	movf	??_si4355_get_int_status+2,w
  2927  0201  00A5               	movwf	radio_comm_SendCmdGetResp@pRespData
  2928  0202  3004               	movlw	4
  2929  0203  3183  23DE  3181   	fcall	_radio_comm_SendCmdGetResp
  2930                           
  2931                           ;si4355.c: 278: Si4355Cmd.GET_INT_STATUS.INT_PEND = radioCmd[0];
  2932  0206  0020               	movlb	0	; select bank0
  2933  0207  0860               	movf	_radioCmd,w
  2934  0208  00AA               	movwf	??_si4355_get_int_status
  2935  0209  082A               	movf	??_si4355_get_int_status,w
  2936  020A  0022               	movlb	2	; select bank2
  2937  020B  00A0               	movwf	_Si4355Cmd^(0+256)
  2938                           
  2939                           ;si4355.c: 279: Si4355Cmd.GET_INT_STATUS.INT_STATUS = radioCmd[1];
  2940  020C  0020               	movlb	0	; select bank0
  2941  020D  0861               	movf	_radioCmd+1,w
  2942  020E  00AA               	movwf	??_si4355_get_int_status
  2943  020F  082A               	movf	??_si4355_get_int_status,w
  2944  0210  0022               	movlb	2	; select bank2
  2945  0211  00A1               	movwf	(_Si4355Cmd^(0+256)+1)
  2946                           
  2947                           ;si4355.c: 280: Si4355Cmd.GET_INT_STATUS.PH_PEND = radioCmd[2];
  2948  0212  0020               	movlb	0	; select bank0
  2949  0213  0862               	movf	_radioCmd+2,w
  2950  0214  00AA               	movwf	??_si4355_get_int_status
  2951  0215  082A               	movf	??_si4355_get_int_status,w
  2952  0216  0022               	movlb	2	; select bank2
  2953  0217  00A2               	movwf	(_Si4355Cmd^(0+256)+2)
  2954                           
  2955                           ;si4355.c: 281: Si4355Cmd.GET_INT_STATUS.PH_STATUS = radioCmd[3];
  2956  0218  0020               	movlb	0	; select bank0
  2957  0219  0863               	movf	_radioCmd+3,w
  2958  021A  00AA               	movwf	??_si4355_get_int_status
  2959  021B  082A               	movf	??_si4355_get_int_status,w
  2960  021C  0022               	movlb	2	; select bank2
  2961  021D  00A3               	movwf	(_Si4355Cmd^(0+256)+3)
  2962                           
  2963                           ;si4355.c: 282: Si4355Cmd.GET_INT_STATUS.MODEM_PEND = radioCmd[4];
  2964  021E  0020               	movlb	0	; select bank0
  2965  021F  0864               	movf	_radioCmd+4,w
  2966  0220  00AA               	movwf	??_si4355_get_int_status
  2967  0221  082A               	movf	??_si4355_get_int_status,w
  2968  0222  0022               	movlb	2	; select bank2
  2969  0223  00A4               	movwf	(_Si4355Cmd^(0+256)+4)
  2970                           
  2971                           ;si4355.c: 283: Si4355Cmd.GET_INT_STATUS.MODEM_STATUS = radioCmd[5];
  2972  0224  0020               	movlb	0	; select bank0
  2973  0225  0865               	movf	_radioCmd+5,w
  2974  0226  00AA               	movwf	??_si4355_get_int_status
  2975  0227  082A               	movf	??_si4355_get_int_status,w
  2976  0228  0022               	movlb	2	; select bank2
  2977  0229  00A5               	movwf	(_Si4355Cmd^(0+256)+5)
  2978                           
  2979                           ;si4355.c: 284: Si4355Cmd.GET_INT_STATUS.CHIP_PEND = radioCmd[6];
  2980  022A  0020               	movlb	0	; select bank0
  2981  022B  0866               	movf	_radioCmd+6,w
  2982  022C  00AA               	movwf	??_si4355_get_int_status
  2983  022D  082A               	movf	??_si4355_get_int_status,w
  2984  022E  0022               	movlb	2	; select bank2
  2985  022F  00A6               	movwf	(_Si4355Cmd^(0+256)+6)
  2986                           
  2987                           ;si4355.c: 285: Si4355Cmd.GET_INT_STATUS.CHIP_STATUS = radioCmd[7];
  2988  0230  0020               	movlb	0	; select bank0
  2989  0231  0867               	movf	_radioCmd+7,w
  2990  0232  00AA               	movwf	??_si4355_get_int_status
  2991  0233  082A               	movf	??_si4355_get_int_status,w
  2992  0234  0022               	movlb	2	; select bank2
  2993  0235  00A7               	movwf	(_Si4355Cmd^(0+256)+7)
  2994  0236  0008               	return
  2995  0237                     __end_of_si4355_get_int_status:	
  2996                           
  2997                           	psect	text12
  2998  03DE                     __ptext12:	
  2999 ;; *************** function _radio_comm_SendCmdGetResp *****************
  3000 ;; Defined at:
  3001 ;;		line 58 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/comm.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;  cmdByteCount    1    wreg     unsigned char 
  3004 ;;  pCmdData        1    3[BANK0 ] PTR unsigned char 
  3005 ;;		 -> si4355_configuration_init@radioCmd(80), radioCmd(16), 
  3006 ;;  respByteCoun    1    4[BANK0 ] unsigned char 
  3007 ;;  pRespData       1    5[BANK0 ] PTR unsigned char 
  3008 ;;		 -> NULL(0), radioCmd(16), 
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;  cmdByteCount    1    7[BANK0 ] unsigned char 
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  1    wreg      unsigned char 
  3013 ;; Registers used:
  3014 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3020 ;;      Params:         0       3       0       0
  3021 ;;      Locals:         0       1       0       0
  3022 ;;      Temps:          0       1       0       0
  3023 ;;      Totals:         0       5       0       0
  3024 ;;Total ram usage:        5 bytes
  3025 ;; Hardware stack levels used:    1
  3026 ;; Hardware stack levels required when called:    6
  3027 ;; This function calls:
  3028 ;;		_radio_comm_GetResp
  3029 ;;		_radio_comm_SendCmd
  3030 ;; This function is called by:
  3031 ;;		_si4355_configuration_init
  3032 ;;		_si4355_fifo_info
  3033 ;;		_si4355_get_int_status
  3034 ;;		_si4355_part_info
  3035 ;;		_si4355_func_info
  3036 ;;		_si4355_get_property
  3037 ;;		_si4355_gpio_pin_cfg
  3038 ;;		_si4355_request_device_state
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           
  3043                           ;psect for function _radio_comm_SendCmdGetResp
  3044  03DE                     _radio_comm_SendCmdGetResp:	
  3045                           
  3046                           ;incstack = 0
  3047                           ; Regs used in _radio_comm_SendCmdGetResp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  3048                           ;radio_comm_SendCmdGetResp@cmdByteCount stored from wreg
  3049  03DE  0020               	movlb	0	; select bank0
  3050  03DF  00A7               	movwf	radio_comm_SendCmdGetResp@cmdByteCount
  3051                           
  3052                           ;comm.c: 60: radio_comm_SendCmd( cmdByteCount, pCmdData );
  3053  03E0  0823               	movf	radio_comm_SendCmdGetResp@pCmdData,w
  3054  03E1  00A6               	movwf	??_radio_comm_SendCmdGetResp
  3055  03E2  0826               	movf	??_radio_comm_SendCmdGetResp,w
  3056  03E3  00A0               	movwf	radio_comm_SendCmd@pData
  3057  03E4  0827               	movf	radio_comm_SendCmdGetResp@cmdByteCount,w
  3058  03E5  3183  2365  3183   	fcall	_radio_comm_SendCmd
  3059                           
  3060                           ;comm.c: 61: return radio_comm_GetResp( respByteCount, pRespData );
  3061  03E8  0020               	movlb	0	; select bank0
  3062  03E9  0825               	movf	radio_comm_SendCmdGetResp@pRespData,w
  3063  03EA  00A6               	movwf	??_radio_comm_SendCmdGetResp
  3064  03EB  0826               	movf	??_radio_comm_SendCmdGetResp,w
  3065  03EC  00F7               	movwf	radio_comm_GetResp@pData
  3066  03ED  0824               	movf	radio_comm_SendCmdGetResp@respByteCount,w
  3067  03EE  3182  22C1         	fcall	_radio_comm_GetResp
  3068  03F0  0008               	return
  3069  03F1                     __end_of_radio_comm_SendCmdGetResp:	
  3070                           
  3071                           	psect	text13
  3072  0365                     __ptext13:	
  3073 ;; *************** function _radio_comm_SendCmd *****************
  3074 ;; Defined at:
  3075 ;;		line 41 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/comm.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;  byteCount       1    wreg     unsigned char 
  3078 ;;  pData           1    0[BANK0 ] PTR unsigned char 
  3079 ;;		 -> si4355_configuration_init@radioCmd(80), radioCmd(16), 
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;  byteCount       1    2[BANK0 ] unsigned char 
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  1    wreg      void 
  3084 ;; Registers used:
  3085 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3091 ;;      Params:         0       1       0       0
  3092 ;;      Locals:         0       1       0       0
  3093 ;;      Temps:          0       1       0       0
  3094 ;;      Totals:         0       3       0       0
  3095 ;;Total ram usage:        3 bytes
  3096 ;; Hardware stack levels used:    1
  3097 ;; Hardware stack levels required when called:    5
  3098 ;; This function calls:
  3099 ;;		_SPI_WriteBytes
  3100 ;;		_radio_comm_PollCTS
  3101 ;; This function is called by:
  3102 ;;		_si4355_start_rx
  3103 ;;		_radio_comm_SendCmdGetResp
  3104 ;;		_si4355_nop
  3105 ;;		_si4355_power_up
  3106 ;;		_si4355_set_property
  3107 ;;		_si4355_change_state
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111                           
  3112                           ;psect for function _radio_comm_SendCmd
  3113  0365                     _radio_comm_SendCmd:	
  3114                           
  3115                           ;incstack = 0
  3116                           ; Regs used in _radio_comm_SendCmd: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3117                           ;radio_comm_SendCmd@byteCount stored from wreg
  3118  0365  0020               	movlb	0	; select bank0
  3119  0366  00A2               	movwf	radio_comm_SendCmd@byteCount
  3120                           
  3121                           ;comm.c: 45: if ( byteCount == 1 )
  3122  0367  0322               	decf	radio_comm_SendCmd@byteCount,w
  3123  0368  1D03               	btfss	3,2
  3124  0369  2B6E               	goto	l1875
  3125                           
  3126                           ;comm.c: 46: byteCount++;
  3127  036A  3001               	movlw	1
  3128  036B  00A1               	movwf	??_radio_comm_SendCmd
  3129  036C  0821               	movf	??_radio_comm_SendCmd,w
  3130  036D  07A2               	addwf	radio_comm_SendCmd@byteCount,f
  3131  036E                     l1875:	
  3132                           ;comm.c: 48: while( !ctsWentHigh )
  3133                           
  3134  036E  087C               	movf	_ctsWentHigh,w
  3135  036F  1D03               	btfss	3,2
  3136  0370  2B75               	goto	l314
  3137                           
  3138                           ;comm.c: 49: {
  3139                           ;comm.c: 50: radio_comm_PollCTS();
  3140  0371  3184  245C  3183   	fcall	_radio_comm_PollCTS
  3141  0374  2B6E               	goto	l1875
  3142  0375                     l314:	
  3143                           
  3144                           ;comm.c: 51: }
  3145                           ;comm.c: 52: RA5 = 0;
  3146  0375  0020               	movlb	0	; select bank0
  3147  0376  128C               	bcf	12,5	;volatile
  3148                           
  3149                           ;comm.c: 53: SPI_WriteBytes( byteCount, pData );
  3150  0377  0820               	movf	radio_comm_SendCmd@pData,w
  3151  0378  00A1               	movwf	??_radio_comm_SendCmd
  3152  0379  0821               	movf	??_radio_comm_SendCmd,w
  3153  037A  00F3               	movwf	SPI_WriteBytes@data
  3154  037B  0822               	movf	radio_comm_SendCmd@byteCount,w
  3155  037C  3184  2415         	fcall	_SPI_WriteBytes
  3156                           
  3157                           ;comm.c: 54: RA5 = 1;
  3158  037E  0020               	movlb	0	; select bank0
  3159  037F  168C               	bsf	12,5	;volatile
  3160                           
  3161                           ;comm.c: 55: ctsWentHigh = 0;
  3162  0380  01FC               	clrf	_ctsWentHigh
  3163  0381  0008               	return
  3164  0382                     __end_of_radio_comm_SendCmd:	
  3165                           
  3166                           	psect	text14
  3167  045C                     __ptext14:	
  3168 ;; *************** function _radio_comm_PollCTS *****************
  3169 ;; Defined at:
  3170 ;;		line 36 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/comm.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;		None
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;		None
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  1    wreg      unsigned char 
  3177 ;; Registers used:
  3178 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3184 ;;      Params:         0       0       0       0
  3185 ;;      Locals:         0       0       0       0
  3186 ;;      Temps:          0       0       0       0
  3187 ;;      Totals:         0       0       0       0
  3188 ;;Total ram usage:        0 bytes
  3189 ;; Hardware stack levels used:    1
  3190 ;; Hardware stack levels required when called:    4
  3191 ;; This function calls:
  3192 ;;		_radio_comm_GetResp
  3193 ;; This function is called by:
  3194 ;;		_Radio_PowerUp
  3195 ;;		_radio_comm_SendCmd
  3196 ;;		_radio_comm_ReadData
  3197 ;;		_radio_comm_WriteData
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201                           
  3202                           ;psect for function _radio_comm_PollCTS
  3203  045C                     _radio_comm_PollCTS:	
  3204                           
  3205                           ;comm.c: 38: return radio_comm_GetResp( 0, 0 );
  3206                           ;	Return value of _radio_comm_PollCTS is never used
  3207                           
  3208                           ;incstack = 0
  3209                           ; Regs used in _radio_comm_PollCTS: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3210  045C  01F7               	clrf	radio_comm_GetResp@pData
  3211  045D  3000               	movlw	0
  3212  045E  3182  22C1         	fcall	_radio_comm_GetResp
  3213  0460  0008               	return
  3214  0461                     __end_of_radio_comm_PollCTS:	
  3215                           
  3216                           	psect	text15
  3217  02C1                     __ptext15:	
  3218 ;; *************** function _radio_comm_GetResp *****************
  3219 ;; Defined at:
  3220 ;;		line 8 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/comm.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;  byteCount       1    wreg     unsigned char 
  3223 ;;  pData           1    7[COMMON] PTR unsigned char 
  3224 ;;		 -> NULL(0), radioCmd(16), 
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;  byteCount       1    9[COMMON] unsigned char 
  3227 ;;  errCnt          2   10[COMMON] unsigned int 
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  1    wreg      unsigned char 
  3230 ;; Registers used:
  3231 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3237 ;;      Params:         1       0       0       0
  3238 ;;      Locals:         3       0       0       0
  3239 ;;      Temps:          1       0       0       0
  3240 ;;      Totals:         5       0       0       0
  3241 ;;Total ram usage:        5 bytes
  3242 ;; Hardware stack levels used:    1
  3243 ;; Hardware stack levels required when called:    3
  3244 ;; This function calls:
  3245 ;;		_SPI_ReadByte
  3246 ;;		_SPI_ReadBytes
  3247 ;;		_SPI_WriteByte
  3248 ;; This function is called by:
  3249 ;;		_radio_comm_PollCTS
  3250 ;;		_radio_comm_SendCmdGetResp
  3251 ;;		_si4355_ezconfig_check
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           
  3256                           ;psect for function _radio_comm_GetResp
  3257  02C1                     _radio_comm_GetResp:	
  3258                           
  3259                           ;incstack = 0
  3260                           ; Regs used in _radio_comm_GetResp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3261                           ;radio_comm_GetResp@byteCount stored from wreg
  3262  02C1  00F9               	movwf	radio_comm_GetResp@byteCount
  3263                           
  3264                           ;comm.c: 10: U16 errCnt = 5000;
  3265  02C2  3088               	movlw	136
  3266  02C3  00FA               	movwf	radio_comm_GetResp@errCnt
  3267  02C4  3013               	movlw	19
  3268  02C5  00FB               	movwf	radio_comm_GetResp@errCnt+1
  3269                           
  3270                           ;comm.c: 11: while( errCnt != 0 )
  3271  02C6  2ACD               	goto	l1845
  3272  02C7                     l301:	
  3273                           ;comm.c: 23: break;
  3274                           
  3275                           
  3276                           ;comm.c: 24: }
  3277                           ;comm.c: 25: RA5 = 1;
  3278  02C7  0020               	movlb	0	; select bank0
  3279  02C8  168C               	bsf	12,5	;volatile
  3280                           
  3281                           ;comm.c: 26: errCnt--;
  3282  02C9  3001               	movlw	1
  3283  02CA  02FA               	subwf	radio_comm_GetResp@errCnt,f
  3284  02CB  3000               	movlw	0
  3285  02CC  3BFB               	subwfb	radio_comm_GetResp@errCnt+1,f
  3286  02CD                     l1845:	
  3287  02CD  087A               	movf	radio_comm_GetResp@errCnt,w
  3288  02CE  047B               	iorwf	radio_comm_GetResp@errCnt+1,w
  3289  02CF  1903               	btfsc	3,2
  3290  02D0  2AEF               	goto	l1847
  3291                           
  3292                           ;comm.c: 12: {
  3293                           ;comm.c: 13: RA5 = 0;
  3294  02D1  0020               	movlb	0	; select bank0
  3295  02D2  128C               	bcf	12,5	;volatile
  3296                           
  3297                           ;comm.c: 14: SPI_WriteByte( 0x44 );
  3298  02D3  3044               	movlw	68
  3299  02D4  3183  23CA  3182   	fcall	_SPI_WriteByte
  3300                           
  3301                           ;comm.c: 15: ctsWentHigh = SPI_ReadByte();
  3302  02D7  3184  2403  3182   	fcall	_SPI_ReadByte
  3303  02DA  00F8               	movwf	??_radio_comm_GetResp
  3304  02DB  0878               	movf	??_radio_comm_GetResp,w
  3305  02DC  00FC               	movwf	_ctsWentHigh
  3306                           
  3307                           ;comm.c: 16: if( ctsWentHigh )
  3308  02DD  087C               	movf	_ctsWentHigh,w
  3309  02DE  1903               	btfsc	3,2
  3310  02DF  2AC7               	goto	l301
  3311                           
  3312                           ;comm.c: 17: {
  3313                           ;comm.c: 18: if( byteCount )
  3314  02E0  0879               	movf	radio_comm_GetResp@byteCount,w
  3315  02E1  1903               	btfsc	3,2
  3316  02E2  2AED               	goto	l1841
  3317                           
  3318                           ;comm.c: 19: {
  3319                           ;comm.c: 20: SPI_ReadBytes( byteCount, pData );
  3320  02E3  0877               	movf	radio_comm_GetResp@pData,w
  3321  02E4  00F3               	movwf	SPI_ReadBytes@data
  3322  02E5  39FF               	andlw	255
  3323  02E6  1D03               	skipz
  3324  02E7  3000               	movlw	0
  3325  02E8  00F4               	movwf	SPI_ReadBytes@data+1
  3326  02E9  0879               	movf	radio_comm_GetResp@byteCount,w
  3327  02EA  3183  23B5  3182   	fcall	_SPI_ReadBytes
  3328  02ED                     l1841:	
  3329                           
  3330                           ;comm.c: 21: }
  3331                           ;comm.c: 22: RA5 = 1;
  3332  02ED  0020               	movlb	0	; select bank0
  3333  02EE  168C               	bsf	12,5	;volatile
  3334  02EF                     l1847:	
  3335                           
  3336                           ;comm.c: 27: }
  3337                           ;comm.c: 29: if( errCnt == 0 )
  3338  02EF  087A               	movf	radio_comm_GetResp@errCnt,w
  3339  02F0  047B               	iorwf	radio_comm_GetResp@errCnt+1,w
  3340  02F1  1D03               	btfss	3,2
  3341  02F2  2AF5               	goto	l1853
  3342                           
  3343                           ;comm.c: 30: {
  3344                           ;comm.c: 31: return 0;
  3345  02F3  3000               	movlw	0
  3346  02F4  0008               	return
  3347  02F5                     l1853:	
  3348                           
  3349                           ;comm.c: 32: }
  3350                           ;comm.c: 33: return ctsWentHigh;
  3351  02F5  087C               	movf	_ctsWentHigh,w
  3352  02F6  0008               	return
  3353  02F7                     __end_of_radio_comm_GetResp:	
  3354                           
  3355                           	psect	text16
  3356  03B5                     __ptext16:	
  3357 ;; *************** function _SPI_ReadBytes *****************
  3358 ;; Defined at:
  3359 ;;		line 48 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/spi.c"
  3360 ;; Parameters:    Size  Location     Type
  3361 ;;  len             1    wreg     unsigned char 
  3362 ;;  data            2    3[COMMON] PTR unsigned char 
  3363 ;;		 -> NULL(0), radioCmd(16), RadioPacket(7), 
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;  len             1    6[COMMON] unsigned char 
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  1    wreg      void 
  3368 ;; Registers used:
  3369 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3375 ;;      Params:         2       0       0       0
  3376 ;;      Locals:         1       0       0       0
  3377 ;;      Temps:          1       0       0       0
  3378 ;;      Totals:         4       0       0       0
  3379 ;;Total ram usage:        4 bytes
  3380 ;; Hardware stack levels used:    1
  3381 ;; Hardware stack levels required when called:    2
  3382 ;; This function calls:
  3383 ;;		_SPI_ReadByte
  3384 ;; This function is called by:
  3385 ;;		_radio_comm_GetResp
  3386 ;;		_radio_comm_ReadData
  3387 ;; This function uses a non-reentrant model
  3388 ;;
  3389                           
  3390                           
  3391                           ;psect for function _SPI_ReadBytes
  3392  03B5                     _SPI_ReadBytes:	
  3393                           
  3394                           ;incstack = 0
  3395                           ; Regs used in _SPI_ReadBytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3396                           ;SPI_ReadBytes@len stored from wreg
  3397  03B5  00F6               	movwf	SPI_ReadBytes@len
  3398  03B6                     l1829:	
  3399                           ;spi.c: 50: while( len-- )
  3400                           
  3401  03B6  3001               	movlw	1
  3402  03B7  02F6               	subwf	SPI_ReadBytes@len,f
  3403  03B8  0A76               	incf	SPI_ReadBytes@len,w
  3404  03B9  1903               	btfsc	3,2
  3405  03BA  0008               	return
  3406                           
  3407                           ;spi.c: 51: {
  3408                           ;spi.c: 52: *data++ = SPI_ReadByte();
  3409  03BB  3184  2403  3183   	fcall	_SPI_ReadByte
  3410  03BE  00F5               	movwf	??_SPI_ReadBytes
  3411  03BF  0873               	movf	SPI_ReadBytes@data,w
  3412  03C0  0086               	movwf	6
  3413  03C1  0874               	movf	SPI_ReadBytes@data+1,w
  3414  03C2  0087               	movwf	7
  3415  03C3  0875               	movf	??_SPI_ReadBytes,w
  3416  03C4  0081               	movwf	1
  3417  03C5  3001               	movlw	1
  3418  03C6  07F3               	addwf	SPI_ReadBytes@data,f
  3419  03C7  3000               	movlw	0
  3420  03C8  3DF4               	addwfc	SPI_ReadBytes@data+1,f
  3421  03C9  2BB6               	goto	l1829
  3422  03CA                     __end_of_SPI_ReadBytes:	
  3423                           
  3424                           	psect	text17
  3425  0403                     __ptext17:	
  3426 ;; *************** function _SPI_ReadByte *****************
  3427 ;; Defined at:
  3428 ;;		line 56 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/spi.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;		None
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;  data            1    2[COMMON] unsigned char 
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  1    wreg      unsigned char 
  3435 ;; Registers used:
  3436 ;;		wreg, status,2, status,0
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3442 ;;      Params:         0       0       0       0
  3443 ;;      Locals:         1       0       0       0
  3444 ;;      Temps:          1       0       0       0
  3445 ;;      Totals:         2       0       0       0
  3446 ;;Total ram usage:        2 bytes
  3447 ;; Hardware stack levels used:    1
  3448 ;; Hardware stack levels required when called:    1
  3449 ;; This function calls:
  3450 ;;		Nothing
  3451 ;; This function is called by:
  3452 ;;		_SPI_ReadBytes
  3453 ;;		_si4355_configuration_init
  3454 ;;		_radio_comm_GetResp
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           
  3459                           ;psect for function _SPI_ReadByte
  3460  0403                     _SPI_ReadByte:	
  3461                           
  3462                           ;spi.c: 58: register U8 data = 0;
  3463                           
  3464                           ;incstack = 0
  3465                           ; Regs used in _SPI_ReadByte: [wreg+status,2+status,0]
  3466  0403  01F2               	clrf	SPI_ReadByte@data
  3467                           
  3468                           ;spi.c: 59: SSPBUF = 0;
  3469  0404  0024               	movlb	4	; select bank4
  3470  0405  0191               	clrf	17	;volatile
  3471  0406                     l63:	
  3472                           ;spi.c: 60: while( BF == 0 );
  3473                           
  3474  0406  1C14               	btfss	20,0	;volatile
  3475  0407  2C06               	goto	l63
  3476                           
  3477                           ;spi.c: 61: data = SSPBUF;
  3478  0408  0811               	movf	17,w	;volatile
  3479  0409  00F1               	movwf	??_SPI_ReadByte
  3480  040A  0871               	movf	??_SPI_ReadByte,w
  3481  040B  00F2               	movwf	SPI_ReadByte@data
  3482                           
  3483                           ;spi.c: 62: wait = 0;
  3484  040C  0022               	movlb	2	; select bank2
  3485  040D  01B4               	clrf	_wait^(0+256)
  3486  040E                     l1809:	
  3487                           ;spi.c: 63: while(wait--);
  3488                           
  3489  040E  3001               	movlw	1
  3490  040F  02B4               	subwf	_wait^(0+256),f
  3491  0410  0A34               	incf	_wait^(0+256),w
  3492  0411  1D03               	btfss	3,2
  3493  0412  2C0E               	goto	l1809
  3494                           
  3495                           ;spi.c: 64: return data;
  3496  0413  0872               	movf	SPI_ReadByte@data,w
  3497  0414  0008               	return
  3498  0415                     __end_of_SPI_ReadByte:	
  3499                           
  3500                           	psect	text18
  3501  0415                     __ptext18:	
  3502 ;; *************** function _SPI_WriteBytes *****************
  3503 ;; Defined at:
  3504 ;;		line 31 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/spi.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;  len             1    wreg     unsigned char 
  3507 ;;  data            1    3[COMMON] PTR unsigned char 
  3508 ;;		 -> si4355_configuration_init@radioCmd2(40), si4355_configuration_init@radioCmd(80), radioCmd(16), 
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;  len             1    5[COMMON] unsigned char 
  3511 ;; Return value:  Size  Location     Type
  3512 ;;                  1    wreg      void 
  3513 ;; Registers used:
  3514 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3515 ;; Tracked objects:
  3516 ;;		On entry : 0/0
  3517 ;;		On exit  : 0/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3520 ;;      Params:         1       0       0       0
  3521 ;;      Locals:         1       0       0       0
  3522 ;;      Temps:          1       0       0       0
  3523 ;;      Totals:         3       0       0       0
  3524 ;;Total ram usage:        3 bytes
  3525 ;; Hardware stack levels used:    1
  3526 ;; Hardware stack levels required when called:    2
  3527 ;; This function calls:
  3528 ;;		_SPI_WriteByte
  3529 ;; This function is called by:
  3530 ;;		_si4355_configuration_init
  3531 ;;		_radio_comm_SendCmd
  3532 ;;		_radio_comm_WriteData
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           
  3537                           ;psect for function _SPI_WriteBytes
  3538  0415                     _SPI_WriteBytes:	
  3539                           
  3540                           ;incstack = 0
  3541                           ; Regs used in _SPI_WriteBytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3542                           ;SPI_WriteBytes@len stored from wreg
  3543  0415  00F5               	movwf	SPI_WriteBytes@len
  3544  0416                     l1863:	
  3545                           ;spi.c: 33: while( len-- )
  3546                           
  3547  0416  3001               	movlw	1
  3548  0417  02F5               	subwf	SPI_WriteBytes@len,f
  3549  0418  0A75               	incf	SPI_WriteBytes@len,w
  3550  0419  1903               	btfsc	3,2
  3551  041A  0008               	return
  3552                           
  3553                           ;spi.c: 34: {
  3554                           ;spi.c: 35: SPI_WriteByte( *data++ );
  3555  041B  0873               	movf	SPI_WriteBytes@data,w
  3556  041C  0086               	movwf	6
  3557  041D  0187               	clrf	7
  3558  041E  0801               	movf	1,w
  3559  041F  3183  23CA  3184   	fcall	_SPI_WriteByte
  3560  0422  3001               	movlw	1
  3561  0423  00F4               	movwf	??_SPI_WriteBytes
  3562  0424  0874               	movf	??_SPI_WriteBytes,w
  3563  0425  07F3               	addwf	SPI_WriteBytes@data,f
  3564  0426  2C16               	goto	l1863
  3565  0427                     __end_of_SPI_WriteBytes:	
  3566                           
  3567                           	psect	text19
  3568  03CA                     __ptext19:	
  3569 ;; *************** function _SPI_WriteByte *****************
  3570 ;; Defined at:
  3571 ;;		line 39 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/spi.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;  data            1    wreg     unsigned char 
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;  data            1    2[COMMON] unsigned char 
  3576 ;; Return value:  Size  Location     Type
  3577 ;;                  1    wreg      void 
  3578 ;; Registers used:
  3579 ;;		wreg, status,2, status,0
  3580 ;; Tracked objects:
  3581 ;;		On entry : 0/0
  3582 ;;		On exit  : 0/0
  3583 ;;		Unchanged: 0/0
  3584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3585 ;;      Params:         0       0       0       0
  3586 ;;      Locals:         1       0       0       0
  3587 ;;      Temps:          1       0       0       0
  3588 ;;      Totals:         2       0       0       0
  3589 ;;Total ram usage:        2 bytes
  3590 ;; Hardware stack levels used:    1
  3591 ;; Hardware stack levels required when called:    1
  3592 ;; This function calls:
  3593 ;;		Nothing
  3594 ;; This function is called by:
  3595 ;;		_SPI_WriteBytes
  3596 ;;		_si4355_configuration_init
  3597 ;;		_radio_comm_GetResp
  3598 ;;		_radio_comm_ReadData
  3599 ;;		_si4355_ezconfig_check
  3600 ;;		_radio_comm_WriteData
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           
  3605                           ;psect for function _SPI_WriteByte
  3606  03CA                     _SPI_WriteByte:	
  3607                           
  3608                           ;incstack = 0
  3609                           ; Regs used in _SPI_WriteByte: [wreg+status,2+status,0]
  3610                           ;SPI_WriteByte@data stored from wreg
  3611  03CA  00F2               	movwf	SPI_WriteByte@data
  3612                           
  3613                           ;spi.c: 41: SSPBUF = data;
  3614  03CB  0872               	movf	SPI_WriteByte@data,w
  3615  03CC  0024               	movlb	4	; select bank4
  3616  03CD  0091               	movwf	17	;volatile
  3617  03CE                     l48:	
  3618                           ;spi.c: 42: while( !SSP1IF );
  3619                           
  3620  03CE  0020               	movlb	0	; select bank0
  3621  03CF  1D91               	btfss	17,3	;volatile
  3622  03D0  2BCE               	goto	l48
  3623                           
  3624                           ;spi.c: 43: data = SSPBUF;
  3625  03D1  0024               	movlb	4	; select bank4
  3626  03D2  0811               	movf	17,w	;volatile
  3627  03D3  00F1               	movwf	??_SPI_WriteByte
  3628  03D4  0871               	movf	??_SPI_WriteByte,w
  3629  03D5  00F2               	movwf	SPI_WriteByte@data
  3630                           
  3631                           ;spi.c: 44: wait = 0;
  3632  03D6  0022               	movlb	2	; select bank2
  3633  03D7  01B4               	clrf	_wait^(0+256)
  3634  03D8                     l1821:	
  3635                           ;spi.c: 45: while(wait--);
  3636                           
  3637  03D8  3001               	movlw	1
  3638  03D9  02B4               	subwf	_wait^(0+256),f
  3639  03DA  0A34               	incf	_wait^(0+256),w
  3640  03DB  1903               	btfsc	3,2
  3641  03DC  0008               	return
  3642  03DD  2BD8               	goto	l1821
  3643  03DE                     __end_of_SPI_WriteByte:	
  3644                           
  3645                           	psect	text20
  3646  0436                     __ptext20:	
  3647 ;; *************** function _HW_Config *****************
  3648 ;; Defined at:
  3649 ;;		line 4 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/config.c"
  3650 ;; Parameters:    Size  Location     Type
  3651 ;;		None
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;		None
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  1    wreg      void 
  3656 ;; Registers used:
  3657 ;;		wreg, status,2
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3663 ;;      Params:         0       0       0       0
  3664 ;;      Locals:         0       0       0       0
  3665 ;;      Temps:          0       0       0       0
  3666 ;;      Totals:         0       0       0       0
  3667 ;;Total ram usage:        0 bytes
  3668 ;; Hardware stack levels used:    1
  3669 ;; Hardware stack levels required when called:    1
  3670 ;; This function calls:
  3671 ;;		Nothing
  3672 ;; This function is called by:
  3673 ;;		_main
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           
  3678                           ;psect for function _HW_Config
  3679  0436                     _HW_Config:	
  3680                           
  3681                           ;config.c: 6: ANSELA = 0x00;
  3682                           
  3683                           ;incstack = 0
  3684                           ; Regs used in _HW_Config: [wreg+status,2]
  3685  0436  0023               	movlb	3	; select bank3
  3686  0437  018C               	clrf	12	;volatile
  3687                           
  3688                           ;config.c: 7: TRISA = 0xCC;
  3689  0438  30CC               	movlw	204
  3690  0439  0021               	movlb	1	; select bank1
  3691  043A  008C               	movwf	12	;volatile
  3692                           
  3693                           ;config.c: 8: PORTA = 0x22;
  3694  043B  3022               	movlw	34
  3695  043C  0020               	movlb	0	; select bank0
  3696  043D  008C               	movwf	12	;volatile
  3697                           
  3698                           ;config.c: 9: RA1 = 1;
  3699  043E  148C               	bsf	12,1	;volatile
  3700                           
  3701                           ;config.c: 10: RA0 = 0;
  3702  043F  100C               	bcf	12,0	;volatile
  3703                           
  3704                           ;config.c: 11: RA5 = 1;
  3705  0440  168C               	bsf	12,5	;volatile
  3706  0441  0008               	return
  3707  0442                     __end_of_HW_Config:	
  3708                           
  3709                           	psect	intentry
  3710  0004                     __pintentry:	
  3711 ;; *************** function _Timer0_ISR *****************
  3712 ;; Defined at:
  3713 ;;		line 58 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/main.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;		None
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;		None
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  1    wreg      void 
  3720 ;; Registers used:
  3721 ;;		wreg
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3727 ;;      Params:         0       0       0       0
  3728 ;;      Locals:         0       0       0       0
  3729 ;;      Temps:          1       0       0       0
  3730 ;;      Totals:         1       0       0       0
  3731 ;;Total ram usage:        1 bytes
  3732 ;; Hardware stack levels used:    1
  3733 ;; This function calls:
  3734 ;;		Nothing
  3735 ;; This function is called by:
  3736 ;;		Interrupt level 1
  3737 ;; This function uses a non-reentrant model
  3738 ;;
  3739                           
  3740  0004                     _Timer0_ISR:	
  3741                           
  3742                           ;incstack = 0
  3743  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3744                           
  3745                           ; Regs used in _Timer0_ISR: [wreg]
  3746  0005  3180               	pagesel	$
  3747  0006  0020               	movlb	0	; select bank0
  3748  0007  087F               	movf	127,w
  3749  0008  00F0               	movwf	??_Timer0_ISR
  3750                           
  3751                           ;main.c: 60: TMR0IF = 0;
  3752  0009  110B               	bcf	11,2	;volatile
  3753                           
  3754                           ;main.c: 61: counter++;
  3755  000A  3001               	movlw	1
  3756  000B  0022               	movlb	2	; select bank2
  3757  000C  07B0               	addwf	_counter^(0+256),f
  3758  000D  3000               	movlw	0
  3759  000E  3DB1               	addwfc	(_counter+1)^(0+256),f
  3760                           
  3761                           ;main.c: 62: RA0 = counter & 1;
  3762  000F  1C30               	btfss	_counter^(0+256),0
  3763  0010  2814               	goto	u58_20
  3764  0011  0020               	movlb	0	; select bank0
  3765  0012  140C               	bsf	12,0	;volatile
  3766  0013  2816               	goto	i1l120
  3767  0014                     u58_20:	
  3768  0014  0020               	movlb	0	; select bank0
  3769  0015  100C               	bcf	12,0	;volatile
  3770  0016                     i1l120:	
  3771  0016  0870               	movf	??_Timer0_ISR,w
  3772  0017  00FF               	movwf	127
  3773  0018  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3774  0019  0009               	retfie
  3775  001A                     __end_of_Timer0_ISR:	
  3776  007E                     btemp	set	126	;btemp
  3777  007E                     int$flags	set	126
  3778  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    273
    Data        8
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     64      80
    BANK1            80     80      80
    BANK2            80      2      38

Pointer List with Targets:

    radio_comm_ReadData@pData	PTR unsigned char  size(2) Largest target is 16
		 -> radioCmd(BANK0[16]), RadioPacket(BANK2[7]), 

    radio_comm_SendCmdGetResp@pRespData	PTR unsigned char  size(1) Largest target is 16
		 -> NULL(NULL[0]), radioCmd(BANK0[16]), 

    radio_comm_SendCmdGetResp@pCmdData	PTR unsigned char  size(1) Largest target is 80
		 -> si4355_configuration_init@radioCmd(BANK1[80]), radioCmd(BANK0[16]), 

    radio_comm_SendCmd@pData	PTR unsigned char  size(1) Largest target is 80
		 -> si4355_configuration_init@radioCmd(BANK1[80]), radioCmd(BANK0[16]), 

    radio_comm_GetResp@pData	PTR unsigned char  size(1) Largest target is 16
		 -> NULL(NULL[0]), radioCmd(BANK0[16]), 

    si4355_read_rx_fifo@pRxData	PTR unsigned char  size(1) Largest target is 7
		 -> RadioPacket(BANK2[7]), 

    si4355_configuration_init@pSetPropCmd	PTR unsigned char  size(2) Largest target is 273
		 -> Radio_Configuration_Data_Array(CODE[273]), 

    pRadioConfiguration.Radio_ConfigurationArray	PTR unsigned char  size(2) Largest target is 273
		 -> Radio_Configuration_Data_Array(CODE[273]), 

    pRadioConfiguration	PTR struct . size(1) Largest target is 7
		 -> RadioConfiguration(BANK2[7]), 

    S105$Radio_ConfigurationArray	PTR unsigned char  size(2) Largest target is 273
		 -> Radio_Configuration_Data_Array(CODE[273]), 

    RadioConfiguration.Radio_ConfigurationArray	PTR unsigned char  size(2) Largest target is 273
		 -> Radio_Configuration_Data_Array(CODE[273]), 

    SPI_ReadBytes@data	PTR unsigned char  size(2) Largest target is 16
		 -> NULL(NULL[0]), radioCmd(BANK0[16]), RadioPacket(BANK2[7]), 

    SPI_WriteBytes@data	PTR unsigned char  size(1) Largest target is 80
		 -> si4355_configuration_init@radioCmd2(BANK0[40]), si4355_configuration_init@radioCmd(BANK1[80]), radioCmd(BANK0[16]), 


Critical Paths under _main in COMMON

    _radio_comm_SendCmdGetResp->_radio_comm_GetResp
    _radio_comm_PollCTS->_radio_comm_GetResp
    _radio_comm_GetResp->_SPI_ReadBytes
    _SPI_ReadBytes->_SPI_ReadByte
    _SPI_WriteBytes->_SPI_WriteByte

Critical Paths under _Timer0_ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Radio_Init
    _si4355_fifo_info->_radio_comm_SendCmdGetResp
    _Radio_StartRX->_si4355_get_int_status
    _si4355_start_rx->_radio_comm_SendCmd
    _Radio_Init->_si4355_configuration_init
    _si4355_configuration_init->_si4355_get_int_status
    _Radio_CheckReceived->_si4355_get_int_status
    _si4355_read_rx_fifo->_radio_comm_ReadData
    _si4355_get_int_status->_radio_comm_SendCmdGetResp
    _radio_comm_SendCmdGetResp->_radio_comm_SendCmd

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _Radio_Init->_si4355_configuration_init

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   35858
                                             63 BANK0      1     1      0
                                              0 BANK2      2     2      0
                          _HW_Config
                _Radio_CheckReceived
                         _Radio_Init
                      _Radio_StartRX
                           _SPI_Init
                   _si4355_fifo_info
 ---------------------------------------------------------------------------------
 (1) _si4355_fifo_info                                     4     4      0    4406
                                              8 BANK0      4     4      0
          _radio_comm_SendCmdGetResp
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Radio_StartRX                                        3     3      0    7401
                                             14 BANK0      3     3      0
              _si4355_get_int_status
                    _si4355_start_rx
 ---------------------------------------------------------------------------------
 (2) _si4355_start_rx                                      8     2      6    2286
                                              3 BANK0      8     2      6
                 _radio_comm_SendCmd
 ---------------------------------------------------------------------------------
 (1) _Radio_Init                                           1     1      0   16537
                                             62 BANK0      1     1      0
                      _Radio_PowerUp
          _si4355_configuration_init
              _si4355_get_int_status
 ---------------------------------------------------------------------------------
 (2) _si4355_configuration_init                          128   126      2   10731
                                             14 BANK0     48    46      2
                                              0 BANK1     80    80      0
                       _SPI_ReadByte
                      _SPI_WriteByte
                     _SPI_WriteBytes
          _radio_comm_SendCmdGetResp
              _si4355_get_int_status
 ---------------------------------------------------------------------------------
 (2) _Radio_PowerUp                                        2     2      0     722
                                              0 BANK0      2     2      0
                 _radio_comm_PollCTS
 ---------------------------------------------------------------------------------
 (1) _Radio_CheckReceived                                  1     1      0    7511
                                             14 BANK0      1     1      0
              _si4355_get_int_status
                _si4355_read_rx_fifo
 ---------------------------------------------------------------------------------
 (2) _si4355_read_rx_fifo                                  3     2      1    2427
                                              5 BANK0      3     2      1
                _radio_comm_ReadData
 ---------------------------------------------------------------------------------
 (3) _radio_comm_ReadData                                  5     1      4    2288
                                              0 BANK0      5     1      4
                      _SPI_ReadBytes
                      _SPI_WriteByte
                 _radio_comm_PollCTS
 ---------------------------------------------------------------------------------
 (2) _si4355_get_int_status                                6     4      2    5084
                                              8 BANK0      6     4      2
          _radio_comm_SendCmdGetResp
 ---------------------------------------------------------------------------------
 (2) _radio_comm_SendCmdGetResp                            5     2      3    4375
                                              3 BANK0      5     2      3
                 _radio_comm_GetResp
                 _radio_comm_SendCmd
 ---------------------------------------------------------------------------------
 (3) _radio_comm_SendCmd                                   3     2      1    1684
                                              0 BANK0      3     2      1
                     _SPI_WriteBytes
                 _radio_comm_PollCTS
 ---------------------------------------------------------------------------------
 (4) _radio_comm_PollCTS                                   0     0      0     719
                 _radio_comm_GetResp
 ---------------------------------------------------------------------------------
 (5) _radio_comm_GetResp                                   5     4      1     719
                                              7 COMMON     5     4      1
                       _SPI_ReadByte
                      _SPI_ReadBytes
                      _SPI_WriteByte
 ---------------------------------------------------------------------------------
 (6) _SPI_ReadBytes                                        4     2      2     256
                                              3 COMMON     4     2      2
                       _SPI_ReadByte
 ---------------------------------------------------------------------------------
 (7) _SPI_ReadByte                                         2     2      0      37
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _SPI_WriteBytes                                       3     2      1     407
                                              3 COMMON     3     2      1
                      _SPI_WriteByte
 ---------------------------------------------------------------------------------
 (6) _SPI_WriteByte                                        2     2      0      34
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _HW_Config                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _Timer0_ISR                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HW_Config
   _Radio_CheckReceived
     _si4355_get_int_status
       _radio_comm_SendCmdGetResp
         _radio_comm_GetResp
           _SPI_ReadByte
           _SPI_ReadBytes
             _SPI_ReadByte
           _SPI_WriteByte
         _radio_comm_SendCmd
           _SPI_WriteBytes
             _SPI_WriteByte
           _radio_comm_PollCTS
             _radio_comm_GetResp
               _SPI_ReadByte
               _SPI_ReadBytes
                 _SPI_ReadByte
               _SPI_WriteByte
     _si4355_read_rx_fifo
       _radio_comm_ReadData
         _SPI_ReadBytes
           _SPI_ReadByte
         _SPI_WriteByte
         _radio_comm_PollCTS
           _radio_comm_GetResp
             _SPI_ReadByte
             _SPI_ReadBytes
               _SPI_ReadByte
             _SPI_WriteByte
   _Radio_Init
     _Radio_PowerUp
       _radio_comm_PollCTS
         _radio_comm_GetResp
           _SPI_ReadByte
           _SPI_ReadBytes
             _SPI_ReadByte
           _SPI_WriteByte
     _si4355_configuration_init
       _SPI_ReadByte
       _SPI_WriteByte
       _SPI_WriteBytes
         _SPI_WriteByte
       _radio_comm_SendCmdGetResp
         _radio_comm_GetResp
           _SPI_ReadByte
           _SPI_ReadBytes
             _SPI_ReadByte
           _SPI_WriteByte
         _radio_comm_SendCmd
           _SPI_WriteBytes
             _SPI_WriteByte
           _radio_comm_PollCTS
             _radio_comm_GetResp
               _SPI_ReadByte
               _SPI_ReadBytes
                 _SPI_ReadByte
               _SPI_WriteByte
       _si4355_get_int_status
         _radio_comm_SendCmdGetResp
           _radio_comm_GetResp
             _SPI_ReadByte
             _SPI_ReadBytes
               _SPI_ReadByte
             _SPI_WriteByte
           _radio_comm_SendCmd
             _SPI_WriteBytes
               _SPI_WriteByte
             _radio_comm_PollCTS
               _radio_comm_GetResp
                 _SPI_ReadByte
                 _SPI_ReadBytes
                   _SPI_ReadByte
                 _SPI_WriteByte
     _si4355_get_int_status
       _radio_comm_SendCmdGetResp
         _radio_comm_GetResp
           _SPI_ReadByte
           _SPI_ReadBytes
             _SPI_ReadByte
           _SPI_WriteByte
         _radio_comm_SendCmd
           _SPI_WriteBytes
             _SPI_WriteByte
           _radio_comm_PollCTS
             _radio_comm_GetResp
               _SPI_ReadByte
               _SPI_ReadBytes
                 _SPI_ReadByte
               _SPI_WriteByte
   _Radio_StartRX
     _si4355_get_int_status
       _radio_comm_SendCmdGetResp
         _radio_comm_GetResp
           _SPI_ReadByte
           _SPI_ReadBytes
             _SPI_ReadByte
           _SPI_WriteByte
         _radio_comm_SendCmd
           _SPI_WriteBytes
             _SPI_WriteByte
           _radio_comm_PollCTS
             _radio_comm_GetResp
               _SPI_ReadByte
               _SPI_ReadBytes
                 _SPI_ReadByte
               _SPI_WriteByte
     _si4355_start_rx
       _radio_comm_SendCmd
         _SPI_WriteBytes
           _SPI_WriteByte
         _radio_comm_PollCTS
           _radio_comm_GetResp
             _SPI_ReadByte
             _SPI_ReadBytes
               _SPI_ReadByte
             _SPI_WriteByte
   _SPI_Init
   _si4355_fifo_info
     _radio_comm_SendCmdGetResp
       _radio_comm_GetResp
         _SPI_ReadByte
         _SPI_ReadBytes
           _SPI_ReadByte
         _SPI_WriteByte
       _radio_comm_SendCmd
         _SPI_WriteBytes
           _SPI_WriteByte
         _radio_comm_PollCTS
           _radio_comm_GetResp
             _SPI_ReadByte
             _SPI_ReadBytes
               _SPI_ReadByte
             _SPI_WriteByte

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      D3       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     40      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     50      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      2      26      10       47.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      D3      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Feb 15 01:27:01 2017

                               __CFG_CP$OFF 0000                                          _BF 10A0  
                                        l63 0406                                          l48 03CE  
         radio_comm_SendCmdGetResp@pCmdData 0023                           ?_si4355_fifo_info 0070  
                                       l114 02B2                                         l211 01A9  
                                       l301 02C7                                         l215 01D8  
                                       l321 0353                                         l314 0375  
                                       l159 0283                                         _CKE 10A6  
                                       _CKP 10AC                                         _GIE 005F  
                                       _RA0 0060                                         _RA1 0061  
                                       _RA3 0063                                         _RA5 0065  
                       _pRadioConfiguration 013C                                __CFG_CPD$OFF 0000  
                                       u957 0293                                         _SMP 10A7  
                                       u967 0250                                         u977 025B  
                                       u987 0266                                         u997 0271  
        __size_of_radio_comm_SendCmdGetResp 0013                          ??_si4355_fifo_info 0028  
                              __CFG_BORV$LO 0000                                         wreg 0009  
                              __CFG_IESO$ON 0000                                __CFG_LVP$OFF 0000  
                                      l2041 03B3                                        l2061 02AE  
                                      l2053 029D                                        l2055 02A0  
                                      l2063 02B4                                        l1821 03D8  
                                      l1911 034D                                        l1809 040E  
                                      l1841 02ED                                        l1913 0350  
                                      l1829 03B6                                        l1853 02F5  
                                      l1845 02CD                                        l1863 0416  
                                      l1847 02EF                                        l1961 0190  
                                      l1945 0182                                        l1937 016C  
                                      l1875 036E                                        l1939 016E  
                                      l1973 01CE                                        l1949 018A  
                                      l1967 01AB                                        l1969 01BA  
                                      l1977 0152                                        l1979 01E2  
                                      u1007 027C                                        _TMR0 0015  
        si4355_configuration_init@radioCmd2 0031                                __CFG_WRT$OFF 0000  
                             __CFG_FCMEN$ON 0000                                        _main 0284  
                         ??_si4355_start_rx 0029                                        _wait 0134  
                                      fsr0h 0005                                        fsr1h 0007  
                                      indf0 0000                                        fsr0l 0004  
                                      indf1 0001                                        fsr1l 0006  
                                      btemp 007E                      __size_of_Radio_PowerUp 0006  
                             __CFG_BOREN$ON 0000                        si4355_fifo_info@FIFO 002B  
                    __size_of_Radio_StartRX 001B                                        start 001A  
                            ?_SPI_ReadBytes 0073                               _SPI_WriteByte 03CA  
                             __CFG_MCLRE$ON 0000                     ??_si4355_get_int_status 002A  
                             __CFG_PLLEN$ON 0000       si4355_configuration_init@numOfBytes_2 0059  
               si4355_read_rx_fifo@numBytes 0027                                       ?_main 0070  
               ??_si4355_configuration_init 0030                               __CFG_WDTE$OFF 0000  
                                     i1l120 0016                                       _PORTA 000C  
     radio_comm_SendCmdGetResp@cmdByteCount 0027                                       _STATE 0132  
                                     _SSPM0 10A8                                       _SSPM1 10A9  
                                     _SSPM2 10AA                                       _SSPM3 10AB  
                                     _TRISA 008C                                       u58_20 0014  
                                     _SSPEN 10AD                                       _SSSEL 08ED  
         __end_of_radio_comm_SendCmdGetResp 03F1                          __size_of_HW_Config 000C  
                          SPI_ReadByte@data 0072                                       _dummy 0133  
                          __end_of_SPI_Init 0403                 __end_of_radio_comm_ReadData 0365  
                          SPI_ReadBytes@len 0076                                       status 0003  
                                     wtemp0 007E                 radio_comm_GetResp@byteCount 0079  
                            ?_SPI_WriteByte 0070                              _SPI_WriteBytes 0415  
                           __initialization 001C                                __end_of_main 02C1  
                       Radio_PowerUp@wDelay 0020                                  _Radio_Init 0237  
                                    ??_main 0144                __size_of_si4355_read_rx_fifo 000F  
                             _Radio_PowerUp 0456                               _Radio_StartRX 0382  
                   radio_comm_SendCmd@pData 0020                                      _ANSELA 018C  
                     si4355_start_rx@RX_LEN 0024                                      _SDOSEL 08EE  
                 _si4355_configuration_init 014D                                      _TMR0IE 005D  
                                    _TMR0IF 005A                                      _SSP1IE 048B  
                                    _SSP1IF 008B                             ??_SPI_ReadBytes 0075  
                                    _SSPBUF 0211                      __end_of_SPI_WriteBytes 0427  
                            __CFG_PWRTE$OFF 0000                                  _Timer0_ISR 0004  
                         __end_of_HW_Config 0442                              __CFG_STVREN$ON 0000  
                            ?_Radio_PowerUp 0070                              ?_Radio_StartRX 0070  
               __size_of_radio_comm_GetResp 0036                 radio_comm_SendCmd@byteCount 0022  
              __size_of_Radio_CheckReceived 0018                           SPI_ReadBytes@data 0073  
               __size_of_radio_comm_SendCmd 001D                 __size_of_radio_comm_PollCTS 0005  
                   __end_of__initialization 0038                             ??_SPI_WriteByte 0071  
                           ?_SPI_WriteBytes 0073                              __pcstackCOMMON 0070  
                              __pidataBANK2 0442                                 ?_Radio_Init 0070  
                               _RadioPacket 0135                                   ?_SPI_Init 0070  
        si4355_get_int_status@CHIP_CLR_PEND 0029                             _si4355_start_rx 02F7  
    __end_of_Radio_Configuration_Data_Array 014D              _Radio_Configuration_Data_Array 003C  
                                __pbssBANK0 0060                                  __pbssBANK2 0120  
                 __size_of_si4355_fifo_info 0026                                 ?_Timer0_ISR 0070  
                    si4355_start_rx@CHANNEL 002A                                  __pmaintext 0284  
                                __pintentry 0004                             ??_Radio_PowerUp 007C  
                           ??_Radio_StartRX 002E              __size_of_si4355_get_int_status 0053  
             __end_of_si4355_get_int_status 0237                    si4355_start_rx@CONDITION 0023  
                                ??_SPI_Init 0071                  si4355_start_rx@NEXT_STATE1 0026  
                si4355_start_rx@NEXT_STATE2 0027                  si4355_start_rx@NEXT_STATE3 0028  
                       __size_of_Radio_Init 004D                         _si4355_read_rx_fifo 0427  
        __size_of_si4355_configuration_init 0097                           SPI_WriteByte@data 0072  
                   __end_of_si4355_start_rx 0321                           SPI_WriteBytes@len 0075  
                                   __ptext1 0321                                     __ptext2 03F1  
                                   __ptext3 0382                                     __ptext4 02F7  
                                   __ptext5 0237                                     __ptext6 014D  
                                   __ptext7 0456                                     __ptext8 039D  
                                   __ptext9 0427                        ?_si4355_read_rx_fifo 0025  
                                   _counter 0130                         __size_of_Timer0_ISR 0016  
                ?_radio_comm_SendCmdGetResp 0023                      radio_comm_ReadData@cmd 0024  
                                   clrloop0 0451                        end_of_initialization 0038  
                                   init_ram 044A                                     initloop 044B  
                       _Radio_CheckReceived 039D                __size_of_radio_comm_ReadData 001E  
                   radio_comm_GetResp@pData 0077                                __pstringtext 003C  
         __end_of_si4355_configuration_init 01E4                       ??_si4355_read_rx_fifo 0026  
                                 _HW_Config 0436                                   _Si4355Cmd 0120  
                      ?_Radio_CheckReceived 0070                            __CFG_FOSC$INTOSC 0000  
                          ??_SPI_WriteBytes 0074                            _si4355_fifo_info 0321  
                     __end_of_SPI_ReadBytes 03CA                  si4355_read_rx_fifo@pRxData 0025  
                             ?_SPI_ReadByte 0070                                ??_Radio_Init 005E  
                          ?_si4355_start_rx 0023                  __end_of_radio_comm_GetResp 02F7  
                                ?_HW_Config 0070                       ??_Radio_CheckReceived 002E  
                         __size_of_SPI_Init 0012                  __end_of_radio_comm_SendCmd 0382  
                __end_of_radio_comm_PollCTS 0461                         start_initialization 001C  
                        __end_of_Radio_Init 0284                si4355_configuration_init@col 005D  
       si4355_get_int_status@MODEM_CLR_PEND 0028                              ??_SPI_ReadByte 0071  
                     __end_of_SPI_WriteByte 03DE                                ??_Timer0_ISR 0070  
                               __pdataBANK2 013C                        Radio_StartRX@channel 0030  
                               __pbssCOMMON 007C                                   ___latbits 0001  
                             __pcstackBANK0 0020                               __pcstackBANK1 00A0  
                             __pcstackBANK2 0144                          __end_of_Timer0_ISR 001A  
        radio_comm_SendCmdGetResp@pRespData 0025                       __end_of_Radio_PowerUp 045C  
                               ??_HW_Config 0071                       __end_of_Radio_StartRX 039D  
si4355_configuration_init@second_cmd_buffer 005A                       _si4355_get_int_status 01E4  
                       _radio_comm_ReadData 0347                 ??_radio_comm_SendCmdGetResp 0026  
                                 clear_ram0 0450         si4355_configuration_init@numOfBytes 005C  
         si4355_configuration_init@radioCmd 00A0                        ?_radio_comm_ReadData 0020  
                  __end_of_si4355_fifo_info 0347                                    _SPI_Init 03F1  
                  radio_comm_ReadData@pData 0022                        __end_of_SPI_ReadByte 0415  
                               _ctsWentHigh 007C                       ??_radio_comm_ReadData 007C  
               __end_of_si4355_read_rx_fifo 0436                   _radio_comm_SendCmdGetResp 03DE  
                ?_si4355_configuration_init 002E                      ?_si4355_get_int_status 0028  
      si4355_configuration_init@pSetPropCmd 002E                          SPI_WriteBytes@data 0073  
                radio_comm_ReadData@pollCts 0020                                    __ptext10 0347  
                                  __ptext11 01E4                                    __ptext20 0436  
                                  __ptext12 03DE                                    __ptext13 0365  
                                  __ptext14 045C                                    __ptext15 02C1  
                                  __ptext16 03B5                                    __ptext17 0403  
                                  __ptext18 0415                                    __ptext19 03CA  
                        _radio_comm_GetResp 02C1                                    _radioCmd 0060  
                        _radio_comm_SendCmd 0365                               __size_of_main 003D  
                        _radio_comm_PollCTS 045C                         ?_radio_comm_GetResp 0077  
                       ?_radio_comm_SendCmd 0020                         ?_radio_comm_PollCTS 0070  
                                  int$flags 007E                 __end_of_Radio_CheckReceived 03B5  
                                  main@wait 005F                        ??_radio_comm_GetResp 0078  
                    __size_of_SPI_ReadBytes 0015                        ??_radio_comm_SendCmd 0021  
                  __size_of_si4355_start_rx 002A                        ??_radio_comm_PollCTS 007C  
              radio_comm_ReadData@byteCount 0021        si4355_configuration_init@ctsWentHigh 005B  
          si4355_get_int_status@PH_CLR_PEND 002D                                    intlevel1 0000  
                         __CFG_CLKOUTEN$OFF 0000                     __size_of_SPI_WriteBytes 0012  
                  radio_comm_GetResp@errCnt 007A                       __size_of_SPI_ReadByte 0012  
                                _OPTION_REG 0095      radio_comm_SendCmdGetResp@respByteCount 0024  
                    __size_of_SPI_WriteByte 0014                          _RadioConfiguration 013D  
                             _SPI_ReadBytes 03B5                                _SPI_ReadByte 0403  
