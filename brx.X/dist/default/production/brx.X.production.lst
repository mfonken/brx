

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Feb 09 01:10:53 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	12LF1840
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 1.41
    39                           ; Generated 25/01/2017 GMT
    40                           ; 
    41                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC12LF1840 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  008C                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  010C                     	;# 
   113  0111                     	;# 
   114  0112                     	;# 
   115  0115                     	;# 
   116  0116                     	;# 
   117  0117                     	;# 
   118  0118                     	;# 
   119  0119                     	;# 
   120  011A                     	;# 
   121  011B                     	;# 
   122  011D                     	;# 
   123  011D                     	;# 
   124  018C                     	;# 
   125  0191                     	;# 
   126  0191                     	;# 
   127  0192                     	;# 
   128  0193                     	;# 
   129  0193                     	;# 
   130  0193                     	;# 
   131  0194                     	;# 
   132  0195                     	;# 
   133  0196                     	;# 
   134  0199                     	;# 
   135  019A                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019C                     	;# 
   141  019C                     	;# 
   142  019D                     	;# 
   143  019E                     	;# 
   144  019F                     	;# 
   145  020C                     	;# 
   146  0211                     	;# 
   147  0211                     	;# 
   148  0212                     	;# 
   149  0212                     	;# 
   150  0213                     	;# 
   151  0213                     	;# 
   152  0214                     	;# 
   153  0214                     	;# 
   154  0215                     	;# 
   155  0215                     	;# 
   156  0215                     	;# 
   157  0216                     	;# 
   158  0216                     	;# 
   159  0217                     	;# 
   160  0217                     	;# 
   161  0291                     	;# 
   162  0291                     	;# 
   163  0292                     	;# 
   164  0293                     	;# 
   165  0294                     	;# 
   166  0295                     	;# 
   167  0295                     	;# 
   168  0296                     	;# 
   169  0391                     	;# 
   170  0392                     	;# 
   171  0393                     	;# 
   172  039A                     	;# 
   173  039C                     	;# 
   174  039D                     	;# 
   175  039E                     	;# 
   176  039F                     	;# 
   177  0FE4                     	;# 
   178  0FE5                     	;# 
   179  0FE6                     	;# 
   180  0FE7                     	;# 
   181  0FE8                     	;# 
   182  0FE9                     	;# 
   183  0FEA                     	;# 
   184  0FEB                     	;# 
   185  0FED                     	;# 
   186  0FEE                     	;# 
   187  0FEF                     	;# 
   188  0000                     	;# 
   189  0001                     	;# 
   190  0002                     	;# 
   191  0003                     	;# 
   192  0004                     	;# 
   193  0005                     	;# 
   194  0006                     	;# 
   195  0007                     	;# 
   196  0008                     	;# 
   197  0009                     	;# 
   198  000A                     	;# 
   199  000B                     	;# 
   200  000C                     	;# 
   201  0011                     	;# 
   202  0012                     	;# 
   203  0015                     	;# 
   204  0016                     	;# 
   205  0016                     	;# 
   206  0017                     	;# 
   207  0018                     	;# 
   208  0019                     	;# 
   209  001A                     	;# 
   210  001B                     	;# 
   211  001C                     	;# 
   212  001E                     	;# 
   213  001F                     	;# 
   214  008C                     	;# 
   215  0091                     	;# 
   216  0092                     	;# 
   217  0095                     	;# 
   218  0096                     	;# 
   219  0097                     	;# 
   220  0098                     	;# 
   221  0099                     	;# 
   222  009A                     	;# 
   223  009B                     	;# 
   224  009B                     	;# 
   225  009C                     	;# 
   226  009D                     	;# 
   227  009E                     	;# 
   228  010C                     	;# 
   229  0111                     	;# 
   230  0112                     	;# 
   231  0115                     	;# 
   232  0116                     	;# 
   233  0117                     	;# 
   234  0118                     	;# 
   235  0119                     	;# 
   236  011A                     	;# 
   237  011B                     	;# 
   238  011D                     	;# 
   239  011D                     	;# 
   240  018C                     	;# 
   241  0191                     	;# 
   242  0191                     	;# 
   243  0192                     	;# 
   244  0193                     	;# 
   245  0193                     	;# 
   246  0193                     	;# 
   247  0194                     	;# 
   248  0195                     	;# 
   249  0196                     	;# 
   250  0199                     	;# 
   251  019A                     	;# 
   252  019B                     	;# 
   253  019B                     	;# 
   254  019B                     	;# 
   255  019B                     	;# 
   256  019C                     	;# 
   257  019C                     	;# 
   258  019D                     	;# 
   259  019E                     	;# 
   260  019F                     	;# 
   261  020C                     	;# 
   262  0211                     	;# 
   263  0211                     	;# 
   264  0212                     	;# 
   265  0212                     	;# 
   266  0213                     	;# 
   267  0213                     	;# 
   268  0214                     	;# 
   269  0214                     	;# 
   270  0215                     	;# 
   271  0215                     	;# 
   272  0215                     	;# 
   273  0216                     	;# 
   274  0216                     	;# 
   275  0217                     	;# 
   276  0217                     	;# 
   277  0291                     	;# 
   278  0291                     	;# 
   279  0292                     	;# 
   280  0293                     	;# 
   281  0294                     	;# 
   282  0295                     	;# 
   283  0295                     	;# 
   284  0296                     	;# 
   285  0391                     	;# 
   286  0392                     	;# 
   287  0393                     	;# 
   288  039A                     	;# 
   289  039C                     	;# 
   290  039D                     	;# 
   291  039E                     	;# 
   292  039F                     	;# 
   293  0FE4                     	;# 
   294  0FE5                     	;# 
   295  0FE6                     	;# 
   296  0FE7                     	;# 
   297  0FE8                     	;# 
   298  0FE9                     	;# 
   299  0FEA                     	;# 
   300  0FEB                     	;# 
   301  0FED                     	;# 
   302  0FEE                     	;# 
   303  0FEF                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0006                     	;# 
   311  0007                     	;# 
   312  0008                     	;# 
   313  0009                     	;# 
   314  000A                     	;# 
   315  000B                     	;# 
   316  000C                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  008C                     	;# 
   331  0091                     	;# 
   332  0092                     	;# 
   333  0095                     	;# 
   334  0096                     	;# 
   335  0097                     	;# 
   336  0098                     	;# 
   337  0099                     	;# 
   338  009A                     	;# 
   339  009B                     	;# 
   340  009B                     	;# 
   341  009C                     	;# 
   342  009D                     	;# 
   343  009E                     	;# 
   344  010C                     	;# 
   345  0111                     	;# 
   346  0112                     	;# 
   347  0115                     	;# 
   348  0116                     	;# 
   349  0117                     	;# 
   350  0118                     	;# 
   351  0119                     	;# 
   352  011A                     	;# 
   353  011B                     	;# 
   354  011D                     	;# 
   355  011D                     	;# 
   356  018C                     	;# 
   357  0191                     	;# 
   358  0191                     	;# 
   359  0192                     	;# 
   360  0193                     	;# 
   361  0193                     	;# 
   362  0193                     	;# 
   363  0194                     	;# 
   364  0195                     	;# 
   365  0196                     	;# 
   366  0199                     	;# 
   367  019A                     	;# 
   368  019B                     	;# 
   369  019B                     	;# 
   370  019B                     	;# 
   371  019B                     	;# 
   372  019C                     	;# 
   373  019C                     	;# 
   374  019D                     	;# 
   375  019E                     	;# 
   376  019F                     	;# 
   377  020C                     	;# 
   378  0211                     	;# 
   379  0211                     	;# 
   380  0212                     	;# 
   381  0212                     	;# 
   382  0213                     	;# 
   383  0213                     	;# 
   384  0214                     	;# 
   385  0214                     	;# 
   386  0215                     	;# 
   387  0215                     	;# 
   388  0215                     	;# 
   389  0216                     	;# 
   390  0216                     	;# 
   391  0217                     	;# 
   392  0217                     	;# 
   393  0291                     	;# 
   394  0291                     	;# 
   395  0292                     	;# 
   396  0293                     	;# 
   397  0294                     	;# 
   398  0295                     	;# 
   399  0295                     	;# 
   400  0296                     	;# 
   401  0391                     	;# 
   402  0392                     	;# 
   403  0393                     	;# 
   404  039A                     	;# 
   405  039C                     	;# 
   406  039D                     	;# 
   407  039E                     	;# 
   408  039F                     	;# 
   409  0FE4                     	;# 
   410  0FE5                     	;# 
   411  0FE6                     	;# 
   412  0FE7                     	;# 
   413  0FE8                     	;# 
   414  0FE9                     	;# 
   415  0FEA                     	;# 
   416  0FEB                     	;# 
   417  0FED                     	;# 
   418  0FEE                     	;# 
   419  0FEF                     	;# 
   420  0000                     	;# 
   421  0001                     	;# 
   422  0002                     	;# 
   423  0003                     	;# 
   424  0004                     	;# 
   425  0005                     	;# 
   426  0006                     	;# 
   427  0007                     	;# 
   428  0008                     	;# 
   429  0009                     	;# 
   430  000A                     	;# 
   431  000B                     	;# 
   432  000C                     	;# 
   433  0011                     	;# 
   434  0012                     	;# 
   435  0015                     	;# 
   436  0016                     	;# 
   437  0016                     	;# 
   438  0017                     	;# 
   439  0018                     	;# 
   440  0019                     	;# 
   441  001A                     	;# 
   442  001B                     	;# 
   443  001C                     	;# 
   444  001E                     	;# 
   445  001F                     	;# 
   446  008C                     	;# 
   447  0091                     	;# 
   448  0092                     	;# 
   449  0095                     	;# 
   450  0096                     	;# 
   451  0097                     	;# 
   452  0098                     	;# 
   453  0099                     	;# 
   454  009A                     	;# 
   455  009B                     	;# 
   456  009B                     	;# 
   457  009C                     	;# 
   458  009D                     	;# 
   459  009E                     	;# 
   460  010C                     	;# 
   461  0111                     	;# 
   462  0112                     	;# 
   463  0115                     	;# 
   464  0116                     	;# 
   465  0117                     	;# 
   466  0118                     	;# 
   467  0119                     	;# 
   468  011A                     	;# 
   469  011B                     	;# 
   470  011D                     	;# 
   471  011D                     	;# 
   472  018C                     	;# 
   473  0191                     	;# 
   474  0191                     	;# 
   475  0192                     	;# 
   476  0193                     	;# 
   477  0193                     	;# 
   478  0193                     	;# 
   479  0194                     	;# 
   480  0195                     	;# 
   481  0196                     	;# 
   482  0199                     	;# 
   483  019A                     	;# 
   484  019B                     	;# 
   485  019B                     	;# 
   486  019B                     	;# 
   487  019B                     	;# 
   488  019C                     	;# 
   489  019C                     	;# 
   490  019D                     	;# 
   491  019E                     	;# 
   492  019F                     	;# 
   493  020C                     	;# 
   494  0211                     	;# 
   495  0211                     	;# 
   496  0212                     	;# 
   497  0212                     	;# 
   498  0213                     	;# 
   499  0213                     	;# 
   500  0214                     	;# 
   501  0214                     	;# 
   502  0215                     	;# 
   503  0215                     	;# 
   504  0215                     	;# 
   505  0216                     	;# 
   506  0216                     	;# 
   507  0217                     	;# 
   508  0217                     	;# 
   509  0291                     	;# 
   510  0291                     	;# 
   511  0292                     	;# 
   512  0293                     	;# 
   513  0294                     	;# 
   514  0295                     	;# 
   515  0295                     	;# 
   516  0296                     	;# 
   517  0391                     	;# 
   518  0392                     	;# 
   519  0393                     	;# 
   520  039A                     	;# 
   521  039C                     	;# 
   522  039D                     	;# 
   523  039E                     	;# 
   524  039F                     	;# 
   525  0FE4                     	;# 
   526  0FE5                     	;# 
   527  0FE6                     	;# 
   528  0FE7                     	;# 
   529  0FE8                     	;# 
   530  0FE9                     	;# 
   531  0FEA                     	;# 
   532  0FEB                     	;# 
   533  0FED                     	;# 
   534  0FEE                     	;# 
   535  0FEF                     	;# 
   536  0000                     	;# 
   537  0001                     	;# 
   538  0002                     	;# 
   539  0003                     	;# 
   540  0004                     	;# 
   541  0005                     	;# 
   542  0006                     	;# 
   543  0007                     	;# 
   544  0008                     	;# 
   545  0009                     	;# 
   546  000A                     	;# 
   547  000B                     	;# 
   548  000C                     	;# 
   549  0011                     	;# 
   550  0012                     	;# 
   551  0015                     	;# 
   552  0016                     	;# 
   553  0016                     	;# 
   554  0017                     	;# 
   555  0018                     	;# 
   556  0019                     	;# 
   557  001A                     	;# 
   558  001B                     	;# 
   559  001C                     	;# 
   560  001E                     	;# 
   561  001F                     	;# 
   562  008C                     	;# 
   563  0091                     	;# 
   564  0092                     	;# 
   565  0095                     	;# 
   566  0096                     	;# 
   567  0097                     	;# 
   568  0098                     	;# 
   569  0099                     	;# 
   570  009A                     	;# 
   571  009B                     	;# 
   572  009B                     	;# 
   573  009C                     	;# 
   574  009D                     	;# 
   575  009E                     	;# 
   576  010C                     	;# 
   577  0111                     	;# 
   578  0112                     	;# 
   579  0115                     	;# 
   580  0116                     	;# 
   581  0117                     	;# 
   582  0118                     	;# 
   583  0119                     	;# 
   584  011A                     	;# 
   585  011B                     	;# 
   586  011D                     	;# 
   587  011D                     	;# 
   588  018C                     	;# 
   589  0191                     	;# 
   590  0191                     	;# 
   591  0192                     	;# 
   592  0193                     	;# 
   593  0193                     	;# 
   594  0193                     	;# 
   595  0194                     	;# 
   596  0195                     	;# 
   597  0196                     	;# 
   598  0199                     	;# 
   599  019A                     	;# 
   600  019B                     	;# 
   601  019B                     	;# 
   602  019B                     	;# 
   603  019B                     	;# 
   604  019C                     	;# 
   605  019C                     	;# 
   606  019D                     	;# 
   607  019E                     	;# 
   608  019F                     	;# 
   609  020C                     	;# 
   610  0211                     	;# 
   611  0211                     	;# 
   612  0212                     	;# 
   613  0212                     	;# 
   614  0213                     	;# 
   615  0213                     	;# 
   616  0214                     	;# 
   617  0214                     	;# 
   618  0215                     	;# 
   619  0215                     	;# 
   620  0215                     	;# 
   621  0216                     	;# 
   622  0216                     	;# 
   623  0217                     	;# 
   624  0217                     	;# 
   625  0291                     	;# 
   626  0291                     	;# 
   627  0292                     	;# 
   628  0293                     	;# 
   629  0294                     	;# 
   630  0295                     	;# 
   631  0295                     	;# 
   632  0296                     	;# 
   633  0391                     	;# 
   634  0392                     	;# 
   635  0393                     	;# 
   636  039A                     	;# 
   637  039C                     	;# 
   638  039D                     	;# 
   639  039E                     	;# 
   640  039F                     	;# 
   641  0FE4                     	;# 
   642  0FE5                     	;# 
   643  0FE6                     	;# 
   644  0FE7                     	;# 
   645  0FE8                     	;# 
   646  0FE9                     	;# 
   647  0FEA                     	;# 
   648  0FEB                     	;# 
   649  0FED                     	;# 
   650  0FEE                     	;# 
   651  0FEF                     	;# 
   652  0000                     	;# 
   653  0001                     	;# 
   654  0002                     	;# 
   655  0003                     	;# 
   656  0004                     	;# 
   657  0005                     	;# 
   658  0006                     	;# 
   659  0007                     	;# 
   660  0008                     	;# 
   661  0009                     	;# 
   662  000A                     	;# 
   663  000B                     	;# 
   664  000C                     	;# 
   665  0011                     	;# 
   666  0012                     	;# 
   667  0015                     	;# 
   668  0016                     	;# 
   669  0016                     	;# 
   670  0017                     	;# 
   671  0018                     	;# 
   672  0019                     	;# 
   673  001A                     	;# 
   674  001B                     	;# 
   675  001C                     	;# 
   676  001E                     	;# 
   677  001F                     	;# 
   678  008C                     	;# 
   679  0091                     	;# 
   680  0092                     	;# 
   681  0095                     	;# 
   682  0096                     	;# 
   683  0097                     	;# 
   684  0098                     	;# 
   685  0099                     	;# 
   686  009A                     	;# 
   687  009B                     	;# 
   688  009B                     	;# 
   689  009C                     	;# 
   690  009D                     	;# 
   691  009E                     	;# 
   692  010C                     	;# 
   693  0111                     	;# 
   694  0112                     	;# 
   695  0115                     	;# 
   696  0116                     	;# 
   697  0117                     	;# 
   698  0118                     	;# 
   699  0119                     	;# 
   700  011A                     	;# 
   701  011B                     	;# 
   702  011D                     	;# 
   703  011D                     	;# 
   704  018C                     	;# 
   705  0191                     	;# 
   706  0191                     	;# 
   707  0192                     	;# 
   708  0193                     	;# 
   709  0193                     	;# 
   710  0193                     	;# 
   711  0194                     	;# 
   712  0195                     	;# 
   713  0196                     	;# 
   714  0199                     	;# 
   715  019A                     	;# 
   716  019B                     	;# 
   717  019B                     	;# 
   718  019B                     	;# 
   719  019B                     	;# 
   720  019C                     	;# 
   721  019C                     	;# 
   722  019D                     	;# 
   723  019E                     	;# 
   724  019F                     	;# 
   725  020C                     	;# 
   726  0211                     	;# 
   727  0211                     	;# 
   728  0212                     	;# 
   729  0212                     	;# 
   730  0213                     	;# 
   731  0213                     	;# 
   732  0214                     	;# 
   733  0214                     	;# 
   734  0215                     	;# 
   735  0215                     	;# 
   736  0215                     	;# 
   737  0216                     	;# 
   738  0216                     	;# 
   739  0217                     	;# 
   740  0217                     	;# 
   741  0291                     	;# 
   742  0291                     	;# 
   743  0292                     	;# 
   744  0293                     	;# 
   745  0294                     	;# 
   746  0295                     	;# 
   747  0295                     	;# 
   748  0296                     	;# 
   749  0391                     	;# 
   750  0392                     	;# 
   751  0393                     	;# 
   752  039A                     	;# 
   753  039C                     	;# 
   754  039D                     	;# 
   755  039E                     	;# 
   756  039F                     	;# 
   757  0FE4                     	;# 
   758  0FE5                     	;# 
   759  0FE6                     	;# 
   760  0FE7                     	;# 
   761  0FE8                     	;# 
   762  0FE9                     	;# 
   763  0FEA                     	;# 
   764  0FEB                     	;# 
   765  0FED                     	;# 
   766  0FEE                     	;# 
   767  0FEF                     	;# 
   768  0000                     	;# 
   769  0001                     	;# 
   770  0002                     	;# 
   771  0003                     	;# 
   772  0004                     	;# 
   773  0005                     	;# 
   774  0006                     	;# 
   775  0007                     	;# 
   776  0008                     	;# 
   777  0009                     	;# 
   778  000A                     	;# 
   779  000B                     	;# 
   780  000C                     	;# 
   781  0011                     	;# 
   782  0012                     	;# 
   783  0015                     	;# 
   784  0016                     	;# 
   785  0016                     	;# 
   786  0017                     	;# 
   787  0018                     	;# 
   788  0019                     	;# 
   789  001A                     	;# 
   790  001B                     	;# 
   791  001C                     	;# 
   792  001E                     	;# 
   793  001F                     	;# 
   794  008C                     	;# 
   795  0091                     	;# 
   796  0092                     	;# 
   797  0095                     	;# 
   798  0096                     	;# 
   799  0097                     	;# 
   800  0098                     	;# 
   801  0099                     	;# 
   802  009A                     	;# 
   803  009B                     	;# 
   804  009B                     	;# 
   805  009C                     	;# 
   806  009D                     	;# 
   807  009E                     	;# 
   808  010C                     	;# 
   809  0111                     	;# 
   810  0112                     	;# 
   811  0115                     	;# 
   812  0116                     	;# 
   813  0117                     	;# 
   814  0118                     	;# 
   815  0119                     	;# 
   816  011A                     	;# 
   817  011B                     	;# 
   818  011D                     	;# 
   819  011D                     	;# 
   820  018C                     	;# 
   821  0191                     	;# 
   822  0191                     	;# 
   823  0192                     	;# 
   824  0193                     	;# 
   825  0193                     	;# 
   826  0193                     	;# 
   827  0194                     	;# 
   828  0195                     	;# 
   829  0196                     	;# 
   830  0199                     	;# 
   831  019A                     	;# 
   832  019B                     	;# 
   833  019B                     	;# 
   834  019B                     	;# 
   835  019B                     	;# 
   836  019C                     	;# 
   837  019C                     	;# 
   838  019D                     	;# 
   839  019E                     	;# 
   840  019F                     	;# 
   841  020C                     	;# 
   842  0211                     	;# 
   843  0211                     	;# 
   844  0212                     	;# 
   845  0212                     	;# 
   846  0213                     	;# 
   847  0213                     	;# 
   848  0214                     	;# 
   849  0214                     	;# 
   850  0215                     	;# 
   851  0215                     	;# 
   852  0215                     	;# 
   853  0216                     	;# 
   854  0216                     	;# 
   855  0217                     	;# 
   856  0217                     	;# 
   857  0291                     	;# 
   858  0291                     	;# 
   859  0292                     	;# 
   860  0293                     	;# 
   861  0294                     	;# 
   862  0295                     	;# 
   863  0295                     	;# 
   864  0296                     	;# 
   865  0391                     	;# 
   866  0392                     	;# 
   867  0393                     	;# 
   868  039A                     	;# 
   869  039C                     	;# 
   870  039D                     	;# 
   871  039E                     	;# 
   872  039F                     	;# 
   873  0FE4                     	;# 
   874  0FE5                     	;# 
   875  0FE6                     	;# 
   876  0FE7                     	;# 
   877  0FE8                     	;# 
   878  0FE9                     	;# 
   879  0FEA                     	;# 
   880  0FEB                     	;# 
   881  0FED                     	;# 
   882  0FEE                     	;# 
   883  0FEF                     	;# 
   884                           
   885                           	psect	idataBANK0
   886  03C0                     __pidataBANK0:	
   887                           
   888                           ;initializer for _pRadioConfiguration
   889  03C0  3461               	retlw	low (_RadioConfiguration| 0)
   890                           
   891                           ;initializer for _RadioConfiguration
   892  03C1  3433               	retlw	low (_Radio_Configuration_Data_Array| (0+32768))
   893  03C2  3480               	retlw	high (_Radio_Configuration_Data_Array| (0+32768))
   894  03C3  3400               	retlw	0
   895  03C4  3407               	retlw	7
   896  03C5  3403               	retlw	3
   897  03C6  3400               	retlw	0
   898  03C7  34F0               	retlw	240
   899                           
   900                           	psect	stringtext
   901  0033                     __pstringtext:	
   902  0033                     _Radio_Configuration_Data_Array:	
   903  0033  3407               	retlw	7
   904  0034  3402               	retlw	2
   905  0035  3401               	retlw	1
   906  0036  3400               	retlw	0
   907  0037  3401               	retlw	1
   908  0038  34C9               	retlw	201
   909  0039  34C3               	retlw	195
   910  003A  3480               	retlw	128
   911  003B  3406               	retlw	6
   912  003C  3411               	retlw	17
   913  003D  3401               	retlw	1
   914  003E  3402               	retlw	2
   915  003F  3400               	retlw	0
   916  0040  3401               	retlw	1
   917  0041  34C8               	retlw	200
   918  0042  3408               	retlw	8
   919  0043  3411               	retlw	17
   920  0044  3402               	retlw	2
   921  0045  3404               	retlw	4
   922  0046  3400               	retlw	0
   923  0047  3408               	retlw	8
   924  0048  3406               	retlw	6
   925  0049  3404               	retlw	4
   926  004A  340A               	retlw	10
   927  004B  3405               	retlw	5
   928  004C  3411               	retlw	17
   929  004D  3424               	retlw	36
   930  004E  3401               	retlw	1
   931  004F  3403               	retlw	3
   932  0050  3452               	retlw	82
   933  0051  3472               	retlw	114
   934  0052  3466               	retlw	102
   935  0053  3496               	retlw	150
   936  0054  3470               	retlw	112
   937  0055  34AC               	retlw	172
   938  0056  3457               	retlw	87
   939  0057  349F               	retlw	159
   940  0058  348C               	retlw	140
   941  0059  3466               	retlw	102
   942  005A  347F               	retlw	127
   943  005B  34A4               	retlw	164
   944  005C  34DB               	retlw	219
   945  005D  342D               	retlw	45
   946  005E  3420               	retlw	32
   947  005F  34F1               	retlw	241
   948  0060  3455               	retlw	85
   949  0061  3406               	retlw	6
   950  0062  3447               	retlw	71
   951  0063  347D               	retlw	125
   952  0064  3493               	retlw	147
   953  0065  344F               	retlw	79
   954  0066  3424               	retlw	36
   955  0067  3442               	retlw	66
   956  0068  349C               	retlw	156
   957  0069  34AF               	retlw	175
   958  006A  34C9               	retlw	201
   959  006B  349F               	retlw	159
   960  006C  347C               	retlw	124
   961  006D  3469               	retlw	105
   962  006E  34D8               	retlw	216
   963  006F  345E               	retlw	94
   964  0070  343E               	retlw	62
   965  0071  346A               	retlw	106
   966  0072  34D2               	retlw	210
   967  0073  346F               	retlw	111
   968  0074  348C               	retlw	140
   969  0075  34B2               	retlw	178
   970  0076  3427               	retlw	39
   971  0077  34D7               	retlw	215
   972  0078  3407               	retlw	7
   973  0079  34BC               	retlw	188
   974  007A  34F3               	retlw	243
   975  007B  3456               	retlw	86
   976  007C  34D4               	retlw	212
   977  007D  3424               	retlw	36
   978  007E  3405               	retlw	5
   979  007F  34F2               	retlw	242
   980  0080  34EB               	retlw	235
   981  0081  34B2               	retlw	178
   982  0082  347E               	retlw	126
   983  0083  3469               	retlw	105
   984  0084  347F               	retlw	127
   985  0085  34D4               	retlw	212
   986  0086  3465               	retlw	101
   987  0087  34C9               	retlw	201
   988  0088  3455               	retlw	85
   989  0089  3436               	retlw	54
   990  008A  344A               	retlw	74
   991  008B  34FB               	retlw	251
   992  008C  3452               	retlw	82
   993  008D  345D               	retlw	93
   994  008E  3469               	retlw	105
   995  008F  344F               	retlw	79
   996  0090  3499               	retlw	153
   997  0091  34C1               	retlw	193
   998  0092  34D2               	retlw	210
   999  0093  345F               	retlw	95
  1000  0094  34D6               	retlw	214
  1001  0095  34EF               	retlw	239
  1002  0096  34C5               	retlw	197
  1003  0097  34F8               	retlw	248
  1004  0098  3487               	retlw	135
  1005  0099  340F               	retlw	15
  1006  009A  3493               	retlw	147
  1007  009B  34E2               	retlw	226
  1008  009C  3407               	retlw	7
  1009  009D  3477               	retlw	119
  1010  009E  340E               	retlw	14
  1011  009F  3410               	retlw	16
  1012  00A0  342B               	retlw	43
  1013  00A1  34B3               	retlw	179
  1014  00A2  3439               	retlw	57
  1015  00A3  3434               	retlw	52
  1016  00A4  342A               	retlw	42
  1017  00A5  3466               	retlw	102
  1018  00A6  3420               	retlw	32
  1019  00A7  3420               	retlw	32
  1020  00A8  340D               	retlw	13
  1021  00A9  344C               	retlw	76
  1022  00AA  3426               	retlw	38
  1023  00AB  3484               	retlw	132
  1024  00AC  34E9               	retlw	233
  1025  00AD  34E7               	retlw	231
  1026  00AE  34F5               	retlw	245
  1027  00AF  3472               	retlw	114
  1028  00B0  34BA               	retlw	186
  1029  00B1  3479               	retlw	121
  1030  00B2  342C               	retlw	44
  1031  00B3  344C               	retlw	76
  1032  00B4  34ED               	retlw	237
  1033  00B5  3486               	retlw	134
  1034  00B6  34B3               	retlw	179
  1035  00B7  3498               	retlw	152
  1036  00B8  34D3               	retlw	211
  1037  00B9  349F               	retlw	159
  1038  00BA  343B               	retlw	59
  1039  00BB  3427               	retlw	39
  1040  00BC  34BC               	retlw	188
  1041  00BD  340A               	retlw	10
  1042  00BE  3419               	retlw	25
  1043  00BF  3418               	retlw	24
  1044  00C0  3485               	retlw	133
  1045  00C1  3485               	retlw	133
  1046  00C2  3405               	retlw	5
  1047  00C3  3416               	retlw	22
  1048  00C4  3401               	retlw	1
  1049  00C5  3400               	retlw	0
  1050  00C6  3470               	retlw	112
  1051  00C7  3466               	retlw	102
  1052  00C8  3467               	retlw	103
  1053  00C9  344E               	retlw	78
  1054  00CA  34F6               	retlw	246
  1055  00CB  3409               	retlw	9
  1056  00CC  3465               	retlw	101
  1057  00CD  3492               	retlw	146
  1058  00CE  34B9               	retlw	185
  1059  00CF  340C               	retlw	12
  1060  00D0  348F               	retlw	143
  1061  00D1  342C               	retlw	44
  1062  00D2  349A               	retlw	154
  1063  00D3  3438               	retlw	56
  1064  00D4  34C5               	retlw	197
  1065  00D5  340A               	retlw	10
  1066  00D6  3477               	retlw	119
  1067  00D7  34CF               	retlw	207
  1068  00D8  3480               	retlw	128
  1069  00D9  3405               	retlw	5
  1070  00DA  34DC               	retlw	220
  1071  00DB  3428               	retlw	40
  1072  00DC  34DA               	retlw	218
  1073  00DD  340F               	retlw	15
  1074  00DE  34BE               	retlw	190
  1075  00DF  347E               	retlw	126
  1076  00E0  34BE               	retlw	190
  1077  00E1  34C6               	retlw	198
  1078  00E2  3498               	retlw	152
  1079  00E3  341A               	retlw	26
  1080  00E4  341F               	retlw	31
  1081  00E5  342E               	retlw	46
  1082  00E6  3424               	retlw	36
  1083  00E7  349D               	retlw	157
  1084  00E8  34B7               	retlw	183
  1085  00E9  34F2               	retlw	242
  1086  00EA  3472               	retlw	114
  1087  00EB  3468               	retlw	104
  1088  00EC  341A               	retlw	26
  1089  00ED  3404               	retlw	4
  1090  00EE  34F2               	retlw	242
  1091  00EF  3433               	retlw	51
  1092  00F0  344D               	retlw	77
  1093  00F1  3428               	retlw	40
  1094  00F2  347B               	retlw	123
  1095  00F3  341E               	retlw	30
  1096  00F4  3456               	retlw	86
  1097  00F5  349E               	retlw	158
  1098  00F6  3419               	retlw	25
  1099  00F7  34D3               	retlw	211
  1100  00F8  3484               	retlw	132
  1101  00F9  3475               	retlw	117
  1102  00FA  342B               	retlw	43
  1103  00FB  343F               	retlw	63
  1104  00FC  34C6               	retlw	198
  1105  00FD  343D               	retlw	61
  1106  00FE  3475               	retlw	117
  1107  00FF  3441               	retlw	65
  1108  0100  34BC               	retlw	188
  1109  0101  3426               	retlw	38
  1110  0102  34FC               	retlw	252
  1111  0103  3428               	retlw	40
  1112  0104  34FC               	retlw	252
  1113  0105  34D6               	retlw	214
  1114  0106  345F               	retlw	95
  1115  0107  34CB               	retlw	203
  1116  0108  3473               	retlw	115
  1117  0109  34B2               	retlw	178
  1118  010A  342A               	retlw	42
  1119  010B  34A1               	retlw	161
  1120  010C  3438               	retlw	56
  1121  010D  3477               	retlw	119
  1122  010E  3400               	retlw	0
  1123  010F  34C3               	retlw	195
  1124  0110  3416               	retlw	22
  1125  0111  34D9               	retlw	217
  1126  0112  343E               	retlw	62
  1127  0113  34A0               	retlw	160
  1128  0114  3443               	retlw	67
  1129  0115  3461               	retlw	97
  1130  0116  3465               	retlw	101
  1131  0117  34EF               	retlw	239
  1132  0118  343D               	retlw	61
  1133  0119  34CE               	retlw	206
  1134  011A  3480               	retlw	128
  1135  011B  3456               	retlw	86
  1136  011C  34F9               	retlw	249
  1137  011D  34CF               	retlw	207
  1138  011E  3418               	retlw	24
  1139  011F  3405               	retlw	5
  1140  0120  3449               	retlw	73
  1141  0121  3483               	retlw	131
  1142  0122  3407               	retlw	7
  1143  0123  3482               	retlw	130
  1144  0124  3445               	retlw	69
  1145  0125  34F6               	retlw	246
  1146  0126  3407               	retlw	7
  1147  0127  34B2               	retlw	178
  1148  0128  34BC               	retlw	188
  1149  0129  344C               	retlw	76
  1150  012A  348A               	retlw	138
  1151  012B  3466               	retlw	102
  1152  012C  346F               	retlw	111
  1153  012D  341B               	retlw	27
  1154  012E  349E               	retlw	158
  1155  012F  34EF               	retlw	239
  1156  0130  3424               	retlw	36
  1157  0131  3497               	retlw	151
  1158  0132  340A               	retlw	10
  1159  0133  34B0               	retlw	176
  1160  0134  349E               	retlw	158
  1161  0135  34CF               	retlw	207
  1162  0136  3449               	retlw	73
  1163  0137  3403               	retlw	3
  1164  0138  3419               	retlw	25
  1165  0139  3448               	retlw	72
  1166  013A  3453               	retlw	83
  1167  013B  3408               	retlw	8
  1168  013C  3413               	retlw	19
  1169  013D  3400               	retlw	0
  1170  013E  3400               	retlw	0
  1171  013F  3400               	retlw	0
  1172  0140  3400               	retlw	0
  1173  0141  3400               	retlw	0
  1174  0142  3400               	retlw	0
  1175  0143  3460               	retlw	96
  1176  0144  3400               	retlw	0
  1177  0145                     __end_of_Radio_Configuration_Data_Array:	
  1178  000C                     _PORTA	set	12
  1179  0015                     _TMR0	set	21
  1180  0061                     _RA1	set	97
  1181  0063                     _RA3	set	99
  1182  0060                     _RA0	set	96
  1183  005A                     _TMR0IF	set	90
  1184  0065                     _RA5	set	101
  1185  005F                     _GIE	set	95
  1186  005D                     _TMR0IE	set	93
  1187  008B                     _SSP1IF	set	139
  1188  008C                     _TRISA	set	140
  1189  0095                     _OPTION_REG	set	149
  1190  048B                     _SSP1IE	set	1163
  1191  08ED                     _SSSEL	set	2285
  1192  08EE                     _SDOSEL	set	2286
  1193  018C                     _ANSELA	set	396
  1194  0211                     _SSPBUF	set	529
  1195  10A0                     _BF	set	4256
  1196  10AB                     _SSPM3	set	4267
  1197  10AA                     _SSPM2	set	4266
  1198  10A9                     _SSPM1	set	4265
  1199  10A8                     _SSPM0	set	4264
  1200  10AC                     _CKP	set	4268
  1201  10A6                     _CKE	set	4262
  1202  10A7                     _SMP	set	4263
  1203  10AD                     _SSPEN	set	4269
  1204                           
  1205                           ; #config settings
  1206  0000                     
  1207                           	psect	cinit
  1208  001B                     start_initialization:	
  1209  001B                     __initialization:	
  1210                           
  1211                           ; Initialize objects allocated to BANK0
  1212  001B  30C0               	movlw	low __pidataBANK0
  1213  001C  0084               	movwf	4
  1214  001D  3083               	movlw	(high __pidataBANK0)| (0+128)
  1215  001E  0085               	movwf	5
  1216  001F  3060               	movlw	low __pdataBANK0
  1217  0020  0086               	movwf	6
  1218  0021  3000               	movlw	high __pdataBANK0
  1219  0022  0087               	movwf	7
  1220  0023  3008               	movlw	8
  1221  0024  3183  23C8  3180   	fcall	init_ram
  1222                           
  1223                           ; Clear objects allocated to COMMON
  1224  0027  01FC               	clrf	__pbssCOMMON& (0+127)
  1225                           
  1226                           ; Clear objects allocated to BANK0
  1227  0028  3020               	movlw	low __pbssBANK0
  1228  0029  0084               	movwf	4
  1229  002A  3000               	movlw	high __pbssBANK0
  1230  002B  0085               	movwf	5
  1231  002C  302B               	movlw	43
  1232  002D  3183  23CE         	fcall	clear_ram0
  1233  002F                     end_of_initialization:	
  1234                           ;End of C runtime variable initialization code
  1235                           
  1236  002F                     __end_of__initialization:	
  1237  002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1238  0030  0020               	movlb	0
  1239  0031  3181  2997         	ljmp	_main	;jump to C main() function
  1240                           
  1241                           	psect	bssCOMMON
  1242  007C                     __pbssCOMMON:	
  1243  007C                     _ctsWentHigh:	
  1244  007C                     	ds	1
  1245                           
  1246                           	psect	bssBANK0
  1247  0020                     __pbssBANK0:	
  1248  0020                     _Si4355Cmd:	
  1249  0020                     	ds	16
  1250  0030                     _counter:	
  1251  0030                     	ds	2
  1252  0032                     _STATE:	
  1253  0032                     	ds	1
  1254  0033                     _dummy:	
  1255  0033                     	ds	1
  1256  0034                     _radioCmd:	
  1257  0034                     	ds	16
  1258  0044                     _RadioPacket:	
  1259  0044                     	ds	7
  1260                           
  1261                           	psect	dataBANK0
  1262  0060                     __pdataBANK0:	
  1263  0060                     _pRadioConfiguration:	
  1264  0060                     	ds	1
  1265  0061                     _RadioConfiguration:	
  1266  0061                     	ds	7
  1267                           
  1268                           	psect	inittext
  1269  03C8                     init_ram:	
  1270  03C8  00FE               	movwf	126
  1271  03C9                     initloop:	
  1272  03C9  0012               	moviw fsr0++
  1273  03CA  001E               	movwi fsr1++
  1274  03CB  0BFE               	decfsz	126,f
  1275  03CC  2BC9               	goto	initloop
  1276  03CD  3400               	retlw	0
  1277                           
  1278                           	psect	clrtext
  1279  03CE                     clear_ram0:	
  1280                           ;	Called with FSR0 containing the base address, and
  1281                           ;	WREG with the size to clear
  1282                           
  1283  03CE  0064               	clrwdt	;clear the watchdog before getting into this loop
  1284  03CF                     clrloop0:	
  1285  03CF  0180               	clrf	0	;clear RAM location pointed to by FSR
  1286  03D0  3101               	addfsr 0,1
  1287  03D1  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1288  03D2  2BCF               	goto	clrloop0	;have we reached the end yet?
  1289  03D3  3400               	retlw	0	;all done for this memory range, return
  1290                           
  1291                           	psect	cstackCOMMON
  1292  0070                     __pcstackCOMMON:	
  1293  0070                     ?_SPI_WriteByte:	
  1294  0070                     ?_SPI_ReadByte:	
  1295                           ; 1 bytes @ 0x0
  1296                           
  1297  0070                     ?_HW_Config:	
  1298                           ; 1 bytes @ 0x0
  1299                           
  1300  0070                     ?_Radio_Init:	
  1301                           ; 1 bytes @ 0x0
  1302                           
  1303  0070                     ?_Radio_StartRX:	
  1304                           ; 1 bytes @ 0x0
  1305                           
  1306  0070                     ?_si4355_fifo_info:	
  1307                           ; 1 bytes @ 0x0
  1308                           
  1309  0070                     ?_Radio_CheckReceived:	
  1310                           ; 1 bytes @ 0x0
  1311                           
  1312  0070                     ?_radio_comm_PollCTS:	
  1313                           ; 1 bytes @ 0x0
  1314                           
  1315  0070                     ?_SPI_Init:	
  1316                           ; 1 bytes @ 0x0
  1317                           
  1318  0070                     ?_main:	
  1319                           ; 1 bytes @ 0x0
  1320                           
  1321  0070                     ?_Timer0_ISR:	
  1322                           ; 1 bytes @ 0x0
  1323                           
  1324  0070                     ??_Timer0_ISR:	
  1325                           ; 1 bytes @ 0x0
  1326                           
  1327  0070                     ?_Radio_PowerUp:	
  1328                           ; 1 bytes @ 0x0
  1329                           
  1330                           
  1331                           ; 1 bytes @ 0x0
  1332  0070                     	ds	1
  1333  0071                     ??_SPI_WriteByte:	
  1334  0071                     ??_SPI_ReadByte:	
  1335                           ; 1 bytes @ 0x1
  1336                           
  1337  0071                     ??_HW_Config:	
  1338                           ; 1 bytes @ 0x1
  1339                           
  1340  0071                     ??_SPI_Init:	
  1341                           ; 1 bytes @ 0x1
  1342                           
  1343                           
  1344                           ; 1 bytes @ 0x1
  1345  0071                     	ds	1
  1346  0072                     SPI_WriteByte@data:	
  1347  0072                     SPI_ReadByte@data:	
  1348                           ; 1 bytes @ 0x2
  1349                           
  1350                           
  1351                           ; 1 bytes @ 0x2
  1352  0072                     	ds	1
  1353  0073                     ?_SPI_WriteBytes:	
  1354  0073                     ?_SPI_ReadBytes:	
  1355                           ; 1 bytes @ 0x3
  1356                           
  1357  0073                     SPI_WriteBytes@data:	
  1358                           ; 1 bytes @ 0x3
  1359                           
  1360  0073                     SPI_ReadBytes@data:	
  1361                           ; 1 bytes @ 0x3
  1362                           
  1363                           
  1364                           ; 1 bytes @ 0x3
  1365  0073                     	ds	1
  1366  0074                     ??_SPI_WriteBytes:	
  1367  0074                     ??_SPI_ReadBytes:	
  1368                           ; 1 bytes @ 0x4
  1369                           
  1370                           
  1371                           ; 1 bytes @ 0x4
  1372  0074                     	ds	1
  1373  0075                     SPI_WriteBytes@len:	
  1374  0075                     SPI_ReadBytes@len:	
  1375                           ; 1 bytes @ 0x5
  1376                           
  1377                           
  1378                           ; 1 bytes @ 0x5
  1379  0075                     	ds	1
  1380  0076                     ?_radio_comm_GetResp:	
  1381  0076                     radio_comm_GetResp@pData:	
  1382                           ; 1 bytes @ 0x6
  1383                           
  1384                           
  1385                           ; 1 bytes @ 0x6
  1386  0076                     	ds	1
  1387  0077                     ??_radio_comm_GetResp:	
  1388                           
  1389                           ; 1 bytes @ 0x7
  1390  0077                     	ds	1
  1391  0078                     radio_comm_GetResp@byteCount:	
  1392                           
  1393                           ; 1 bytes @ 0x8
  1394  0078                     	ds	1
  1395  0079                     radio_comm_GetResp@errCnt:	
  1396                           
  1397                           ; 2 bytes @ 0x9
  1398  0079                     	ds	2
  1399  007B                     ??_radio_comm_PollCTS:	
  1400  007B                     ?_radio_comm_SendCmd:	
  1401                           ; 1 bytes @ 0xB
  1402                           
  1403  007B                     ??_radio_comm_ReadData:	
  1404                           ; 1 bytes @ 0xB
  1405                           
  1406  007B                     ??_Radio_PowerUp:	
  1407                           ; 1 bytes @ 0xB
  1408                           
  1409  007B                     radio_comm_SendCmd@pData:	
  1410                           ; 1 bytes @ 0xB
  1411                           
  1412                           
  1413                           ; 1 bytes @ 0xB
  1414  007B                     	ds	1
  1415  007C                     ??_Radio_Init:	
  1416                           
  1417                           	psect	cstackBANK0
  1418  004B                     __pcstackBANK0:	
  1419                           ; 1 bytes @ 0xC
  1420                           
  1421  004B                     ??_radio_comm_SendCmd:	
  1422  004B                     ?_radio_comm_ReadData:	
  1423                           ; 1 bytes @ 0x0
  1424                           
  1425  004B                     radio_comm_ReadData@pollCts:	
  1426                           ; 1 bytes @ 0x0
  1427                           
  1428  004B                     Radio_PowerUp@wDelay:	
  1429                           ; 1 bytes @ 0x0
  1430                           
  1431                           
  1432                           ; 2 bytes @ 0x0
  1433  004B                     	ds	1
  1434  004C                     radio_comm_SendCmd@byteCount:	
  1435  004C                     radio_comm_ReadData@byteCount:	
  1436                           ; 1 bytes @ 0x1
  1437                           
  1438                           
  1439                           ; 1 bytes @ 0x1
  1440  004C                     	ds	1
  1441  004D                     ?_si4355_start_rx:	
  1442  004D                     ?_radio_comm_SendCmdGetResp:	
  1443                           ; 1 bytes @ 0x2
  1444                           
  1445  004D                     si4355_start_rx@CONDITION:	
  1446                           ; 1 bytes @ 0x2
  1447                           
  1448  004D                     radio_comm_SendCmdGetResp@pCmdData:	
  1449                           ; 1 bytes @ 0x2
  1450                           
  1451  004D                     radio_comm_ReadData@pData:	
  1452                           ; 1 bytes @ 0x2
  1453                           
  1454                           
  1455                           ; 1 bytes @ 0x2
  1456  004D                     	ds	1
  1457  004E                     radio_comm_SendCmdGetResp@respByteCount:	
  1458  004E                     radio_comm_ReadData@cmd:	
  1459                           ; 1 bytes @ 0x3
  1460                           
  1461  004E                     si4355_start_rx@RX_LEN:	
  1462                           ; 1 bytes @ 0x3
  1463                           
  1464                           
  1465                           ; 2 bytes @ 0x3
  1466  004E                     	ds	1
  1467  004F                     ?_si4355_read_rx_fifo:	
  1468  004F                     si4355_read_rx_fifo@pRxData:	
  1469                           ; 1 bytes @ 0x4
  1470                           
  1471  004F                     radio_comm_SendCmdGetResp@pRespData:	
  1472                           ; 1 bytes @ 0x4
  1473                           
  1474                           
  1475                           ; 1 bytes @ 0x4
  1476  004F                     	ds	1
  1477  0050                     ??_si4355_read_rx_fifo:	
  1478  0050                     ??_radio_comm_SendCmdGetResp:	
  1479                           ; 1 bytes @ 0x5
  1480                           
  1481  0050                     si4355_start_rx@NEXT_STATE1:	
  1482                           ; 1 bytes @ 0x5
  1483                           
  1484                           
  1485                           ; 1 bytes @ 0x5
  1486  0050                     	ds	1
  1487  0051                     si4355_start_rx@NEXT_STATE2:	
  1488  0051                     radio_comm_SendCmdGetResp@cmdByteCount:	
  1489                           ; 1 bytes @ 0x6
  1490                           
  1491                           
  1492                           ; 1 bytes @ 0x6
  1493  0051                     	ds	1
  1494  0052                     ??_si4355_fifo_info:	
  1495  0052                     ?_si4355_get_int_status:	
  1496                           ; 1 bytes @ 0x7
  1497                           
  1498  0052                     si4355_get_int_status@MODEM_CLR_PEND:	
  1499                           ; 1 bytes @ 0x7
  1500                           
  1501  0052                     si4355_start_rx@NEXT_STATE3:	
  1502                           ; 1 bytes @ 0x7
  1503                           
  1504  0052                     si4355_read_rx_fifo@numBytes:	
  1505                           ; 1 bytes @ 0x7
  1506                           
  1507                           
  1508                           ; 1 bytes @ 0x7
  1509  0052                     	ds	1
  1510  0053                     ??_si4355_start_rx:	
  1511  0053                     si4355_get_int_status@CHIP_CLR_PEND:	
  1512                           ; 1 bytes @ 0x8
  1513                           
  1514                           
  1515                           ; 1 bytes @ 0x8
  1516  0053                     	ds	1
  1517  0054                     ??_si4355_get_int_status:	
  1518  0054                     si4355_start_rx@CHANNEL:	
  1519                           ; 1 bytes @ 0x9
  1520                           
  1521                           
  1522                           ; 1 bytes @ 0x9
  1523  0054                     	ds	1
  1524  0055                     si4355_fifo_info@FIFO:	
  1525                           
  1526                           ; 1 bytes @ 0xA
  1527  0055                     	ds	2
  1528  0057                     si4355_get_int_status@PH_CLR_PEND:	
  1529                           
  1530                           ; 1 bytes @ 0xC
  1531  0057                     	ds	1
  1532  0058                     ??_Radio_StartRX:	
  1533  0058                     ??_Radio_CheckReceived:	
  1534                           ; 1 bytes @ 0xD
  1535                           
  1536  0058                     ?_si4355_configuration_init:	
  1537                           ; 1 bytes @ 0xD
  1538                           
  1539  0058                     si4355_configuration_init@pSetPropCmd:	
  1540                           ; 1 bytes @ 0xD
  1541                           
  1542                           
  1543                           ; 2 bytes @ 0xD
  1544  0058                     	ds	2
  1545  005A                     ??_si4355_configuration_init:	
  1546  005A                     Radio_StartRX@channel:	
  1547                           ; 1 bytes @ 0xF
  1548                           
  1549                           
  1550                           ; 1 bytes @ 0xF
  1551  005A                     	ds	1
  1552  005B                     si4355_configuration_init@col:	
  1553                           
  1554                           ; 1 bytes @ 0x10
  1555  005B                     	ds	1
  1556  005C                     si4355_configuration_init@numOfBytes:	
  1557                           
  1558                           ; 1 bytes @ 0x11
  1559  005C                     	ds	1
  1560  005D                     ??_main:	
  1561                           
  1562                           ; 1 bytes @ 0x12
  1563  005D                     	ds	1
  1564  005E                     main@r:	
  1565                           
  1566                           ; 1 bytes @ 0x13
  1567  005E                     	ds	1
  1568  005F                     main@wait:	
  1569                           
  1570                           ; 1 bytes @ 0x14
  1571  005F                     	ds	1
  1572                           
  1573                           	psect	maintext
  1574  0197                     __pmaintext:	
  1575 ;;
  1576 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1577 ;;
  1578 ;; *************** function _main *****************
  1579 ;; Defined at:
  1580 ;;		line 20 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/main.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;		None
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  wait            1   20[BANK0 ] unsigned char 
  1585 ;;  r               1   19[BANK0 ] unsigned char 
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      void 
  1588 ;; Registers used:
  1589 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : B1F/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1595 ;;      Params:         0       0       0       0
  1596 ;;      Locals:         0       2       0       0
  1597 ;;      Temps:          0       1       0       0
  1598 ;;      Totals:         0       3       0       0
  1599 ;;Total ram usage:        3 bytes
  1600 ;; Hardware stack levels required when called:   10
  1601 ;; This function calls:
  1602 ;;		_HW_Config
  1603 ;;		_Radio_CheckReceived
  1604 ;;		_Radio_Init
  1605 ;;		_Radio_StartRX
  1606 ;;		_SPI_Init
  1607 ;;		_SPI_ReadByte
  1608 ;;		_SPI_WriteByte
  1609 ;;		_si4355_fifo_info
  1610 ;; This function is called by:
  1611 ;;		Startup code after reset
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           
  1616                           ;psect for function _main
  1617  0197                     _main:	
  1618                           
  1619                           ;main.c: 22: HW_Config();
  1620                           
  1621                           ;incstack = 0
  1622                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1623  0197  3183  23A9  3181   	fcall	_HW_Config
  1624                           
  1625                           ;main.c: 23: SPI_Init();
  1626  019A  3183  2369  3181   	fcall	_SPI_Init
  1627                           
  1628                           ;main.c: 24: U8 wait = 100;
  1629  019D  3064               	movlw	100
  1630  019E  0020               	movlb	0	; select bank0
  1631  019F  00DD               	movwf	??_main
  1632  01A0  085D               	movf	??_main,w
  1633  01A1  00DF               	movwf	main@wait
  1634                           
  1635                           ;main.c: 25: for(; wait != 0; wait--);
  1636  01A2  085F               	movf	main@wait,w
  1637  01A3  1903               	btfsc	3,2
  1638  01A4  29AA               	goto	l1957
  1639  01A5                     l1955:	
  1640  01A5  3001               	movlw	1
  1641  01A6  02DF               	subwf	main@wait,f
  1642  01A7  085F               	movf	main@wait,w
  1643  01A8  1D03               	btfss	3,2
  1644  01A9  29A5               	goto	l1955
  1645  01AA                     l1957:	
  1646                           
  1647                           ;main.c: 26: U8 r = 0;
  1648  01AA  01DE               	clrf	main@r
  1649  01AB                     l1965:	
  1650                           ;main.c: 27: while(!r)
  1651                           
  1652  01AB  085E               	movf	main@r,w
  1653  01AC  1D03               	btfss	3,2
  1654  01AD  29BC               	goto	l106
  1655                           
  1656                           ;main.c: 28: {
  1657                           ;main.c: 29: RA5 = 0;
  1658  01AE  128C               	bcf	12,5	;volatile
  1659                           
  1660                           ;main.c: 30: SPI_WriteByte(0x44);
  1661  01AF  3044               	movlw	68
  1662  01B0  3183  239C  3181   	fcall	_SPI_WriteByte
  1663                           
  1664                           ;main.c: 31: r = SPI_ReadByte();
  1665  01B3  3183  23B5  3181   	fcall	_SPI_ReadByte
  1666  01B6  0020               	movlb	0	; select bank0
  1667  01B7  00DD               	movwf	??_main
  1668  01B8  085D               	movf	??_main,w
  1669  01B9  00DE               	movwf	main@r
  1670                           
  1671                           ;main.c: 32: RA5 = 1;
  1672  01BA  168C               	bsf	12,5	;volatile
  1673  01BB  29AB               	goto	l1965
  1674  01BC                     l106:	
  1675                           ;main.c: 33: }
  1676                           ;main.c: 34: while(1);
  1677                           
  1678  01BC  29BC               	goto	l106
  1679  01BD                     l1967:	
  1680                           ;main.c: 37: {
  1681                           ;main.c: 38: case STARTUP:
  1682                           
  1683                           ;main.c: 35: {
  1684                           ;main.c: 36: switch( STATE )
  1685                           
  1686                           
  1687                           ;main.c: 39: Radio_Init();
  1688  01BD  3182  22FB  3181   	fcall	_Radio_Init
  1689  01C0                     l1969:	
  1690                           ;main.c: 40: case ARMED:
  1691                           
  1692                           
  1693                           ;main.c: 41: Radio_StartRX( 0u );
  1694  01C0  3000               	movlw	0
  1695  01C1  3182  22E0  3181   	fcall	_Radio_StartRX
  1696                           
  1697                           ;main.c: 43: si4355_fifo_info( 0x02 );
  1698  01C4  3002               	movlw	2
  1699  01C5  3182  2282  3181   	fcall	_si4355_fifo_info
  1700                           
  1701                           ;main.c: 44: STATE = RECEIVING;
  1702  01C8  3002               	movlw	2
  1703  01C9  0020               	movlb	0	; select bank0
  1704  01CA  00DD               	movwf	??_main
  1705  01CB  085D               	movf	??_main,w
  1706  01CC  00B2               	movwf	_STATE
  1707                           
  1708                           ;main.c: 45: break;
  1709  01CD  29DF               	goto	l116
  1710  01CE                     l1975:	
  1711                           ;main.c: 46: case RECEIVING:
  1712                           
  1713                           
  1714                           ;main.c: 47: if( Radio_CheckReceived() );
  1715  01CE  3183  232B  3181   	fcall	_Radio_CheckReceived
  1716                           
  1717                           ;main.c: 48: STATE = ARMED;
  1718  01D1  0020               	movlb	0	; select bank0
  1719  01D2                     l115:	
  1720                           ;main.c: 50: default:
  1721                           
  1722                           ;main.c: 49: break;
  1723                           
  1724                           
  1725                           ;main.c: 51: STATE = ARMED;
  1726  01D2  01B2               	clrf	_STATE
  1727  01D3  0AB2               	incf	_STATE,f
  1728                           
  1729                           ;main.c: 52: }
  1730  01D4  29DF               	goto	l116
  1731                           
  1732                           ; Switch size 1, requested type "space"
  1733                           ; Number of cases is 3, Range of values is 0 to 2
  1734                           ; switch strategies available:
  1735                           ; Name         Instructions Cycles
  1736                           ; simple_byte           10     6 (average)
  1737                           ; direct_byte           12     6 (fixed)
  1738                           ; jumptable            260     6 (fixed)
  1739                           ;	Chosen strategy is simple_byte
  1740  01D5  3A00               	xorlw	0	; case 0
  1741  01D6  1903               	skipnz
  1742  01D7  29BD               	goto	l1967
  1743  01D8  3A01               	xorlw	1	; case 1
  1744  01D9  1903               	skipnz
  1745  01DA  29C0               	goto	l1969
  1746  01DB  3A03               	xorlw	3	; case 2
  1747  01DC  1903               	skipnz
  1748  01DD  29CE               	goto	l1975
  1749  01DE  29D2               	goto	l115
  1750  01DF                     l116:	
  1751                           ;main.c: 53: }
  1752                           ;main.c: 54: return;
  1753                           
  1754  01DF  3180  2819         	ljmp	start
  1755  01E1                     __end_of_main:	
  1756                           
  1757                           	psect	text1
  1758  0282                     __ptext1:	
  1759 ;; *************** function _si4355_fifo_info *****************
  1760 ;; Defined at:
  1761 ;;		line 200 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/si4355.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;  FIFO            1    wreg     unsigned char 
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;  FIFO            1   10[BANK0 ] unsigned char 
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  1    wreg      void 
  1768 ;; Registers used:
  1769 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1775 ;;      Params:         0       0       0       0
  1776 ;;      Locals:         0       1       0       0
  1777 ;;      Temps:          0       3       0       0
  1778 ;;      Totals:         0       4       0       0
  1779 ;;Total ram usage:        4 bytes
  1780 ;; Hardware stack levels used:    1
  1781 ;; Hardware stack levels required when called:    7
  1782 ;; This function calls:
  1783 ;;		_radio_comm_SendCmdGetResp
  1784 ;; This function is called by:
  1785 ;;		_main
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           
  1790                           ;psect for function _si4355_fifo_info
  1791  0282                     _si4355_fifo_info:	
  1792                           
  1793                           ;incstack = 0
  1794                           ; Regs used in _si4355_fifo_info: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1795                           ;si4355_fifo_info@FIFO stored from wreg
  1796  0282  0020               	movlb	0	; select bank0
  1797  0283  00D5               	movwf	si4355_fifo_info@FIFO
  1798                           
  1799                           ;si4355.c: 202: radioCmd[0] = 0x15;
  1800  0284  3015               	movlw	21
  1801  0285  00D2               	movwf	??_si4355_fifo_info
  1802  0286  0852               	movf	??_si4355_fifo_info,w
  1803  0287  00B4               	movwf	_radioCmd
  1804                           
  1805                           ;si4355.c: 203: radioCmd[1] = FIFO;
  1806  0288  0855               	movf	si4355_fifo_info@FIFO,w
  1807  0289  00D2               	movwf	??_si4355_fifo_info
  1808  028A  0852               	movf	??_si4355_fifo_info,w
  1809  028B  00B5               	movwf	_radioCmd+1
  1810                           
  1811                           ;si4355.c: 205: radio_comm_SendCmdGetResp( 2,
  1812                           ;si4355.c: 206: radioCmd,
  1813                           ;si4355.c: 207: 2,
  1814                           ;si4355.c: 208: radioCmd );
  1815  028C  3034               	movlw	(low (_radioCmd| 0))& (0+255)
  1816  028D  00D2               	movwf	??_si4355_fifo_info
  1817  028E  0852               	movf	??_si4355_fifo_info,w
  1818  028F  00CD               	movwf	radio_comm_SendCmdGetResp@pCmdData
  1819  0290  3002               	movlw	2
  1820  0291  00D3               	movwf	??_si4355_fifo_info+1
  1821  0292  0853               	movf	??_si4355_fifo_info+1,w
  1822  0293  00CE               	movwf	radio_comm_SendCmdGetResp@respByteCount
  1823  0294  3034               	movlw	(low (_radioCmd| 0))& (0+255)
  1824  0295  00D4               	movwf	??_si4355_fifo_info+2
  1825  0296  0854               	movf	??_si4355_fifo_info+2,w
  1826  0297  00CF               	movwf	radio_comm_SendCmdGetResp@pRespData
  1827  0298  3002               	movlw	2
  1828  0299  3183  2356         	fcall	_radio_comm_SendCmdGetResp
  1829                           
  1830                           ;si4355.c: 210: Si4355Cmd.FIFO_INFO.RX_FIFO_COUNT = radioCmd[0];
  1831  029B  0020               	movlb	0	; select bank0
  1832  029C  0834               	movf	_radioCmd,w
  1833  029D  00D2               	movwf	??_si4355_fifo_info
  1834  029E  0852               	movf	??_si4355_fifo_info,w
  1835  029F  00A0               	movwf	_Si4355Cmd
  1836                           
  1837                           ;si4355.c: 211: Si4355Cmd.FIFO_INFO.TX_FIFO_SPACE = radioCmd[1];
  1838  02A0  0835               	movf	_radioCmd+1,w
  1839  02A1  00D2               	movwf	??_si4355_fifo_info
  1840  02A2  0852               	movf	??_si4355_fifo_info,w
  1841  02A3  00A1               	movwf	_Si4355Cmd+1
  1842  02A4  0008               	return
  1843  02A5                     __end_of_si4355_fifo_info:	
  1844                           
  1845                           	psect	text2
  1846  0369                     __ptext2:	
  1847 ;; *************** function _SPI_Init *****************
  1848 ;; Defined at:
  1849 ;;		line 6 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/spi.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;		None
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;		None
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  1    wreg      void 
  1856 ;; Registers used:
  1857 ;;		None
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1863 ;;      Params:         0       0       0       0
  1864 ;;      Locals:         0       0       0       0
  1865 ;;      Temps:          0       0       0       0
  1866 ;;      Totals:         0       0       0       0
  1867 ;;Total ram usage:        0 bytes
  1868 ;; Hardware stack levels used:    1
  1869 ;; Hardware stack levels required when called:    1
  1870 ;; This function calls:
  1871 ;;		Nothing
  1872 ;; This function is called by:
  1873 ;;		_main
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           
  1878                           ;psect for function _SPI_Init
  1879  0369                     _SPI_Init:	
  1880                           
  1881                           ;spi.c: 9: SSPEN = 0;
  1882                           
  1883                           ;incstack = 0
  1884                           ; Regs used in _SPI_Init: []
  1885  0369  0024               	movlb	4	; select bank4
  1886  036A  1295               	bcf	21,5	;volatile
  1887                           
  1888                           ;spi.c: 11: SDOSEL = 1;
  1889  036B  0022               	movlb	2	; select bank2
  1890  036C  171D               	bsf	29,6	;volatile
  1891                           
  1892                           ;spi.c: 12: SSSEL = 0;
  1893  036D  129D               	bcf	29,5	;volatile
  1894                           
  1895                           ;spi.c: 14: SMP = 0;
  1896  036E  0024               	movlb	4	; select bank4
  1897  036F  1394               	bcf	20,7	;volatile
  1898                           
  1899                           ;spi.c: 16: CKE = 0;
  1900  0370  1314               	bcf	20,6	;volatile
  1901                           
  1902                           ;spi.c: 18: CKP = 0;
  1903  0371  1215               	bcf	21,4	;volatile
  1904                           
  1905                           ;spi.c: 20: SSPM0 = 0;
  1906  0372  1015               	bcf	21,0	;volatile
  1907                           
  1908                           ;spi.c: 21: SSPM1 = 0;
  1909  0373  1095               	bcf	21,1	;volatile
  1910                           
  1911                           ;spi.c: 22: SSPM2 = 0;
  1912  0374  1115               	bcf	21,2	;volatile
  1913                           
  1914                           ;spi.c: 23: SSPM3 = 0;
  1915  0375  1195               	bcf	21,3	;volatile
  1916                           
  1917                           ;spi.c: 25: SSP1IE = 1;
  1918  0376  0021               	movlb	1	; select bank1
  1919  0377  1591               	bsf	17,3	;volatile
  1920                           
  1921                           ;spi.c: 27: SSPEN = 1;
  1922  0378  0024               	movlb	4	; select bank4
  1923  0379  1695               	bsf	21,5	;volatile
  1924  037A  0008               	return
  1925  037B                     __end_of_SPI_Init:	
  1926                           
  1927                           	psect	text3
  1928  02E0                     __ptext3:	
  1929 ;; *************** function _Radio_StartRX *****************
  1930 ;; Defined at:
  1931 ;;		line 57 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/radio.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;  channel         1    wreg     unsigned char 
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;  channel         1   15[BANK0 ] unsigned char 
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1945 ;;      Params:         0       0       0       0
  1946 ;;      Locals:         0       1       0       0
  1947 ;;      Temps:          0       2       0       0
  1948 ;;      Totals:         0       3       0       0
  1949 ;;Total ram usage:        3 bytes
  1950 ;; Hardware stack levels used:    1
  1951 ;; Hardware stack levels required when called:    8
  1952 ;; This function calls:
  1953 ;;		_si4355_get_int_status
  1954 ;;		_si4355_start_rx
  1955 ;; This function is called by:
  1956 ;;		_main
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960                           
  1961                           ;psect for function _Radio_StartRX
  1962  02E0                     _Radio_StartRX:	
  1963                           
  1964                           ;incstack = 0
  1965                           ; Regs used in _Radio_StartRX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1966                           ;Radio_StartRX@channel stored from wreg
  1967  02E0  0020               	movlb	0	; select bank0
  1968  02E1  00DA               	movwf	Radio_StartRX@channel
  1969                           
  1970                           ;radio.c: 60: si4355_get_int_status( 0u, 0u, 0u );
  1971  02E2  01D2               	clrf	si4355_get_int_status@MODEM_CLR_PEND
  1972  02E3  01D3               	clrf	si4355_get_int_status@CHIP_CLR_PEND
  1973  02E4  3000               	movlw	0
  1974  02E5  3181  21E1  3182   	fcall	_si4355_get_int_status
  1975                           
  1976                           ;radio.c: 63: si4355_start_rx( channel, 0u, 0u,
  1977                           ;radio.c: 64: 8,
  1978                           ;radio.c: 65: 1,
  1979                           ;radio.c: 66: 8 );
  1980  02E8  0020               	movlb	0	; select bank0
  1981  02E9  01CD               	clrf	si4355_start_rx@CONDITION
  1982  02EA  3000               	movlw	0
  1983  02EB  00CE               	movwf	si4355_start_rx@RX_LEN
  1984  02EC  00CF               	movwf	si4355_start_rx@RX_LEN+1
  1985  02ED  3008               	movlw	8
  1986  02EE  00D8               	movwf	??_Radio_StartRX
  1987  02EF  0858               	movf	??_Radio_StartRX,w
  1988  02F0  00D0               	movwf	si4355_start_rx@NEXT_STATE1
  1989  02F1  01D1               	clrf	si4355_start_rx@NEXT_STATE2
  1990  02F2  0AD1               	incf	si4355_start_rx@NEXT_STATE2,f
  1991  02F3  3008               	movlw	8
  1992  02F4  00D9               	movwf	??_Radio_StartRX+1
  1993  02F5  0859               	movf	??_Radio_StartRX+1,w
  1994  02F6  00D2               	movwf	si4355_start_rx@NEXT_STATE3
  1995  02F7  085A               	movf	Radio_StartRX@channel,w
  1996  02F8  3182  2258         	fcall	_si4355_start_rx
  1997  02FA  0008               	return
  1998  02FB                     __end_of_Radio_StartRX:	
  1999                           
  2000                           	psect	text4
  2001  0258                     __ptext4:	
  2002 ;; *************** function _si4355_start_rx *****************
  2003 ;; Defined at:
  2004 ;;		line 261 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/si4355.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;  CHANNEL         1    wreg     unsigned char 
  2007 ;;  CONDITION       1    2[BANK0 ] unsigned char 
  2008 ;;  RX_LEN          2    3[BANK0 ] unsigned int 
  2009 ;;  NEXT_STATE1     1    5[BANK0 ] unsigned char 
  2010 ;;  NEXT_STATE2     1    6[BANK0 ] unsigned char 
  2011 ;;  NEXT_STATE3     1    7[BANK0 ] unsigned char 
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;  CHANNEL         1    9[BANK0 ] unsigned char 
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  1    wreg      void 
  2016 ;; Registers used:
  2017 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2023 ;;      Params:         0       6       0       0
  2024 ;;      Locals:         0       1       0       0
  2025 ;;      Temps:          0       1       0       0
  2026 ;;      Totals:         0       8       0       0
  2027 ;;Total ram usage:        8 bytes
  2028 ;; Hardware stack levels used:    1
  2029 ;; Hardware stack levels required when called:    6
  2030 ;; This function calls:
  2031 ;;		_radio_comm_SendCmd
  2032 ;; This function is called by:
  2033 ;;		_Radio_StartRX
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037                           
  2038                           ;psect for function _si4355_start_rx
  2039  0258                     _si4355_start_rx:	
  2040                           
  2041                           ;incstack = 0
  2042                           ; Regs used in _si4355_start_rx: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2043                           ;si4355_start_rx@CHANNEL stored from wreg
  2044  0258  0020               	movlb	0	; select bank0
  2045  0259  00D4               	movwf	si4355_start_rx@CHANNEL
  2046                           
  2047                           ;si4355.c: 263: radioCmd[0] = 0x32;
  2048  025A  3032               	movlw	50
  2049  025B  00D3               	movwf	??_si4355_start_rx
  2050  025C  0853               	movf	??_si4355_start_rx,w
  2051  025D  00B4               	movwf	_radioCmd
  2052                           
  2053                           ;si4355.c: 264: radioCmd[1] = CHANNEL;
  2054  025E  0854               	movf	si4355_start_rx@CHANNEL,w
  2055  025F  00D3               	movwf	??_si4355_start_rx
  2056  0260  0853               	movf	??_si4355_start_rx,w
  2057  0261  00B5               	movwf	_radioCmd+1
  2058                           
  2059                           ;si4355.c: 265: radioCmd[2] = CONDITION;
  2060  0262  084D               	movf	si4355_start_rx@CONDITION,w
  2061  0263  00D3               	movwf	??_si4355_start_rx
  2062  0264  0853               	movf	??_si4355_start_rx,w
  2063  0265  00B6               	movwf	_radioCmd+2
  2064                           
  2065                           ;si4355.c: 266: radioCmd[3] = ( U8 )( RX_LEN >> 8 );
  2066  0266  084F               	movf	si4355_start_rx@RX_LEN+1,w
  2067  0267  00D3               	movwf	??_si4355_start_rx
  2068  0268  0853               	movf	??_si4355_start_rx,w
  2069  0269  00B7               	movwf	_radioCmd+3
  2070                           
  2071                           ;si4355.c: 267: radioCmd[4] = ( U8 )( RX_LEN );
  2072  026A  084E               	movf	si4355_start_rx@RX_LEN,w
  2073  026B  00D3               	movwf	??_si4355_start_rx
  2074  026C  0853               	movf	??_si4355_start_rx,w
  2075  026D  00B8               	movwf	_radioCmd+4
  2076                           
  2077                           ;si4355.c: 268: radioCmd[5] = NEXT_STATE1;
  2078  026E  0850               	movf	si4355_start_rx@NEXT_STATE1,w
  2079  026F  00D3               	movwf	??_si4355_start_rx
  2080  0270  0853               	movf	??_si4355_start_rx,w
  2081  0271  00B9               	movwf	_radioCmd+5
  2082                           
  2083                           ;si4355.c: 269: radioCmd[6] = NEXT_STATE2;
  2084  0272  0851               	movf	si4355_start_rx@NEXT_STATE2,w
  2085  0273  00D3               	movwf	??_si4355_start_rx
  2086  0274  0853               	movf	??_si4355_start_rx,w
  2087  0275  00BA               	movwf	_radioCmd+6
  2088                           
  2089                           ;si4355.c: 270: radioCmd[7] = NEXT_STATE3;
  2090  0276  0852               	movf	si4355_start_rx@NEXT_STATE3,w
  2091  0277  00D3               	movwf	??_si4355_start_rx
  2092  0278  0853               	movf	??_si4355_start_rx,w
  2093  0279  00BB               	movwf	_radioCmd+7
  2094                           
  2095                           ;si4355.c: 272: radio_comm_SendCmd( 8, radioCmd );
  2096  027A  3034               	movlw	(low (_radioCmd| 0))& (0+255)
  2097  027B  00D3               	movwf	??_si4355_start_rx
  2098  027C  0853               	movf	??_si4355_start_rx,w
  2099  027D  00FB               	movwf	radio_comm_SendCmd@pData
  2100  027E  3008               	movlw	8
  2101  027F  3182  22C3         	fcall	_radio_comm_SendCmd
  2102  0281  0008               	return
  2103  0282                     __end_of_si4355_start_rx:	
  2104                           
  2105                           	psect	text5
  2106  02FB                     __ptext5:	
  2107 ;; *************** function _Radio_Init *****************
  2108 ;; Defined at:
  2109 ;;		line 23 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/radio.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;		None
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;		None
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      void 
  2116 ;; Registers used:
  2117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2123 ;;      Params:         0       0       0       0
  2124 ;;      Locals:         0       0       0       0
  2125 ;;      Temps:          0       0       0       0
  2126 ;;      Totals:         0       0       0       0
  2127 ;;Total ram usage:        0 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; Hardware stack levels required when called:    9
  2130 ;; This function calls:
  2131 ;;		_Radio_PowerUp
  2132 ;;		_si4355_configuration_init
  2133 ;;		_si4355_get_int_status
  2134 ;; This function is called by:
  2135 ;;		_main
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139                           
  2140                           ;psect for function _Radio_Init
  2141  02FB                     _Radio_Init:	
  2142                           
  2143                           ;radio.c: 26: Radio_PowerUp();
  2144                           
  2145                           ;incstack = 0
  2146                           ; Regs used in _Radio_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2147  02FB  3183  2313  3182   	fcall	_Radio_PowerUp
  2148                           
  2149                           ;radio.c: 29: while( SUCCESS != si4355_configuration_init( pRadioConfiguration->Radio_Co
      +                          nfigurationArray ) )
  2150  02FE  0020               	movlb	0	; select bank0
  2151  02FF  0860               	movf	_pRadioConfiguration,w
  2152  0300  0086               	movwf	6
  2153  0301  0187               	clrf	7
  2154  0302  3F40               	moviw [0]fsr1
  2155  0303  00D8               	movwf	si4355_configuration_init@pSetPropCmd
  2156  0304  3F41               	moviw [1]fsr1
  2157  0305  00D9               	movwf	si4355_configuration_init@pSetPropCmd+1
  2158  0306  3181  2145  3182   	fcall	_si4355_configuration_init
  2159  0309  3A00               	xorlw	0
  2160  030A  1D03               	skipz
  2161  030B  2AFB               	goto	_Radio_Init
  2162                           
  2163                           ;radio.c: 33: }
  2164                           ;radio.c: 36: si4355_get_int_status(0u, 0u, 0u);
  2165                           
  2166                           ;radio.c: 30: {
  2167                           ;radio.c: 32: Radio_PowerUp();
  2168  030C  0020               	movlb	0	; select bank0
  2169  030D  01D2               	clrf	si4355_get_int_status@MODEM_CLR_PEND
  2170  030E  01D3               	clrf	si4355_get_int_status@CHIP_CLR_PEND
  2171  030F  3000               	movlw	0
  2172  0310  3181  21E1         	fcall	_si4355_get_int_status
  2173  0312  0008               	return
  2174  0313                     __end_of_Radio_Init:	
  2175                           
  2176                           	psect	text6
  2177  0145                     __ptext6:	
  2178 ;; *************** function _si4355_configuration_init *****************
  2179 ;; Defined at:
  2180 ;;		line 13 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/si4355.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;  pSetPropCmd     2   13[BANK0 ] PTR unsigned char 
  2183 ;;		 -> Radio_Configuration_Data_Array(274), 
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;  numOfBytes      1   17[BANK0 ] unsigned char 
  2186 ;;  col             1   16[BANK0 ] unsigned char 
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  1    wreg      unsigned char 
  2189 ;; Registers used:
  2190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2196 ;;      Params:         0       2       0       0
  2197 ;;      Locals:         0       2       0       0
  2198 ;;      Temps:          0       1       0       0
  2199 ;;      Totals:         0       5       0       0
  2200 ;;Total ram usage:        5 bytes
  2201 ;; Hardware stack levels used:    1
  2202 ;; Hardware stack levels required when called:    8
  2203 ;; This function calls:
  2204 ;;		_radio_comm_SendCmdGetResp
  2205 ;;		_si4355_get_int_status
  2206 ;; This function is called by:
  2207 ;;		_Radio_Init
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           
  2212                           ;psect for function _si4355_configuration_init
  2213  0145                     _si4355_configuration_init:	
  2214                           
  2215                           ;si4355.c: 15: U8 col = 0;
  2216                           
  2217                           ;incstack = 0
  2218                           ; Regs used in _si4355_configuration_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2219  0145  0020               	movlb	0	; select bank0
  2220  0146  01DB               	clrf	si4355_configuration_init@col
  2221                           
  2222                           ;si4355.c: 16: U8 numOfBytes = 0;
  2223  0147  01DC               	clrf	si4355_configuration_init@numOfBytes
  2224  0148                     l1891:	
  2225                           ;si4355.c: 19: while ( *pSetPropCmd != 0x00 )
  2226                           
  2227  0148  0020               	movlb	0	; select bank0
  2228  0149  0858               	movf	si4355_configuration_init@pSetPropCmd,w
  2229  014A  0084               	movwf	4
  2230  014B  0859               	movf	si4355_configuration_init@pSetPropCmd+1,w
  2231  014C  0085               	movwf	5
  2232  014D  0012               	moviw fsr0++
  2233  014E  1903               	btfsc	3,2
  2234  014F  2995               	goto	l1893
  2235                           
  2236                           ;si4355.c: 20: {
  2237                           ;si4355.c: 26: numOfBytes = *pSetPropCmd++;
  2238  0150  0858               	movf	si4355_configuration_init@pSetPropCmd,w
  2239  0151  0084               	movwf	4
  2240  0152  0859               	movf	si4355_configuration_init@pSetPropCmd+1,w
  2241  0153  0085               	movwf	5
  2242  0154  0800               	movf	0,w	;code access
  2243  0155  00DA               	movwf	??_si4355_configuration_init
  2244  0156  085A               	movf	??_si4355_configuration_init,w
  2245  0157  00DC               	movwf	si4355_configuration_init@numOfBytes
  2246  0158  3001               	movlw	1
  2247  0159  07D8               	addwf	si4355_configuration_init@pSetPropCmd,f
  2248  015A  3000               	movlw	0
  2249  015B  3DD9               	addwfc	si4355_configuration_init@pSetPropCmd+1,f
  2250                           
  2251                           ;si4355.c: 28: if ( numOfBytes > 16u )
  2252  015C  3011               	movlw	17
  2253  015D  025C               	subwf	si4355_configuration_init@numOfBytes,w
  2254  015E  1C03               	skipc
  2255  015F  2962               	goto	l1873
  2256                           
  2257                           ;si4355.c: 29: {
  2258                           ;si4355.c: 31: return COMMAND_ERROR;
  2259  0160  3004               	movlw	4
  2260  0161  0008               	return
  2261  0162                     l1873:	
  2262                           
  2263                           ;si4355.c: 32: }
  2264                           ;si4355.c: 34: for ( col = 0u; col < numOfBytes; col++ )
  2265  0162  01DB               	clrf	si4355_configuration_init@col
  2266  0163                     l1881:	
  2267  0163  085C               	movf	si4355_configuration_init@numOfBytes,w
  2268  0164  025B               	subwf	si4355_configuration_init@col,w
  2269  0165  1803               	btfsc	3,0
  2270  0166  297C               	goto	l1883
  2271                           
  2272                           ;si4355.c: 35: {
  2273                           ;si4355.c: 36: radioCmd[col] = *pSetPropCmd;
  2274  0167  0858               	movf	si4355_configuration_init@pSetPropCmd,w
  2275  0168  0084               	movwf	4
  2276  0169  0859               	movf	si4355_configuration_init@pSetPropCmd+1,w
  2277  016A  0085               	movwf	5
  2278  016B  0800               	movf	0,w	;code access
  2279  016C  00DA               	movwf	??_si4355_configuration_init
  2280  016D  085B               	movf	si4355_configuration_init@col,w
  2281  016E  3E34               	addlw	(low (_radioCmd| 0))& (0+255)
  2282  016F  0086               	movwf	6
  2283  0170  0187               	clrf	7
  2284  0171  085A               	movf	??_si4355_configuration_init,w
  2285  0172  0081               	movwf	1
  2286                           
  2287                           ;si4355.c: 37: pSetPropCmd++;
  2288  0173  3001               	movlw	1
  2289  0174  07D8               	addwf	si4355_configuration_init@pSetPropCmd,f
  2290  0175  3000               	movlw	0
  2291  0176  3DD9               	addwfc	si4355_configuration_init@pSetPropCmd+1,f
  2292  0177  3001               	movlw	1
  2293  0178  00DA               	movwf	??_si4355_configuration_init
  2294  0179  085A               	movf	??_si4355_configuration_init,w
  2295  017A  07DB               	addwf	si4355_configuration_init@col,f
  2296  017B  2963               	goto	l1881
  2297  017C                     l1883:	
  2298                           
  2299                           ;si4355.c: 38: }
  2300                           ;si4355.c: 40: if ( !radio_comm_SendCmdGetResp( numOfBytes, radioCmd, 0, 0 ) )
  2301  017C  3034               	movlw	(low (_radioCmd| 0))& (0+255)
  2302  017D  00DA               	movwf	??_si4355_configuration_init
  2303  017E  085A               	movf	??_si4355_configuration_init,w
  2304  017F  00CD               	movwf	radio_comm_SendCmdGetResp@pCmdData
  2305  0180  01CE               	clrf	radio_comm_SendCmdGetResp@respByteCount
  2306  0181  01CF               	clrf	radio_comm_SendCmdGetResp@pRespData
  2307  0182  085C               	movf	si4355_configuration_init@numOfBytes,w
  2308  0183  3183  2356  3181   	fcall	_radio_comm_SendCmdGetResp
  2309  0186  3A00               	xorlw	0
  2310  0187  1D03               	skipz
  2311  0188  298B               	goto	l197
  2312                           
  2313                           ;si4355.c: 41: {
  2314                           ;si4355.c: 43: return CTS_TIMEOUT;
  2315  0189  3002               	movlw	2
  2316  018A  0008               	return
  2317  018B                     l197:	
  2318                           
  2319                           ;si4355.c: 44: }
  2320                           ;si4355.c: 46: if( !RA3 )
  2321  018B  0020               	movlb	0	; select bank0
  2322  018C  198C               	btfsc	12,3	;volatile
  2323  018D  2948               	goto	l1891
  2324                           
  2325                           ;si4355.c: 47: {
  2326                           ;si4355.c: 49: si4355_get_int_status( 0u, 0u, 0u );
  2327  018E  01D2               	clrf	si4355_get_int_status@MODEM_CLR_PEND
  2328  018F  01D3               	clrf	si4355_get_int_status@CHIP_CLR_PEND
  2329  0190  3000               	movlw	0
  2330  0191  3181  21E1  3181   	fcall	_si4355_get_int_status
  2331  0194  2948               	goto	l1891
  2332  0195                     l1893:	
  2333                           
  2334                           ;si4355.c: 54: }
  2335                           ;si4355.c: 55: }
  2336                           ;si4355.c: 56: return SUCCESS;
  2337  0195  3000               	movlw	0
  2338  0196  0008               	return
  2339  0197                     __end_of_si4355_configuration_init:	
  2340                           
  2341                           	psect	text7
  2342  0313                     __ptext7:	
  2343 ;; *************** function _Radio_PowerUp *****************
  2344 ;; Defined at:
  2345 ;;		line 14 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/radio.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;		None
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;  wDelay          2    0[BANK0 ] unsigned int 
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      void 
  2352 ;; Registers used:
  2353 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2359 ;;      Params:         0       0       0       0
  2360 ;;      Locals:         0       2       0       0
  2361 ;;      Temps:          0       0       0       0
  2362 ;;      Totals:         0       2       0       0
  2363 ;;Total ram usage:        2 bytes
  2364 ;; Hardware stack levels used:    1
  2365 ;; Hardware stack levels required when called:    5
  2366 ;; This function calls:
  2367 ;;		_radio_comm_PollCTS
  2368 ;; This function is called by:
  2369 ;;		_Radio_Init
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           
  2374                           ;psect for function _Radio_PowerUp
  2375  0313                     _Radio_PowerUp:	
  2376                           
  2377                           ;radio.c: 16: U16 wDelay = 0u;
  2378                           
  2379                           ;incstack = 0
  2380                           ; Regs used in _Radio_PowerUp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2381  0313  0020               	movlb	0	; select bank0
  2382  0314  01CB               	clrf	Radio_PowerUp@wDelay
  2383  0315  01CC               	clrf	Radio_PowerUp@wDelay+1
  2384                           
  2385                           ;radio.c: 19: for( ; wDelay < 50; wDelay++);
  2386  0316  3000               	movlw	0
  2387  0317  024C               	subwf	Radio_PowerUp@wDelay+1,w
  2388  0318  3032               	movlw	50
  2389  0319  1903               	skipnz
  2390  031A  024B               	subwf	Radio_PowerUp@wDelay,w
  2391  031B  1803               	btfsc	3,0
  2392  031C  2B28               	goto	l1859
  2393  031D                     l1857:	
  2394  031D  3001               	movlw	1
  2395  031E  07CB               	addwf	Radio_PowerUp@wDelay,f
  2396  031F  3000               	movlw	0
  2397  0320  3DCC               	addwfc	Radio_PowerUp@wDelay+1,f
  2398  0321  3000               	movlw	0
  2399  0322  024C               	subwf	Radio_PowerUp@wDelay+1,w
  2400  0323  3032               	movlw	50
  2401  0324  1903               	skipnz
  2402  0325  024B               	subwf	Radio_PowerUp@wDelay,w
  2403  0326  1C03               	skipc
  2404  0327  2B1D               	goto	l1857
  2405  0328                     l1859:	
  2406                           
  2407                           ;radio.c: 20: radio_comm_PollCTS();
  2408  0328  3183  23D4         	fcall	_radio_comm_PollCTS
  2409  032A  0008               	return
  2410  032B                     __end_of_Radio_PowerUp:	
  2411                           
  2412                           	psect	text8
  2413  032B                     __ptext8:	
  2414 ;; *************** function _Radio_CheckReceived *****************
  2415 ;; Defined at:
  2416 ;;		line 39 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/radio.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;		None
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;		None
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      unsigned char 
  2423 ;; Registers used:
  2424 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2430 ;;      Params:         0       0       0       0
  2431 ;;      Locals:         0       0       0       0
  2432 ;;      Temps:          0       1       0       0
  2433 ;;      Totals:         0       1       0       0
  2434 ;;Total ram usage:        1 bytes
  2435 ;; Hardware stack levels used:    1
  2436 ;; Hardware stack levels required when called:    8
  2437 ;; This function calls:
  2438 ;;		_si4355_get_int_status
  2439 ;;		_si4355_read_rx_fifo
  2440 ;; This function is called by:
  2441 ;;		_main
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           
  2446                           ;psect for function _Radio_CheckReceived
  2447  032B                     _Radio_CheckReceived:	
  2448                           
  2449                           ;radio.c: 41: if( !RA3 )
  2450                           
  2451                           ;incstack = 0
  2452                           ; Regs used in _Radio_CheckReceived: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2453  032B  0020               	movlb	0	; select bank0
  2454  032C  198C               	btfsc	12,3	;volatile
  2455  032D  2B40               	goto	l1943
  2456                           
  2457                           ;radio.c: 42: {
  2458                           ;radio.c: 44: si4355_get_int_status(0u, 0u, 0u);
  2459  032E  01D2               	clrf	si4355_get_int_status@MODEM_CLR_PEND
  2460  032F  01D3               	clrf	si4355_get_int_status@CHIP_CLR_PEND
  2461  0330  3000               	movlw	0
  2462  0331  3181  21E1  3183   	fcall	_si4355_get_int_status
  2463                           
  2464                           ;radio.c: 47: if (Si4355Cmd.GET_INT_STATUS.PH_PEND & 0x10)
  2465  0334  0020               	movlb	0	; select bank0
  2466  0335  1E22               	btfss	_Si4355Cmd+2,4
  2467  0336  2B40               	goto	l1943
  2468                           
  2469                           ;radio.c: 48: {
  2470                           ;radio.c: 50: si4355_read_rx_fifo( sizeof( tRadioPacket ), ( U8 * ) &RadioPacket );
  2471  0337  3044               	movlw	(low (_RadioPacket| 0))& (0+255)
  2472  0338  00D8               	movwf	??_Radio_CheckReceived
  2473  0339  0858               	movf	??_Radio_CheckReceived,w
  2474  033A  00CF               	movwf	si4355_read_rx_fifo@pRxData
  2475  033B  3007               	movlw	7
  2476  033C  3183  238D         	fcall	_si4355_read_rx_fifo
  2477                           
  2478                           ;radio.c: 51: return 1;
  2479  033E  3001               	movlw	1
  2480  033F  0008               	return
  2481  0340                     l1943:	
  2482                           
  2483                           ;radio.c: 52: }
  2484                           ;radio.c: 53: }
  2485                           ;radio.c: 54: return 0;
  2486  0340  3000               	movlw	0
  2487  0341  0008               	return
  2488  0342                     __end_of_Radio_CheckReceived:	
  2489                           
  2490                           	psect	text9
  2491  038D                     __ptext9:	
  2492 ;; *************** function _si4355_read_rx_fifo *****************
  2493 ;; Defined at:
  2494 ;;		line 360 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/si4355.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;  numBytes        1    wreg     unsigned char 
  2497 ;;  pRxData         1    4[BANK0 ] PTR unsigned char 
  2498 ;;		 -> RadioPacket(7), 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;  numBytes        1    7[BANK0 ] unsigned char 
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      void 
  2503 ;; Registers used:
  2504 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2510 ;;      Params:         0       1       0       0
  2511 ;;      Locals:         0       1       0       0
  2512 ;;      Temps:          0       2       0       0
  2513 ;;      Totals:         0       4       0       0
  2514 ;;Total ram usage:        4 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:    6
  2517 ;; This function calls:
  2518 ;;		_radio_comm_ReadData
  2519 ;; This function is called by:
  2520 ;;		_Radio_CheckReceived
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           
  2525                           ;psect for function _si4355_read_rx_fifo
  2526  038D                     _si4355_read_rx_fifo:	
  2527                           
  2528                           ;incstack = 0
  2529                           ; Regs used in _si4355_read_rx_fifo: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2530                           ;si4355_read_rx_fifo@numBytes stored from wreg
  2531  038D  0020               	movlb	0	; select bank0
  2532  038E  00D2               	movwf	si4355_read_rx_fifo@numBytes
  2533                           
  2534                           ;si4355.c: 362: radio_comm_ReadData( 0x77, 0, numBytes, pRxData );
  2535  038F  01CB               	clrf	radio_comm_ReadData@pollCts
  2536  0390  0852               	movf	si4355_read_rx_fifo@numBytes,w
  2537  0391  00D0               	movwf	??_si4355_read_rx_fifo
  2538  0392  0850               	movf	??_si4355_read_rx_fifo,w
  2539  0393  00CC               	movwf	radio_comm_ReadData@byteCount
  2540  0394  084F               	movf	si4355_read_rx_fifo@pRxData,w
  2541  0395  00D1               	movwf	??_si4355_read_rx_fifo+1
  2542  0396  0851               	movf	??_si4355_read_rx_fifo+1,w
  2543  0397  00CD               	movwf	radio_comm_ReadData@pData
  2544  0398  3077               	movlw	119
  2545  0399  3182  22A5         	fcall	_radio_comm_ReadData
  2546  039B  0008               	return
  2547  039C                     __end_of_si4355_read_rx_fifo:	
  2548                           
  2549                           	psect	text10
  2550  02A5                     __ptext10:	
  2551 ;; *************** function _radio_comm_ReadData *****************
  2552 ;; Defined at:
  2553 ;;		line 64 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/comm.c"
  2554 ;; Parameters:    Size  Location     Type
  2555 ;;  cmd             1    wreg     unsigned char 
  2556 ;;  pollCts         1    0[BANK0 ] unsigned char 
  2557 ;;  byteCount       1    1[BANK0 ] unsigned char 
  2558 ;;  pData           1    2[BANK0 ] PTR unsigned char 
  2559 ;;		 -> radioCmd(16), RadioPacket(7), 
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;  cmd             1    3[BANK0 ] unsigned char 
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  1    wreg      void 
  2564 ;; Registers used:
  2565 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2571 ;;      Params:         0       3       0       0
  2572 ;;      Locals:         0       1       0       0
  2573 ;;      Temps:          1       0       0       0
  2574 ;;      Totals:         1       4       0       0
  2575 ;;Total ram usage:        5 bytes
  2576 ;; Hardware stack levels used:    1
  2577 ;; Hardware stack levels required when called:    5
  2578 ;; This function calls:
  2579 ;;		_SPI_ReadBytes
  2580 ;;		_SPI_WriteByte
  2581 ;;		_radio_comm_PollCTS
  2582 ;; This function is called by:
  2583 ;;		_si4355_read_rx_fifo
  2584 ;;		_si4355_frr_a_read
  2585 ;;		_si4355_frr_b_read
  2586 ;;		_si4355_frr_c_read
  2587 ;;		_si4355_frr_d_read
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           
  2592                           ;psect for function _radio_comm_ReadData
  2593  02A5                     _radio_comm_ReadData:	
  2594                           
  2595                           ;incstack = 0
  2596                           ; Regs used in _radio_comm_ReadData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2597                           ;radio_comm_ReadData@cmd stored from wreg
  2598  02A5  0020               	movlb	0	; select bank0
  2599  02A6  00CE               	movwf	radio_comm_ReadData@cmd
  2600                           
  2601                           ;comm.c: 66: if( pollCts )
  2602  02A7  084B               	movf	radio_comm_ReadData@pollCts,w
  2603  02A8  1D03               	btfss	3,2
  2604  02A9  2AAE               	goto	l1841
  2605  02AA  2AB1               	goto	l301
  2606  02AB                     l1839:	
  2607                           ;comm.c: 67: {
  2608                           ;comm.c: 68: while( !ctsWentHigh )
  2609                           
  2610                           
  2611                           ;comm.c: 69: {
  2612                           ;comm.c: 70: radio_comm_PollCTS();
  2613  02AB  3183  23D4  3182   	fcall	_radio_comm_PollCTS
  2614  02AE                     l1841:	
  2615  02AE  087C               	movf	_ctsWentHigh,w
  2616  02AF  1903               	btfsc	3,2
  2617  02B0  2AAB               	goto	l1839
  2618  02B1                     l301:	
  2619                           
  2620                           ;comm.c: 71: }
  2621                           ;comm.c: 72: }
  2622                           ;comm.c: 73: RA5 = 0;
  2623  02B1  0020               	movlb	0	; select bank0
  2624  02B2  128C               	bcf	12,5	;volatile
  2625                           
  2626                           ;comm.c: 74: SPI_WriteByte( cmd );
  2627  02B3  084E               	movf	radio_comm_ReadData@cmd,w
  2628  02B4  3183  239C  3182   	fcall	_SPI_WriteByte
  2629                           
  2630                           ;comm.c: 75: SPI_ReadBytes( byteCount, pData );
  2631  02B7  0020               	movlb	0	; select bank0
  2632  02B8  084D               	movf	radio_comm_ReadData@pData,w
  2633  02B9  00FB               	movwf	??_radio_comm_ReadData
  2634  02BA  087B               	movf	??_radio_comm_ReadData,w
  2635  02BB  00F3               	movwf	SPI_ReadBytes@data
  2636  02BC  084C               	movf	radio_comm_ReadData@byteCount,w
  2637  02BD  3183  2342         	fcall	_SPI_ReadBytes
  2638                           
  2639                           ;comm.c: 76: RA5 = 1;
  2640  02BF  0020               	movlb	0	; select bank0
  2641  02C0  168C               	bsf	12,5	;volatile
  2642                           
  2643                           ;comm.c: 77: ctsWentHigh = 0;
  2644  02C1  01FC               	clrf	_ctsWentHigh
  2645  02C2  0008               	return
  2646  02C3                     __end_of_radio_comm_ReadData:	
  2647                           
  2648                           	psect	text11
  2649  01E1                     __ptext11:	
  2650 ;; *************** function _si4355_get_int_status *****************
  2651 ;; Defined at:
  2652 ;;		line 239 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/si4355.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;  PH_CLR_PEND     1    wreg     unsigned char 
  2655 ;;  MODEM_CLR_PE    1    7[BANK0 ] unsigned char 
  2656 ;;  CHIP_CLR_PEN    1    8[BANK0 ] unsigned char 
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;  PH_CLR_PEND     1   12[BANK0 ] unsigned char 
  2659 ;; Return value:  Size  Location     Type
  2660 ;;                  1    wreg      void 
  2661 ;; Registers used:
  2662 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2663 ;; Tracked objects:
  2664 ;;		On entry : 0/0
  2665 ;;		On exit  : 0/0
  2666 ;;		Unchanged: 0/0
  2667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2668 ;;      Params:         0       2       0       0
  2669 ;;      Locals:         0       1       0       0
  2670 ;;      Temps:          0       3       0       0
  2671 ;;      Totals:         0       6       0       0
  2672 ;;Total ram usage:        6 bytes
  2673 ;; Hardware stack levels used:    1
  2674 ;; Hardware stack levels required when called:    7
  2675 ;; This function calls:
  2676 ;;		_radio_comm_SendCmdGetResp
  2677 ;; This function is called by:
  2678 ;;		_Radio_Init
  2679 ;;		_Radio_CheckReceived
  2680 ;;		_Radio_StartRX
  2681 ;;		_si4355_configuration_init
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           
  2686                           ;psect for function _si4355_get_int_status
  2687  01E1                     _si4355_get_int_status:	
  2688                           
  2689                           ;incstack = 0
  2690                           ; Regs used in _si4355_get_int_status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  2691                           ;si4355_get_int_status@PH_CLR_PEND stored from wreg
  2692  01E1  0020               	movlb	0	; select bank0
  2693  01E2  00D7               	movwf	si4355_get_int_status@PH_CLR_PEND
  2694                           
  2695                           ;si4355.c: 241: radioCmd[0] = 0x20;
  2696  01E3  3020               	movlw	32
  2697  01E4  00D4               	movwf	??_si4355_get_int_status
  2698  01E5  0854               	movf	??_si4355_get_int_status,w
  2699  01E6  00B4               	movwf	_radioCmd
  2700                           
  2701                           ;si4355.c: 242: radioCmd[1] = PH_CLR_PEND;
  2702  01E7  0857               	movf	si4355_get_int_status@PH_CLR_PEND,w
  2703  01E8  00D4               	movwf	??_si4355_get_int_status
  2704  01E9  0854               	movf	??_si4355_get_int_status,w
  2705  01EA  00B5               	movwf	_radioCmd+1
  2706                           
  2707                           ;si4355.c: 243: radioCmd[2] = MODEM_CLR_PEND;
  2708  01EB  0852               	movf	si4355_get_int_status@MODEM_CLR_PEND,w
  2709  01EC  00D4               	movwf	??_si4355_get_int_status
  2710  01ED  0854               	movf	??_si4355_get_int_status,w
  2711  01EE  00B6               	movwf	_radioCmd+2
  2712                           
  2713                           ;si4355.c: 244: radioCmd[3] = CHIP_CLR_PEND;
  2714  01EF  0853               	movf	si4355_get_int_status@CHIP_CLR_PEND,w
  2715  01F0  00D4               	movwf	??_si4355_get_int_status
  2716  01F1  0854               	movf	??_si4355_get_int_status,w
  2717  01F2  00B7               	movwf	_radioCmd+3
  2718                           
  2719                           ;si4355.c: 246: radio_comm_SendCmdGetResp( 4,
  2720                           ;si4355.c: 247: radioCmd,
  2721                           ;si4355.c: 248: 8,
  2722                           ;si4355.c: 249: radioCmd );
  2723  01F3  3034               	movlw	(low (_radioCmd| 0))& (0+255)
  2724  01F4  00D4               	movwf	??_si4355_get_int_status
  2725  01F5  0854               	movf	??_si4355_get_int_status,w
  2726  01F6  00CD               	movwf	radio_comm_SendCmdGetResp@pCmdData
  2727  01F7  3008               	movlw	8
  2728  01F8  00D5               	movwf	??_si4355_get_int_status+1
  2729  01F9  0855               	movf	??_si4355_get_int_status+1,w
  2730  01FA  00CE               	movwf	radio_comm_SendCmdGetResp@respByteCount
  2731  01FB  3034               	movlw	(low (_radioCmd| 0))& (0+255)
  2732  01FC  00D6               	movwf	??_si4355_get_int_status+2
  2733  01FD  0856               	movf	??_si4355_get_int_status+2,w
  2734  01FE  00CF               	movwf	radio_comm_SendCmdGetResp@pRespData
  2735  01FF  3004               	movlw	4
  2736  0200  3183  2356         	fcall	_radio_comm_SendCmdGetResp
  2737                           
  2738                           ;si4355.c: 251: Si4355Cmd.GET_INT_STATUS.INT_PEND = radioCmd[0];
  2739  0202  0020               	movlb	0	; select bank0
  2740  0203  0834               	movf	_radioCmd,w
  2741  0204  00D4               	movwf	??_si4355_get_int_status
  2742  0205  0854               	movf	??_si4355_get_int_status,w
  2743  0206  00A0               	movwf	_Si4355Cmd
  2744                           
  2745                           ;si4355.c: 252: Si4355Cmd.GET_INT_STATUS.INT_STATUS = radioCmd[1];
  2746  0207  0835               	movf	_radioCmd+1,w
  2747  0208  00D4               	movwf	??_si4355_get_int_status
  2748  0209  0854               	movf	??_si4355_get_int_status,w
  2749  020A  00A1               	movwf	_Si4355Cmd+1
  2750                           
  2751                           ;si4355.c: 253: Si4355Cmd.GET_INT_STATUS.PH_PEND = radioCmd[2];
  2752  020B  0836               	movf	_radioCmd+2,w
  2753  020C  00D4               	movwf	??_si4355_get_int_status
  2754  020D  0854               	movf	??_si4355_get_int_status,w
  2755  020E  00A2               	movwf	_Si4355Cmd+2
  2756                           
  2757                           ;si4355.c: 254: Si4355Cmd.GET_INT_STATUS.PH_STATUS = radioCmd[3];
  2758  020F  0837               	movf	_radioCmd+3,w
  2759  0210  00D4               	movwf	??_si4355_get_int_status
  2760  0211  0854               	movf	??_si4355_get_int_status,w
  2761  0212  00A3               	movwf	_Si4355Cmd+3
  2762                           
  2763                           ;si4355.c: 255: Si4355Cmd.GET_INT_STATUS.MODEM_PEND = radioCmd[4];
  2764  0213  0838               	movf	_radioCmd+4,w
  2765  0214  00D4               	movwf	??_si4355_get_int_status
  2766  0215  0854               	movf	??_si4355_get_int_status,w
  2767  0216  00A4               	movwf	_Si4355Cmd+4
  2768                           
  2769                           ;si4355.c: 256: Si4355Cmd.GET_INT_STATUS.MODEM_STATUS = radioCmd[5];
  2770  0217  0839               	movf	_radioCmd+5,w
  2771  0218  00D4               	movwf	??_si4355_get_int_status
  2772  0219  0854               	movf	??_si4355_get_int_status,w
  2773  021A  00A5               	movwf	_Si4355Cmd+5
  2774                           
  2775                           ;si4355.c: 257: Si4355Cmd.GET_INT_STATUS.CHIP_PEND = radioCmd[6];
  2776  021B  083A               	movf	_radioCmd+6,w
  2777  021C  00D4               	movwf	??_si4355_get_int_status
  2778  021D  0854               	movf	??_si4355_get_int_status,w
  2779  021E  00A6               	movwf	_Si4355Cmd+6
  2780                           
  2781                           ;si4355.c: 258: Si4355Cmd.GET_INT_STATUS.CHIP_STATUS = radioCmd[7];
  2782  021F  083B               	movf	_radioCmd+7,w
  2783  0220  00D4               	movwf	??_si4355_get_int_status
  2784  0221  0854               	movf	??_si4355_get_int_status,w
  2785  0222  00A7               	movwf	_Si4355Cmd+7
  2786  0223  0008               	return
  2787  0224                     __end_of_si4355_get_int_status:	
  2788                           
  2789                           	psect	text12
  2790  0356                     __ptext12:	
  2791 ;; *************** function _radio_comm_SendCmdGetResp *****************
  2792 ;; Defined at:
  2793 ;;		line 58 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/comm.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;  cmdByteCount    1    wreg     unsigned char 
  2796 ;;  pCmdData        1    2[BANK0 ] PTR unsigned char 
  2797 ;;		 -> radioCmd(16), 
  2798 ;;  respByteCoun    1    3[BANK0 ] unsigned char 
  2799 ;;  pRespData       1    4[BANK0 ] PTR unsigned char 
  2800 ;;		 -> NULL(0), radioCmd(16), 
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;  cmdByteCount    1    6[BANK0 ] unsigned char 
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  1    wreg      unsigned char 
  2805 ;; Registers used:
  2806 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2812 ;;      Params:         0       3       0       0
  2813 ;;      Locals:         0       1       0       0
  2814 ;;      Temps:          0       1       0       0
  2815 ;;      Totals:         0       5       0       0
  2816 ;;Total ram usage:        5 bytes
  2817 ;; Hardware stack levels used:    1
  2818 ;; Hardware stack levels required when called:    6
  2819 ;; This function calls:
  2820 ;;		_radio_comm_GetResp
  2821 ;;		_radio_comm_SendCmd
  2822 ;; This function is called by:
  2823 ;;		_si4355_configuration_init
  2824 ;;		_si4355_fifo_info
  2825 ;;		_si4355_get_int_status
  2826 ;;		_si4355_part_info
  2827 ;;		_si4355_func_info
  2828 ;;		_si4355_get_property
  2829 ;;		_si4355_gpio_pin_cfg
  2830 ;;		_si4355_request_device_state
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834                           
  2835                           ;psect for function _radio_comm_SendCmdGetResp
  2836  0356                     _radio_comm_SendCmdGetResp:	
  2837                           
  2838                           ;incstack = 0
  2839                           ; Regs used in _radio_comm_SendCmdGetResp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  2840                           ;radio_comm_SendCmdGetResp@cmdByteCount stored from wreg
  2841  0356  0020               	movlb	0	; select bank0
  2842  0357  00D1               	movwf	radio_comm_SendCmdGetResp@cmdByteCount
  2843                           
  2844                           ;comm.c: 60: radio_comm_SendCmd( cmdByteCount, pCmdData );
  2845  0358  084D               	movf	radio_comm_SendCmdGetResp@pCmdData,w
  2846  0359  00D0               	movwf	??_radio_comm_SendCmdGetResp
  2847  035A  0850               	movf	??_radio_comm_SendCmdGetResp,w
  2848  035B  00FB               	movwf	radio_comm_SendCmd@pData
  2849  035C  0851               	movf	radio_comm_SendCmdGetResp@cmdByteCount,w
  2850  035D  3182  22C3  3183   	fcall	_radio_comm_SendCmd
  2851                           
  2852                           ;comm.c: 61: return radio_comm_GetResp( respByteCount, pRespData );
  2853  0360  0020               	movlb	0	; select bank0
  2854  0361  084F               	movf	radio_comm_SendCmdGetResp@pRespData,w
  2855  0362  00D0               	movwf	??_radio_comm_SendCmdGetResp
  2856  0363  0850               	movf	??_radio_comm_SendCmdGetResp,w
  2857  0364  00F6               	movwf	radio_comm_GetResp@pData
  2858  0365  084E               	movf	radio_comm_SendCmdGetResp@respByteCount,w
  2859  0366  3182  2224         	fcall	_radio_comm_GetResp
  2860  0368  0008               	return
  2861  0369                     __end_of_radio_comm_SendCmdGetResp:	
  2862                           
  2863                           	psect	text13
  2864  02C3                     __ptext13:	
  2865 ;; *************** function _radio_comm_SendCmd *****************
  2866 ;; Defined at:
  2867 ;;		line 41 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/comm.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;  byteCount       1    wreg     unsigned char 
  2870 ;;  pData           1   11[COMMON] PTR unsigned char 
  2871 ;;		 -> radioCmd(16), 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;  byteCount       1    1[BANK0 ] unsigned char 
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1    wreg      void 
  2876 ;; Registers used:
  2877 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2883 ;;      Params:         1       0       0       0
  2884 ;;      Locals:         0       1       0       0
  2885 ;;      Temps:          0       1       0       0
  2886 ;;      Totals:         1       2       0       0
  2887 ;;Total ram usage:        3 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; Hardware stack levels required when called:    5
  2890 ;; This function calls:
  2891 ;;		_SPI_WriteBytes
  2892 ;;		_radio_comm_PollCTS
  2893 ;; This function is called by:
  2894 ;;		_si4355_start_rx
  2895 ;;		_radio_comm_SendCmdGetResp
  2896 ;;		_si4355_nop
  2897 ;;		_si4355_power_up
  2898 ;;		_si4355_set_property
  2899 ;;		_si4355_change_state
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           
  2904                           ;psect for function _radio_comm_SendCmd
  2905  02C3                     _radio_comm_SendCmd:	
  2906                           
  2907                           ;incstack = 0
  2908                           ; Regs used in _radio_comm_SendCmd: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2909                           ;radio_comm_SendCmd@byteCount stored from wreg
  2910  02C3  0020               	movlb	0	; select bank0
  2911  02C4  00CC               	movwf	radio_comm_SendCmd@byteCount
  2912                           
  2913                           ;comm.c: 45: if ( byteCount == 1 )
  2914  02C5  034C               	decf	radio_comm_SendCmd@byteCount,w
  2915  02C6  1D03               	btfss	3,2
  2916  02C7  2ACC               	goto	l1803
  2917                           
  2918                           ;comm.c: 46: byteCount++;
  2919  02C8  3001               	movlw	1
  2920  02C9  00CB               	movwf	??_radio_comm_SendCmd
  2921  02CA  084B               	movf	??_radio_comm_SendCmd,w
  2922  02CB  07CC               	addwf	radio_comm_SendCmd@byteCount,f
  2923  02CC                     l1803:	
  2924                           ;comm.c: 48: while( !ctsWentHigh )
  2925                           
  2926  02CC  087C               	movf	_ctsWentHigh,w
  2927  02CD  1D03               	btfss	3,2
  2928  02CE  2AD3               	goto	l294
  2929                           
  2930                           ;comm.c: 49: {
  2931                           ;comm.c: 50: radio_comm_PollCTS();
  2932  02CF  3183  23D4  3182   	fcall	_radio_comm_PollCTS
  2933  02D2  2ACC               	goto	l1803
  2934  02D3                     l294:	
  2935                           
  2936                           ;comm.c: 51: }
  2937                           ;comm.c: 52: RA5 = 0;
  2938  02D3  0020               	movlb	0	; select bank0
  2939  02D4  128C               	bcf	12,5	;volatile
  2940                           
  2941                           ;comm.c: 53: SPI_WriteBytes( byteCount, pData );
  2942  02D5  087B               	movf	radio_comm_SendCmd@pData,w
  2943  02D6  00CB               	movwf	??_radio_comm_SendCmd
  2944  02D7  084B               	movf	??_radio_comm_SendCmd,w
  2945  02D8  00F3               	movwf	SPI_WriteBytes@data
  2946  02D9  084C               	movf	radio_comm_SendCmd@byteCount,w
  2947  02DA  3183  237B         	fcall	_SPI_WriteBytes
  2948                           
  2949                           ;comm.c: 54: RA5 = 1;
  2950  02DC  0020               	movlb	0	; select bank0
  2951  02DD  168C               	bsf	12,5	;volatile
  2952                           
  2953                           ;comm.c: 55: ctsWentHigh = 0;
  2954  02DE  01FC               	clrf	_ctsWentHigh
  2955  02DF  0008               	return
  2956  02E0                     __end_of_radio_comm_SendCmd:	
  2957                           
  2958                           	psect	text14
  2959  03D4                     __ptext14:	
  2960 ;; *************** function _radio_comm_PollCTS *****************
  2961 ;; Defined at:
  2962 ;;		line 36 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/comm.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;		None
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;		None
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  1    wreg      unsigned char 
  2969 ;; Registers used:
  2970 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2976 ;;      Params:         0       0       0       0
  2977 ;;      Locals:         0       0       0       0
  2978 ;;      Temps:          0       0       0       0
  2979 ;;      Totals:         0       0       0       0
  2980 ;;Total ram usage:        0 bytes
  2981 ;; Hardware stack levels used:    1
  2982 ;; Hardware stack levels required when called:    4
  2983 ;; This function calls:
  2984 ;;		_radio_comm_GetResp
  2985 ;; This function is called by:
  2986 ;;		_Radio_PowerUp
  2987 ;;		_radio_comm_SendCmd
  2988 ;;		_radio_comm_ReadData
  2989 ;;		_radio_comm_WriteData
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993                           
  2994                           ;psect for function _radio_comm_PollCTS
  2995  03D4                     _radio_comm_PollCTS:	
  2996                           
  2997                           ;comm.c: 38: return radio_comm_GetResp( 0, 0 );
  2998                           ;	Return value of _radio_comm_PollCTS is never used
  2999                           
  3000                           ;incstack = 0
  3001                           ; Regs used in _radio_comm_PollCTS: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3002  03D4  01F6               	clrf	radio_comm_GetResp@pData
  3003  03D5  3000               	movlw	0
  3004  03D6  3182  2224         	fcall	_radio_comm_GetResp
  3005  03D8  0008               	return
  3006  03D9                     __end_of_radio_comm_PollCTS:	
  3007                           
  3008                           	psect	text15
  3009  0224                     __ptext15:	
  3010 ;; *************** function _radio_comm_GetResp *****************
  3011 ;; Defined at:
  3012 ;;		line 8 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/comm.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;  byteCount       1    wreg     unsigned char 
  3015 ;;  pData           1    6[COMMON] PTR unsigned char 
  3016 ;;		 -> NULL(0), radioCmd(16), 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;  byteCount       1    8[COMMON] unsigned char 
  3019 ;;  errCnt          2    9[COMMON] unsigned int 
  3020 ;; Return value:  Size  Location     Type
  3021 ;;                  1    wreg      unsigned char 
  3022 ;; Registers used:
  3023 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3029 ;;      Params:         1       0       0       0
  3030 ;;      Locals:         3       0       0       0
  3031 ;;      Temps:          1       0       0       0
  3032 ;;      Totals:         5       0       0       0
  3033 ;;Total ram usage:        5 bytes
  3034 ;; Hardware stack levels used:    1
  3035 ;; Hardware stack levels required when called:    3
  3036 ;; This function calls:
  3037 ;;		_SPI_ReadByte
  3038 ;;		_SPI_ReadBytes
  3039 ;;		_SPI_WriteByte
  3040 ;; This function is called by:
  3041 ;;		_radio_comm_PollCTS
  3042 ;;		_radio_comm_SendCmdGetResp
  3043 ;;		_si4355_ezconfig_check
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           
  3048                           ;psect for function _radio_comm_GetResp
  3049  0224                     _radio_comm_GetResp:	
  3050                           
  3051                           ;incstack = 0
  3052                           ; Regs used in _radio_comm_GetResp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3053                           ;radio_comm_GetResp@byteCount stored from wreg
  3054  0224  00F8               	movwf	radio_comm_GetResp@byteCount
  3055                           
  3056                           ;comm.c: 10: U16 errCnt = 5000;
  3057  0225  3088               	movlw	136
  3058  0226  00F9               	movwf	radio_comm_GetResp@errCnt
  3059  0227  3013               	movlw	19
  3060  0228  00FA               	movwf	radio_comm_GetResp@errCnt+1
  3061                           
  3062                           ;comm.c: 11: while( errCnt != 0 )
  3063  0229  2A30               	goto	l1773
  3064  022A                     l281:	
  3065                           ;comm.c: 23: break;
  3066                           
  3067                           
  3068                           ;comm.c: 24: }
  3069                           ;comm.c: 25: RA5 = 1;
  3070  022A  0020               	movlb	0	; select bank0
  3071  022B  168C               	bsf	12,5	;volatile
  3072                           
  3073                           ;comm.c: 26: errCnt--;
  3074  022C  3001               	movlw	1
  3075  022D  02F9               	subwf	radio_comm_GetResp@errCnt,f
  3076  022E  3000               	movlw	0
  3077  022F  3BFA               	subwfb	radio_comm_GetResp@errCnt+1,f
  3078  0230                     l1773:	
  3079  0230  0879               	movf	radio_comm_GetResp@errCnt,w
  3080  0231  047A               	iorwf	radio_comm_GetResp@errCnt+1,w
  3081  0232  1903               	btfsc	3,2
  3082  0233  2A50               	goto	l1775
  3083                           
  3084                           ;comm.c: 12: {
  3085                           ;comm.c: 13: RA5 = 0;
  3086  0234  0020               	movlb	0	; select bank0
  3087  0235  128C               	bcf	12,5	;volatile
  3088                           
  3089                           ;comm.c: 14: SPI_WriteByte( 0x44 );
  3090  0236  3044               	movlw	68
  3091  0237  3183  239C  3182   	fcall	_SPI_WriteByte
  3092                           
  3093                           ;comm.c: 15: ctsWentHigh = SPI_ReadByte();
  3094  023A  3183  23B5  3182   	fcall	_SPI_ReadByte
  3095  023D  00F7               	movwf	??_radio_comm_GetResp
  3096  023E  0877               	movf	??_radio_comm_GetResp,w
  3097  023F  00FC               	movwf	_ctsWentHigh
  3098                           
  3099                           ;comm.c: 16: if( ctsWentHigh )
  3100  0240  087C               	movf	_ctsWentHigh,w
  3101  0241  1903               	btfsc	3,2
  3102  0242  2A2A               	goto	l281
  3103                           
  3104                           ;comm.c: 17: {
  3105                           ;comm.c: 18: if( byteCount )
  3106  0243  0878               	movf	radio_comm_GetResp@byteCount,w
  3107  0244  1903               	btfsc	3,2
  3108  0245  2A4E               	goto	l1769
  3109                           
  3110                           ;comm.c: 19: {
  3111                           ;comm.c: 20: SPI_ReadBytes( byteCount, pData );
  3112  0246  0876               	movf	radio_comm_GetResp@pData,w
  3113  0247  00F7               	movwf	??_radio_comm_GetResp
  3114  0248  0877               	movf	??_radio_comm_GetResp,w
  3115  0249  00F3               	movwf	SPI_ReadBytes@data
  3116  024A  0878               	movf	radio_comm_GetResp@byteCount,w
  3117  024B  3183  2342  3182   	fcall	_SPI_ReadBytes
  3118  024E                     l1769:	
  3119                           
  3120                           ;comm.c: 21: }
  3121                           ;comm.c: 22: RA5 = 1;
  3122  024E  0020               	movlb	0	; select bank0
  3123  024F  168C               	bsf	12,5	;volatile
  3124  0250                     l1775:	
  3125                           
  3126                           ;comm.c: 27: }
  3127                           ;comm.c: 29: if( errCnt == 0 )
  3128  0250  0879               	movf	radio_comm_GetResp@errCnt,w
  3129  0251  047A               	iorwf	radio_comm_GetResp@errCnt+1,w
  3130  0252  1D03               	btfss	3,2
  3131  0253  2A56               	goto	l1781
  3132                           
  3133                           ;comm.c: 30: {
  3134                           ;comm.c: 31: return 0;
  3135  0254  3000               	movlw	0
  3136  0255  0008               	return
  3137  0256                     l1781:	
  3138                           
  3139                           ;comm.c: 32: }
  3140                           ;comm.c: 33: return ctsWentHigh;
  3141  0256  087C               	movf	_ctsWentHigh,w
  3142  0257  0008               	return
  3143  0258                     __end_of_radio_comm_GetResp:	
  3144                           
  3145                           	psect	text16
  3146  0342                     __ptext16:	
  3147 ;; *************** function _SPI_ReadBytes *****************
  3148 ;; Defined at:
  3149 ;;		line 45 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/spi.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;  len             1    wreg     unsigned char 
  3152 ;;  data            1    3[COMMON] PTR unsigned char 
  3153 ;;		 -> NULL(0), radioCmd(16), RadioPacket(7), 
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;  len             1    5[COMMON] unsigned char 
  3156 ;; Return value:  Size  Location     Type
  3157 ;;                  1    wreg      void 
  3158 ;; Registers used:
  3159 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3160 ;; Tracked objects:
  3161 ;;		On entry : 0/0
  3162 ;;		On exit  : 0/0
  3163 ;;		Unchanged: 0/0
  3164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3165 ;;      Params:         1       0       0       0
  3166 ;;      Locals:         1       0       0       0
  3167 ;;      Temps:          1       0       0       0
  3168 ;;      Totals:         3       0       0       0
  3169 ;;Total ram usage:        3 bytes
  3170 ;; Hardware stack levels used:    1
  3171 ;; Hardware stack levels required when called:    2
  3172 ;; This function calls:
  3173 ;;		_SPI_ReadByte
  3174 ;; This function is called by:
  3175 ;;		_radio_comm_GetResp
  3176 ;;		_radio_comm_ReadData
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           
  3181                           ;psect for function _SPI_ReadBytes
  3182  0342                     _SPI_ReadBytes:	
  3183                           
  3184                           ;incstack = 0
  3185                           ; Regs used in _SPI_ReadBytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3186                           ;SPI_ReadBytes@len stored from wreg
  3187  0342  00F5               	movwf	SPI_ReadBytes@len
  3188  0343                     l1755:	
  3189                           ;spi.c: 47: while( len-- )
  3190                           
  3191  0343  3001               	movlw	1
  3192  0344  02F5               	subwf	SPI_ReadBytes@len,f
  3193  0345  0A75               	incf	SPI_ReadBytes@len,w
  3194  0346  1903               	btfsc	3,2
  3195  0347  0008               	return
  3196                           
  3197                           ;spi.c: 48: {
  3198                           ;spi.c: 49: *data++ = SPI_ReadByte();
  3199  0348  3183  23B5  3183   	fcall	_SPI_ReadByte
  3200  034B  00F4               	movwf	??_SPI_ReadBytes
  3201  034C  0873               	movf	SPI_ReadBytes@data,w
  3202  034D  0086               	movwf	6
  3203  034E  0187               	clrf	7
  3204  034F  0874               	movf	??_SPI_ReadBytes,w
  3205  0350  0081               	movwf	1
  3206  0351  3001               	movlw	1
  3207  0352  00F4               	movwf	??_SPI_ReadBytes
  3208  0353  0874               	movf	??_SPI_ReadBytes,w
  3209  0354  07F3               	addwf	SPI_ReadBytes@data,f
  3210  0355  2B43               	goto	l1755
  3211  0356                     __end_of_SPI_ReadBytes:	
  3212                           
  3213                           	psect	text17
  3214  03B5                     __ptext17:	
  3215 ;; *************** function _SPI_ReadByte *****************
  3216 ;; Defined at:
  3217 ;;		line 53 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/spi.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;		None
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;  data            1    2[COMMON] unsigned char 
  3222 ;; Return value:  Size  Location     Type
  3223 ;;                  1    wreg      unsigned char 
  3224 ;; Registers used:
  3225 ;;		wreg, status,2
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3231 ;;      Params:         0       0       0       0
  3232 ;;      Locals:         1       0       0       0
  3233 ;;      Temps:          1       0       0       0
  3234 ;;      Totals:         2       0       0       0
  3235 ;;Total ram usage:        2 bytes
  3236 ;; Hardware stack levels used:    1
  3237 ;; Hardware stack levels required when called:    1
  3238 ;; This function calls:
  3239 ;;		Nothing
  3240 ;; This function is called by:
  3241 ;;		_SPI_ReadBytes
  3242 ;;		_main
  3243 ;;		_radio_comm_GetResp
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           
  3247                           
  3248                           ;psect for function _SPI_ReadByte
  3249  03B5                     _SPI_ReadByte:	
  3250                           
  3251                           ;spi.c: 55: register U8 data = 0;
  3252                           
  3253                           ;incstack = 0
  3254                           ; Regs used in _SPI_ReadByte: [wreg+status,2]
  3255  03B5  01F2               	clrf	SPI_ReadByte@data
  3256                           
  3257                           ;spi.c: 56: SSPBUF = 0;
  3258  03B6  0024               	movlb	4	; select bank4
  3259  03B7  0191               	clrf	17	;volatile
  3260  03B8                     l58:	
  3261                           ;spi.c: 57: while( BF == 0 );
  3262                           
  3263  03B8  1C14               	btfss	20,0	;volatile
  3264  03B9  2BB8               	goto	l58
  3265                           
  3266                           ;spi.c: 58: data = SSPBUF;
  3267  03BA  0811               	movf	17,w	;volatile
  3268  03BB  00F1               	movwf	??_SPI_ReadByte
  3269  03BC  0871               	movf	??_SPI_ReadByte,w
  3270  03BD  00F2               	movwf	SPI_ReadByte@data
  3271                           
  3272                           ;spi.c: 59: return data;
  3273  03BE  0872               	movf	SPI_ReadByte@data,w
  3274  03BF  0008               	return
  3275  03C0                     __end_of_SPI_ReadByte:	
  3276                           
  3277                           	psect	text18
  3278  037B                     __ptext18:	
  3279 ;; *************** function _SPI_WriteBytes *****************
  3280 ;; Defined at:
  3281 ;;		line 30 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/spi.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;  len             1    wreg     unsigned char 
  3284 ;;  data            1    3[COMMON] PTR unsigned char 
  3285 ;;		 -> radioCmd(16), 
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;  len             1    5[COMMON] unsigned char 
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  1    wreg      void 
  3290 ;; Registers used:
  3291 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3297 ;;      Params:         1       0       0       0
  3298 ;;      Locals:         1       0       0       0
  3299 ;;      Temps:          1       0       0       0
  3300 ;;      Totals:         3       0       0       0
  3301 ;;Total ram usage:        3 bytes
  3302 ;; Hardware stack levels used:    1
  3303 ;; Hardware stack levels required when called:    2
  3304 ;; This function calls:
  3305 ;;		_SPI_WriteByte
  3306 ;; This function is called by:
  3307 ;;		_radio_comm_SendCmd
  3308 ;;		_radio_comm_WriteData
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           
  3313                           ;psect for function _SPI_WriteBytes
  3314  037B                     _SPI_WriteBytes:	
  3315                           
  3316                           ;incstack = 0
  3317                           ; Regs used in _SPI_WriteBytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3318                           ;SPI_WriteBytes@len stored from wreg
  3319  037B  00F5               	movwf	SPI_WriteBytes@len
  3320  037C                     l1791:	
  3321                           ;spi.c: 32: while( len-- )
  3322                           
  3323  037C  3001               	movlw	1
  3324  037D  02F5               	subwf	SPI_WriteBytes@len,f
  3325  037E  0A75               	incf	SPI_WriteBytes@len,w
  3326  037F  1903               	btfsc	3,2
  3327  0380  0008               	return
  3328                           
  3329                           ;spi.c: 33: {
  3330                           ;spi.c: 34: SPI_WriteByte( *data++ );
  3331  0381  0873               	movf	SPI_WriteBytes@data,w
  3332  0382  0086               	movwf	6
  3333  0383  0187               	clrf	7
  3334  0384  0801               	movf	1,w
  3335  0385  3183  239C  3183   	fcall	_SPI_WriteByte
  3336  0388  3001               	movlw	1
  3337  0389  00F4               	movwf	??_SPI_WriteBytes
  3338  038A  0874               	movf	??_SPI_WriteBytes,w
  3339  038B  07F3               	addwf	SPI_WriteBytes@data,f
  3340  038C  2B7C               	goto	l1791
  3341  038D                     __end_of_SPI_WriteBytes:	
  3342                           
  3343                           	psect	text19
  3344  039C                     __ptext19:	
  3345 ;; *************** function _SPI_WriteByte *****************
  3346 ;; Defined at:
  3347 ;;		line 38 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/spi.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;  data            1    wreg     unsigned char 
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;  data            1    2[COMMON] unsigned char 
  3352 ;; Return value:  Size  Location     Type
  3353 ;;                  1    wreg      void 
  3354 ;; Registers used:
  3355 ;;		wreg
  3356 ;; Tracked objects:
  3357 ;;		On entry : 0/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3361 ;;      Params:         0       0       0       0
  3362 ;;      Locals:         1       0       0       0
  3363 ;;      Temps:          1       0       0       0
  3364 ;;      Totals:         2       0       0       0
  3365 ;;Total ram usage:        2 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; Hardware stack levels required when called:    1
  3368 ;; This function calls:
  3369 ;;		Nothing
  3370 ;; This function is called by:
  3371 ;;		_SPI_WriteBytes
  3372 ;;		_main
  3373 ;;		_radio_comm_GetResp
  3374 ;;		_radio_comm_ReadData
  3375 ;;		_si4355_ezconfig_check
  3376 ;;		_radio_comm_WriteData
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380                           
  3381                           ;psect for function _SPI_WriteByte
  3382  039C                     _SPI_WriteByte:	
  3383                           
  3384                           ;incstack = 0
  3385                           ; Regs used in _SPI_WriteByte: [wreg]
  3386                           ;SPI_WriteByte@data stored from wreg
  3387  039C  00F2               	movwf	SPI_WriteByte@data
  3388                           
  3389                           ;spi.c: 40: SSPBUF = data;
  3390  039D  0872               	movf	SPI_WriteByte@data,w
  3391  039E  0024               	movlb	4	; select bank4
  3392  039F  0091               	movwf	17	;volatile
  3393  03A0                     l46:	
  3394                           ;spi.c: 41: while( !SSP1IF );
  3395                           
  3396  03A0  0020               	movlb	0	; select bank0
  3397  03A1  1D91               	btfss	17,3	;volatile
  3398  03A2  2BA0               	goto	l46
  3399                           
  3400                           ;spi.c: 42: data = SSPBUF;
  3401  03A3  0024               	movlb	4	; select bank4
  3402  03A4  0811               	movf	17,w	;volatile
  3403  03A5  00F1               	movwf	??_SPI_WriteByte
  3404  03A6  0871               	movf	??_SPI_WriteByte,w
  3405  03A7  00F2               	movwf	SPI_WriteByte@data
  3406  03A8  0008               	return
  3407  03A9                     __end_of_SPI_WriteByte:	
  3408                           
  3409                           	psect	text20
  3410  03A9                     __ptext20:	
  3411 ;; *************** function _HW_Config *****************
  3412 ;; Defined at:
  3413 ;;		line 4 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/config.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;		None
  3416 ;; Auto vars:     Size  Location     Type
  3417 ;;		None
  3418 ;; Return value:  Size  Location     Type
  3419 ;;                  1    wreg      void 
  3420 ;; Registers used:
  3421 ;;		wreg, status,2
  3422 ;; Tracked objects:
  3423 ;;		On entry : 0/0
  3424 ;;		On exit  : 0/0
  3425 ;;		Unchanged: 0/0
  3426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3427 ;;      Params:         0       0       0       0
  3428 ;;      Locals:         0       0       0       0
  3429 ;;      Temps:          0       0       0       0
  3430 ;;      Totals:         0       0       0       0
  3431 ;;Total ram usage:        0 bytes
  3432 ;; Hardware stack levels used:    1
  3433 ;; Hardware stack levels required when called:    1
  3434 ;; This function calls:
  3435 ;;		Nothing
  3436 ;; This function is called by:
  3437 ;;		_main
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440                           
  3441                           
  3442                           ;psect for function _HW_Config
  3443  03A9                     _HW_Config:	
  3444                           
  3445                           ;config.c: 6: ANSELA = 0x00;
  3446                           
  3447                           ;incstack = 0
  3448                           ; Regs used in _HW_Config: [wreg+status,2]
  3449  03A9  0023               	movlb	3	; select bank3
  3450  03AA  018C               	clrf	12	;volatile
  3451                           
  3452                           ;config.c: 7: TRISA = 0xCC;
  3453  03AB  30CC               	movlw	204
  3454  03AC  0021               	movlb	1	; select bank1
  3455  03AD  008C               	movwf	12	;volatile
  3456                           
  3457                           ;config.c: 8: PORTA = 0x22;
  3458  03AE  3022               	movlw	34
  3459  03AF  0020               	movlb	0	; select bank0
  3460  03B0  008C               	movwf	12	;volatile
  3461                           
  3462                           ;config.c: 9: RA1 = 1;
  3463  03B1  148C               	bsf	12,1	;volatile
  3464                           
  3465                           ;config.c: 10: RA0 = 0;
  3466  03B2  100C               	bcf	12,0	;volatile
  3467                           
  3468                           ;config.c: 11: RA5 = 1;
  3469  03B3  168C               	bsf	12,5	;volatile
  3470  03B4  0008               	return
  3471  03B5                     __end_of_HW_Config:	
  3472                           
  3473                           	psect	intentry
  3474  0004                     __pintentry:	
  3475 ;; *************** function _Timer0_ISR *****************
  3476 ;; Defined at:
  3477 ;;		line 57 in file "C:/Users/Matthew Fonken/Desktop/brx/brx.X/main.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;		None
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;		None
  3482 ;; Return value:  Size  Location     Type
  3483 ;;                  1    wreg      void 
  3484 ;; Registers used:
  3485 ;;		wreg
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3491 ;;      Params:         0       0       0       0
  3492 ;;      Locals:         0       0       0       0
  3493 ;;      Temps:          1       0       0       0
  3494 ;;      Totals:         1       0       0       0
  3495 ;;Total ram usage:        1 bytes
  3496 ;; Hardware stack levels used:    1
  3497 ;; This function calls:
  3498 ;;		Nothing
  3499 ;; This function is called by:
  3500 ;;		Interrupt level 1
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503                           
  3504  0004                     _Timer0_ISR:	
  3505                           
  3506                           ;incstack = 0
  3507  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3508                           
  3509                           ; Regs used in _Timer0_ISR: [wreg]
  3510  0005  3180               	pagesel	$
  3511  0006  0020               	movlb	0	; select bank0
  3512  0007  087F               	movf	127,w
  3513  0008  00F0               	movwf	??_Timer0_ISR
  3514                           
  3515                           ;main.c: 59: TMR0IF = 0;
  3516  0009  110B               	bcf	11,2	;volatile
  3517                           
  3518                           ;main.c: 60: counter++;
  3519  000A  3001               	movlw	1
  3520  000B  07B0               	addwf	_counter,f
  3521  000C  3000               	movlw	0
  3522  000D  3DB1               	addwfc	_counter+1,f
  3523                           
  3524                           ;main.c: 61: RA0 = counter & 1;
  3525  000E  1C30               	btfss	_counter,0
  3526  000F  2813               	goto	u58_20
  3527  0010  0020               	movlb	0	; select bank0
  3528  0011  140C               	bsf	12,0	;volatile
  3529  0012  2815               	goto	i1l119
  3530  0013                     u58_20:	
  3531  0013  0020               	movlb	0	; select bank0
  3532  0014  100C               	bcf	12,0	;volatile
  3533  0015                     i1l119:	
  3534  0015  0870               	movf	??_Timer0_ISR,w
  3535  0016  00FF               	movwf	127
  3536  0017  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3537  0018  0009               	retfie
  3538  0019                     __end_of_Timer0_ISR:	
  3539  007E                     btemp	set	126	;btemp
  3540  007E                     int$flags	set	126
  3541  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    274
    Data        8
    BSS         44
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     21      72
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    radio_comm_ReadData@pData	PTR unsigned char  size(1) Largest target is 16
		 -> radioCmd(BANK0[16]), RadioPacket(BANK0[7]), 

    radio_comm_SendCmdGetResp@pRespData	PTR unsigned char  size(1) Largest target is 16
		 -> NULL(NULL[0]), radioCmd(BANK0[16]), 

    radio_comm_SendCmdGetResp@pCmdData	PTR unsigned char  size(1) Largest target is 16
		 -> radioCmd(BANK0[16]), 

    radio_comm_SendCmd@pData	PTR unsigned char  size(1) Largest target is 16
		 -> radioCmd(BANK0[16]), 

    radio_comm_GetResp@pData	PTR unsigned char  size(1) Largest target is 16
		 -> NULL(NULL[0]), radioCmd(BANK0[16]), 

    si4355_read_rx_fifo@pRxData	PTR unsigned char  size(1) Largest target is 7
		 -> RadioPacket(BANK0[7]), 

    si4355_configuration_init@pSetPropCmd	PTR unsigned char  size(2) Largest target is 274
		 -> Radio_Configuration_Data_Array(CODE[274]), 

    pRadioConfiguration.Radio_ConfigurationArray	PTR unsigned char  size(2) Largest target is 274
		 -> Radio_Configuration_Data_Array(CODE[274]), 

    pRadioConfiguration	PTR struct . size(1) Largest target is 7
		 -> RadioConfiguration(BANK0[7]), 

    S101$Radio_ConfigurationArray	PTR unsigned char  size(2) Largest target is 274
		 -> Radio_Configuration_Data_Array(CODE[274]), 

    RadioConfiguration.Radio_ConfigurationArray	PTR unsigned char  size(2) Largest target is 274
		 -> Radio_Configuration_Data_Array(CODE[274]), 

    SPI_ReadBytes@data	PTR unsigned char  size(1) Largest target is 16
		 -> NULL(NULL[0]), radioCmd(BANK0[16]), RadioPacket(BANK0[7]), 

    SPI_WriteBytes@data	PTR unsigned char  size(1) Largest target is 16
		 -> radioCmd(BANK0[16]), 


Critical Paths under _main in COMMON

    _si4355_start_rx->_radio_comm_SendCmd
    _si4355_read_rx_fifo->_radio_comm_ReadData
    _radio_comm_SendCmdGetResp->_radio_comm_SendCmd
    _radio_comm_PollCTS->_radio_comm_GetResp
    _radio_comm_GetResp->_SPI_ReadBytes
    _SPI_ReadBytes->_SPI_ReadByte
    _SPI_WriteBytes->_SPI_WriteByte

Critical Paths under _Timer0_ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _si4355_fifo_info->_radio_comm_SendCmdGetResp
    _Radio_StartRX->_si4355_get_int_status
    _si4355_start_rx->_radio_comm_SendCmd
    _Radio_Init->_si4355_configuration_init
    _si4355_configuration_init->_si4355_get_int_status
    _Radio_CheckReceived->_si4355_get_int_status
    _si4355_read_rx_fifo->_radio_comm_ReadData
    _si4355_get_int_status->_radio_comm_SendCmdGetResp
    _radio_comm_SendCmdGetResp->_radio_comm_SendCmd

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   34092
                                             18 BANK0      3     3      0
                          _HW_Config
                _Radio_CheckReceived
                         _Radio_Init
                      _Radio_StartRX
                           _SPI_Init
                       _SPI_ReadByte
                      _SPI_WriteByte
                   _si4355_fifo_info
 ---------------------------------------------------------------------------------
 (1) _si4355_fifo_info                                     4     4      0    4252
                                              7 BANK0      4     4      0
          _radio_comm_SendCmdGetResp
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Radio_StartRX                                        3     3      0    7093
                                             13 BANK0      3     3      0
              _si4355_get_int_status
                    _si4355_start_rx
 ---------------------------------------------------------------------------------
 (2) _si4355_start_rx                                      8     2      6    2132
                                              2 BANK0      8     2      6
                 _radio_comm_SendCmd
 ---------------------------------------------------------------------------------
 (1) _Radio_Init                                           0     0      0   15214
                      _Radio_PowerUp
          _si4355_configuration_init
              _si4355_get_int_status
 ---------------------------------------------------------------------------------
 (2) _si4355_configuration_init                            5     3      2    9497
                                             13 BANK0      5     3      2
          _radio_comm_SendCmdGetResp
              _si4355_get_int_status
 ---------------------------------------------------------------------------------
 (2) _Radio_PowerUp                                        2     2      0     787
                                              0 BANK0      2     2      0
                 _radio_comm_PollCTS
 ---------------------------------------------------------------------------------
 (1) _Radio_CheckReceived                                  1     1      0    7357
                                             13 BANK0      1     1      0
              _si4355_get_int_status
                _si4355_read_rx_fifo
 ---------------------------------------------------------------------------------
 (2) _si4355_read_rx_fifo                                  4     3      1    2427
                                              4 BANK0      4     3      1
                _radio_comm_ReadData
 ---------------------------------------------------------------------------------
 (3) _radio_comm_ReadData                                  5     2      3    2288
                                             11 COMMON     1     1      0
                                              0 BANK0      4     1      3
                      _SPI_ReadBytes
                      _SPI_WriteByte
                 _radio_comm_PollCTS
 ---------------------------------------------------------------------------------
 (2) _si4355_get_int_status                                6     4      2    4930
                                              7 BANK0      6     4      2
          _radio_comm_SendCmdGetResp
 ---------------------------------------------------------------------------------
 (2) _radio_comm_SendCmdGetResp                            5     2      3    4221
                                              2 BANK0      5     2      3
                 _radio_comm_GetResp
                 _radio_comm_SendCmd
 ---------------------------------------------------------------------------------
 (3) _radio_comm_SendCmd                                   3     2      1    1530
                                             11 COMMON     1     0      1
                                              0 BANK0      2     2      0
                     _SPI_WriteBytes
                 _radio_comm_PollCTS
 ---------------------------------------------------------------------------------
 (4) _radio_comm_PollCTS                                   0     0      0     719
                 _radio_comm_GetResp
 ---------------------------------------------------------------------------------
 (5) _radio_comm_GetResp                                   5     4      1     719
                                              6 COMMON     5     4      1
                       _SPI_ReadByte
                      _SPI_ReadBytes
                      _SPI_WriteByte
 ---------------------------------------------------------------------------------
 (6) _SPI_ReadBytes                                        3     2      1     256
                                              3 COMMON     3     2      1
                       _SPI_ReadByte
 ---------------------------------------------------------------------------------
 (7) _SPI_ReadByte                                         2     2      0      37
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _SPI_WriteBytes                                       3     2      1     253
                                              3 COMMON     3     2      1
                      _SPI_WriteByte
 ---------------------------------------------------------------------------------
 (6) _SPI_WriteByte                                        2     2      0      34
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _HW_Config                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _Timer0_ISR                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HW_Config
   _Radio_CheckReceived
     _si4355_get_int_status
       _radio_comm_SendCmdGetResp
         _radio_comm_GetResp
           _SPI_ReadByte
           _SPI_ReadBytes
             _SPI_ReadByte
           _SPI_WriteByte
         _radio_comm_SendCmd
           _SPI_WriteBytes
             _SPI_WriteByte
           _radio_comm_PollCTS
             _radio_comm_GetResp
               _SPI_ReadByte
               _SPI_ReadBytes
                 _SPI_ReadByte
               _SPI_WriteByte
     _si4355_read_rx_fifo
       _radio_comm_ReadData
         _SPI_ReadBytes
           _SPI_ReadByte
         _SPI_WriteByte
         _radio_comm_PollCTS
           _radio_comm_GetResp
             _SPI_ReadByte
             _SPI_ReadBytes
               _SPI_ReadByte
             _SPI_WriteByte
   _Radio_Init
     _Radio_PowerUp
       _radio_comm_PollCTS
         _radio_comm_GetResp
           _SPI_ReadByte
           _SPI_ReadBytes
             _SPI_ReadByte
           _SPI_WriteByte
     _si4355_configuration_init
       _radio_comm_SendCmdGetResp
         _radio_comm_GetResp
           _SPI_ReadByte
           _SPI_ReadBytes
             _SPI_ReadByte
           _SPI_WriteByte
         _radio_comm_SendCmd
           _SPI_WriteBytes
             _SPI_WriteByte
           _radio_comm_PollCTS
             _radio_comm_GetResp
               _SPI_ReadByte
               _SPI_ReadBytes
                 _SPI_ReadByte
               _SPI_WriteByte
       _si4355_get_int_status
         _radio_comm_SendCmdGetResp
           _radio_comm_GetResp
             _SPI_ReadByte
             _SPI_ReadBytes
               _SPI_ReadByte
             _SPI_WriteByte
           _radio_comm_SendCmd
             _SPI_WriteBytes
               _SPI_WriteByte
             _radio_comm_PollCTS
               _radio_comm_GetResp
                 _SPI_ReadByte
                 _SPI_ReadBytes
                   _SPI_ReadByte
                 _SPI_WriteByte
     _si4355_get_int_status
       _radio_comm_SendCmdGetResp
         _radio_comm_GetResp
           _SPI_ReadByte
           _SPI_ReadBytes
             _SPI_ReadByte
           _SPI_WriteByte
         _radio_comm_SendCmd
           _SPI_WriteBytes
             _SPI_WriteByte
           _radio_comm_PollCTS
             _radio_comm_GetResp
               _SPI_ReadByte
               _SPI_ReadBytes
                 _SPI_ReadByte
               _SPI_WriteByte
   _Radio_StartRX
     _si4355_get_int_status
       _radio_comm_SendCmdGetResp
         _radio_comm_GetResp
           _SPI_ReadByte
           _SPI_ReadBytes
             _SPI_ReadByte
           _SPI_WriteByte
         _radio_comm_SendCmd
           _SPI_WriteBytes
             _SPI_WriteByte
           _radio_comm_PollCTS
             _radio_comm_GetResp
               _SPI_ReadByte
               _SPI_ReadBytes
                 _SPI_ReadByte
               _SPI_WriteByte
     _si4355_start_rx
       _radio_comm_SendCmd
         _SPI_WriteBytes
           _SPI_WriteByte
         _radio_comm_PollCTS
           _radio_comm_GetResp
             _SPI_ReadByte
             _SPI_ReadBytes
               _SPI_ReadByte
             _SPI_WriteByte
   _SPI_Init
   _SPI_ReadByte
   _SPI_WriteByte
   _si4355_fifo_info
     _radio_comm_SendCmdGetResp
       _radio_comm_GetResp
         _SPI_ReadByte
         _SPI_ReadBytes
           _SPI_ReadByte
         _SPI_WriteByte
       _radio_comm_SendCmd
         _SPI_WriteBytes
           _SPI_WriteByte
         _radio_comm_PollCTS
           _radio_comm_GetResp
             _SPI_ReadByte
             _SPI_ReadBytes
               _SPI_ReadByte
             _SPI_WriteByte

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      55       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     15      48       6       90.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      55      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Feb 09 01:10:53 2017

                           __CFG_CP$OFF 0000                                      _BF 10A0  
                                    l46 03A0                                      l58 03B8  
     radio_comm_SendCmdGetResp@pCmdData 004D                       ?_si4355_fifo_info 0070  
                                   l106 01BC                                     l115 01D2  
                                   l116 01DF                                     l301 02B1  
                                   l281 022A                                     l197 018B  
                                   l294 02D3                                     _CKE 10A6  
                                   _CKP 10AC                                     _GIE 005F  
                                   _RA0 0060                                     _RA1 0061  
                                   _RA3 0063                                     _RA5 0065  
                   _pRadioConfiguration 0060                            __CFG_CPD$OFF 0000  
                                   _SMP 10A7      __size_of_radio_comm_SendCmdGetResp 0013  
                    ??_si4355_fifo_info 0052                            __CFG_BORV$LO 0000  
                                   wreg 0009                            __CFG_IESO$ON 0000  
                          __CFG_LVP$OFF 0000                                    l1803 02CC  
                                  l1841 02AE                                    l1755 0343  
                                  l1781 0256                                    l1773 0230  
                                  l1791 037C                                    l1775 0250  
                                  l1839 02AB                                    l1943 0340  
                                  l1769 024E                                    l1857 031D  
                                  l1881 0163                                    l1873 0162  
                                  l1859 0328                                    l1883 017C  
                                  l1891 0148                                    l1955 01A5  
                                  l1893 0195                                    l1965 01AB  
                                  l1957 01AA                                    l1975 01CE  
                                  l1967 01BD                                    l1969 01C0  
                                  _TMR0 0015                            __CFG_WRT$OFF 0000  
                         __CFG_FCMEN$ON 0000                                    _main 0197  
                     ??_si4355_start_rx 0053                                    fsr0h 0005  
                                  fsr1h 0007                                    indf0 0000  
                                  fsr0l 0004                                    indf1 0001  
                                  fsr1l 0006                                    btemp 007E  
                __size_of_Radio_PowerUp 0018                           __CFG_BOREN$ON 0000  
                  si4355_fifo_info@FIFO 0055                  __size_of_Radio_StartRX 001B  
                                  start 0019                          ?_SPI_ReadBytes 0073  
                         _SPI_WriteByte 039C                           __CFG_MCLRE$ON 0000  
               ??_si4355_get_int_status 0054                           __CFG_PLLEN$ON 0000  
           si4355_read_rx_fifo@numBytes 0052                                   ?_main 0070  
           ??_si4355_configuration_init 005A                           __CFG_WDTE$OFF 0000  
                                 i1l119 0015                                   _PORTA 000C  
 radio_comm_SendCmdGetResp@cmdByteCount 0051                                   _STATE 0032  
                                 _SSPM0 10A8                                   _SSPM1 10A9  
                                 _SSPM2 10AA                                   _SSPM3 10AB  
                                 _TRISA 008C                                   u58_20 0013  
                                 _SSPEN 10AD                                   _SSSEL 08ED  
     __end_of_radio_comm_SendCmdGetResp 0369                      __size_of_HW_Config 000C  
                      SPI_ReadByte@data 0072                                   _dummy 0033  
                                 main@r 005E                        __end_of_SPI_Init 037B  
           __end_of_radio_comm_ReadData 02C3                        SPI_ReadBytes@len 0075  
                                 status 0003                                   wtemp0 007E  
           radio_comm_GetResp@byteCount 0078                          ?_SPI_WriteByte 0070  
                        _SPI_WriteBytes 037B                         __initialization 001B  
                          __end_of_main 01E1                     Radio_PowerUp@wDelay 004B  
                            _Radio_Init 02FB                                  ??_main 005D  
          __size_of_si4355_read_rx_fifo 000F                           _Radio_PowerUp 0313  
                         _Radio_StartRX 02E0                 radio_comm_SendCmd@pData 007B  
                                _ANSELA 018C                   si4355_start_rx@RX_LEN 004E  
                                _SDOSEL 08EE               _si4355_configuration_init 0145  
                                _TMR0IE 005D                                  _TMR0IF 005A  
                                _SSP1IE 048B                                  _SSP1IF 008B  
                       ??_SPI_ReadBytes 0074                                  _SSPBUF 0211  
                __end_of_SPI_WriteBytes 038D                          __CFG_PWRTE$OFF 0000  
                            _Timer0_ISR 0004                       __end_of_HW_Config 03B5  
                        __CFG_STVREN$ON 0000                          ?_Radio_PowerUp 0070  
                        ?_Radio_StartRX 0070             __size_of_radio_comm_GetResp 0034  
           radio_comm_SendCmd@byteCount 004C            __size_of_Radio_CheckReceived 0017  
                     SPI_ReadBytes@data 0073             __size_of_radio_comm_SendCmd 001D  
           __size_of_radio_comm_PollCTS 0005                 __end_of__initialization 002F  
                       ??_SPI_WriteByte 0071                         ?_SPI_WriteBytes 0073  
                        __pcstackCOMMON 0070                            __pidataBANK0 03C0  
                           ?_Radio_Init 0070                             _RadioPacket 0044  
                             ?_SPI_Init 0070      si4355_get_int_status@CHIP_CLR_PEND 0053  
                       _si4355_start_rx 0258  __end_of_Radio_Configuration_Data_Array 0145  
        _Radio_Configuration_Data_Array 0033                              __pbssBANK0 0020  
             __size_of_si4355_fifo_info 0023                             ?_Timer0_ISR 0070  
                si4355_start_rx@CHANNEL 0054                              __pmaintext 0197  
                            __pintentry 0004                         ??_Radio_PowerUp 007B  
                       ??_Radio_StartRX 0058          __size_of_si4355_get_int_status 0043  
         __end_of_si4355_get_int_status 0224                si4355_start_rx@CONDITION 004D  
                            ??_SPI_Init 0071              si4355_start_rx@NEXT_STATE1 0050  
            si4355_start_rx@NEXT_STATE2 0051              si4355_start_rx@NEXT_STATE3 0052  
                   __size_of_Radio_Init 0018                     _si4355_read_rx_fifo 038D  
    __size_of_si4355_configuration_init 0052                       SPI_WriteByte@data 0072  
               __end_of_si4355_start_rx 0282                       SPI_WriteBytes@len 0075  
                               __ptext1 0282                                 __ptext2 0369  
                               __ptext3 02E0                                 __ptext4 0258  
                               __ptext5 02FB                                 __ptext6 0145  
                               __ptext7 0313                                 __ptext8 032B  
                               __ptext9 038D                    ?_si4355_read_rx_fifo 004F  
                               _counter 0030                     __size_of_Timer0_ISR 0015  
            ?_radio_comm_SendCmdGetResp 004D                  radio_comm_ReadData@cmd 004E  
                               clrloop0 03CF                    end_of_initialization 002F  
                               init_ram 03C8                                 initloop 03C9  
                   _Radio_CheckReceived 032B            __size_of_radio_comm_ReadData 001E  
               radio_comm_GetResp@pData 0076                            __pstringtext 0033  
     __end_of_si4355_configuration_init 0197                   ??_si4355_read_rx_fifo 0050  
                             _HW_Config 03A9                               _Si4355Cmd 0020  
                  ?_Radio_CheckReceived 0070                        __CFG_FOSC$INTOSC 0000  
                      ??_SPI_WriteBytes 0074                        _si4355_fifo_info 0282  
                 __end_of_SPI_ReadBytes 0356              si4355_read_rx_fifo@pRxData 004F  
                         ?_SPI_ReadByte 0070                            ??_Radio_Init 007C  
                      ?_si4355_start_rx 004D              __end_of_radio_comm_GetResp 0258  
                            ?_HW_Config 0070                   ??_Radio_CheckReceived 0058  
                     __size_of_SPI_Init 0012              __end_of_radio_comm_SendCmd 02E0  
            __end_of_radio_comm_PollCTS 03D9                     start_initialization 001B  
                    __end_of_Radio_Init 0313            si4355_configuration_init@col 005B  
   si4355_get_int_status@MODEM_CLR_PEND 0052                          ??_SPI_ReadByte 0071  
                 __end_of_SPI_WriteByte 03A9                            ??_Timer0_ISR 0070  
                           __pdataBANK0 0060                    Radio_StartRX@channel 005A  
                           __pbssCOMMON 007C                               ___latbits 0001  
                         __pcstackBANK0 004B                      __end_of_Timer0_ISR 0019  
    radio_comm_SendCmdGetResp@pRespData 004F                   __end_of_Radio_PowerUp 032B  
                           ??_HW_Config 0071                   __end_of_Radio_StartRX 02FB  
                 _si4355_get_int_status 01E1                     _radio_comm_ReadData 02A5  
           ??_radio_comm_SendCmdGetResp 0050                               clear_ram0 03CE  
   si4355_configuration_init@numOfBytes 005C                    ?_radio_comm_ReadData 004B  
              __end_of_si4355_fifo_info 02A5                                _SPI_Init 0369  
              radio_comm_ReadData@pData 004D                    __end_of_SPI_ReadByte 03C0  
                           _ctsWentHigh 007C                   ??_radio_comm_ReadData 007B  
           __end_of_si4355_read_rx_fifo 039C               _radio_comm_SendCmdGetResp 0356  
            ?_si4355_configuration_init 0058                  ?_si4355_get_int_status 0052  
  si4355_configuration_init@pSetPropCmd 0058                      SPI_WriteBytes@data 0073  
            radio_comm_ReadData@pollCts 004B                                __ptext10 02A5  
                              __ptext11 01E1                                __ptext20 03A9  
                              __ptext12 0356                                __ptext13 02C3  
                              __ptext14 03D4                                __ptext15 0224  
                              __ptext16 0342                                __ptext17 03B5  
                              __ptext18 037B                                __ptext19 039C  
                    _radio_comm_GetResp 0224                                _radioCmd 0034  
                    _radio_comm_SendCmd 02C3                           __size_of_main 004A  
                    _radio_comm_PollCTS 03D4                     ?_radio_comm_GetResp 0076  
                   ?_radio_comm_SendCmd 007B                     ?_radio_comm_PollCTS 0070  
                              int$flags 007E             __end_of_Radio_CheckReceived 0342  
                              main@wait 005F                    ??_radio_comm_GetResp 0077  
                __size_of_SPI_ReadBytes 0014                    ??_radio_comm_SendCmd 004B  
              __size_of_si4355_start_rx 002A                    ??_radio_comm_PollCTS 007B  
          radio_comm_ReadData@byteCount 004C        si4355_get_int_status@PH_CLR_PEND 0057  
                              intlevel1 0000                       __CFG_CLKOUTEN$OFF 0000  
               __size_of_SPI_WriteBytes 0012                radio_comm_GetResp@errCnt 0079  
                 __size_of_SPI_ReadByte 000B                              _OPTION_REG 0095  
radio_comm_SendCmdGetResp@respByteCount 004E                  __size_of_SPI_WriteByte 000D  
                    _RadioConfiguration 0061                           _SPI_ReadBytes 0342  
                          _SPI_ReadByte 03B5  
